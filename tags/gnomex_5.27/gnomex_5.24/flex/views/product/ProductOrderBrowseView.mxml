<?xml version="1.0" encoding="utf-8"?>
<mx:VBox styleName="panelBox"  xmlns:mx="http://www.adobe.com/2006/mxml" 
		 width="100%" height="100%" 
		 backgroundAlpha="0"
		 xmlns:renderers="views.renderers.*"
		 xmlns:util="views.util.*"  
		 verticalGap="3">
	
	<mx:HTTPService 
		id="getProductOrderLineItemList" 
		url="GetProductOrderLineItemList.gx"
		resultFormat="e4x"
		result="onGetProductOrderLineItemList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get order list', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	
	<mx:Script> 
		<![CDATA[
			import hci.flex.controls.ComboBox;
			
			import mx.core.ScrollPolicy;
			import mx.collections.HierarchicalData;
			import mx.collections.Sort;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			import views.renderers.ComboBoxBillingStatus;
			
			[Bindable]
			public var parentView:NavProductOrderView;
			
			
			public function getList():void {
				getProductOrderLineItemList.send(parentView.getParams());
			}
			
			private function onGetProductOrderLineItemList(event:ResultEvent):void{
				if ( getProductOrderLineItemList.lastResult.name() == "LineItems"){
					selectedOrders.refresh();
					return;
				}
				
				Alert.show( event.result..ERROR.@message.toString(), "Error getting line items" );
				
			}
			
			private function gridItemClick(event:ListEvent):void {
				
				if ( productOrderGrid.selectedItem != null ) {
					parentView.selectedProductOrder = productOrderGrid.selectedItem;
				}
				
				if ( event.columnIndex != 0  ) {
					productOrderGrid.selectedIndex = -1;
				}
				
				if ( event.columnIndex == 0 && productOrderGrid.selectedItems.length > 1 ) {
					for each ( var obj1:Object in productOrderGrid.selectedItems ) {
						obj1.@isSelected = true;
					}
				}
				
				selectedOrders.refresh();
			}
			
			private function selectedFilterFunc(item:XML):Boolean {
				return item.@isSelected == true;
			}
			
			private function getCompleteDateString(item:Object,col:int):String
			{
				return item.@completeDateOther.toString();
			}
			
			private function sortBillingPeriods(obj1:Object, obj2:Object, fields:Array=null):int {
				if (obj1 == null && obj2 == null) {
					return 0;
				} else if (obj1 == null) {
					return 1;
				} else if (obj2 == null) {
					return -1;
				} else {
					var order1:Object = obj1.@startDateSort;
					var order2:Object = obj2.@startDateSort;
					
					if (obj1.@value == '') {
						return -1;
					} else if (obj2.@value == '') {
						return 1;
					} else {
						if (order1 < order2) {
							return -1;
						} else if (order1 > order2) {
							return 1;
						} else {
							return 0;
						}
					}
				}			
			}			 
			
			
		]]>
	</mx:Script>    	
	
	<mx:XMLListCollection id="orderList" source = "{getProductOrderLineItemList.lastResult.LineItem}" />
	<mx:XMLListCollection id="selectedOrders" source="{getProductOrderLineItemList.lastResult.LineItem}" filterFunction="selectedFilterFunc"/>
	
	<mx:DateFormatter id="dateFormatter" formatString="MM/DD/YYYY"/>
	
	<mx:DataGrid id="productOrderGrid" 
				 width="100%" height="100%"
				 minWidth="0" horizontalScrollPolicy="{ScrollPolicy.AUTO}"
				 dataProvider="{orderList}"
				 fontSize="9"
				 sortableColumns="false"
				 wordWrap="true" 
				 showDataTips="true"
				 allowMultipleSelection="true"
				 itemClick = "gridItemClick(event)"
				 click="{selectedOrders.refresh()}">
		<mx:columns>
			<mx:DataGridColumn id = "checkBoxColumn"
							   textAlign = "center"
							   width = "30"
							   resizable = "false"
							   sortable = "false"
							   editable = "true"
							   draggable="false"
							   rendererIsEditor = "true"
							   dataField = "@isSelected"
							   editorDataField = "selected"
							   itemRenderer = "views.renderers.CheckBoxIsSelectedToggle"
							   headerRenderer = "views.renderers.CheckBoxHeader"/>
			<mx:DataGridColumn headerText="Product Order #"
							   dataField="@productOrderNumber" />
			<mx:DataGridColumn headerText="Lab"
							   dataField="@labName"/>
			<mx:DataGridColumn headerText="Submitter"
							   dataField="@submitter"/>
			<mx:DataGridColumn headerText="Product"
							   dataField="@name"/>
			<mx:DataGridColumn headerText="Unit price" 
							   dataField="@unitPrice"  
							   textAlign="right" 
							   editable="false" 
							   wordWrap="false" />
			<mx:DataGridColumn headerText="Qty" 
							   dataField="@qty" 
							   editable="false" 
							   textAlign="right" 
							   wordWrap="false" />
			<mx:DataGridColumn headerText="Total price" 
							   dataField="@totalPrice" 
							   textAlign="right" 
							   editable="false" 
							   wordWrap="false"
							   rendererIsEditor="false"
							   itemRenderer="views.renderers.LabelInvoicePrice" />
			<mx:DataGridColumn headerText="Status" 
							   dataField="@status" 
							   editable="false" 
							   wordWrap="false"
							   editorDataField="value"  
							   rendererIsEditor="false"/>  
		</mx:columns>
	</mx:DataGrid>
	
	
</mx:VBox>