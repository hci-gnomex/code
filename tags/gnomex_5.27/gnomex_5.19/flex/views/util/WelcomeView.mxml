<?xml version="1.0" encoding="utf-8"?> 
<mx:Canvas styleName="panelWelcomeBox"  xmlns:mx="http://www.adobe.com/2006/mxml"   
		   xmlns:views="views.*"    
		   xmlns:db="views.dashboard.*"
		   xmlns:util="views.util.*" 			
		   creationPolicy="all" width="100%" height="100%" horizontalScrollPolicy="off"
		   creationComplete="init()">
	<mx:states> 
		<mx:State name="GuestState">
			<mx:SetProperty target="{text5}" name="text" value="Guest privileges only"/>
		</mx:State>
		<mx:State name="BillingAdminState" basedOn="AdminState">
			<mx:SetProperty target="{text5}" name="text" value="Billing Admin privileges"/>
		</mx:State>
		<mx:State name="AdminState">
			<mx:SetProperty target="{text5}" name="text" value="Admin privileges&#xa;"/>
		</mx:State>
		<mx:State name="UserNonSubmitterState">
			<mx:AddChild relativeTo="{spacer2}" position="before"> 
				<mx:Text text="Restricted access - Please contact support to be added to a lab group"
						 styleName="welcomeUserLabel" id="text3" color="#132A9F" />
			</mx:AddChild>
			<mx:SetProperty target="{text5}" name="text" value="Restricted account access&#xa;"/>
		</mx:State>
		
		<mx:State name="UserState">
			<mx:SetProperty target="{text5}" name="text" value=""/>
		</mx:State>
		
		<mx:State name="UnivGuestState" basedOn="UserNonSubmitterState">
			<mx:SetProperty target="{text3}" name="text" value="Restricted - For additional access, please sign up for a GNomEx user account "/>
			<mx:SetProperty target="{text5}" name="text" value="University guest access"/>
		</mx:State>
		<mx:State name="UnivGuestESState" basedOn="UserNonSubmitterESState">
			<mx:SetProperty target="{text5}" name="text" value="Guess privileges only"/>
		</mx:State>
		
		<mx:State name="AdminSuperState" basedOn="AdminDNASeqState">
			<mx:SetProperty target="{text5}" name="text" value="Super Admin privileges"/>
		</mx:State>
		<mx:State name="BillingAdminDNASeqState" basedOn="AdminDNASeqState">
			<mx:SetProperty target="{text5}" name="text" value="Billing Admin privileges"/>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import hci.flex.dictionary.DictionaryEditor;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import views.admin.BillingAccountFieldsConfigurationWindow;
			import views.admin.PropertyWindow;
			import views.experiment.ExperimentEditView;
			import views.user.EditBillingAcctWindow;
			
			//Additional pixels to move dashboard boxes to the right of splash image.
			private var dashBuffer:int = 30;
			
			public function checkDirty():void {
			}
			
			public function init():void {
				checkSecurity();
				callLater(showSplashAndDash);
			}
			
			private function showSplashAndDash():void {
				//splashImageBox.visible = true;
				splashImage.visible = true;
				
				if(parentApplication.getProperty(parentApplication.PROPERTY_SHOW_NEWS_DASHBOARD) == 'Y'){
					newsButtonBox.visible = true;
				}
				if(parentApplication.getProperty(parentApplication.PROPERTY_SHOW_ACTIVITY_DASHBOARD) == 'Y' && parentApplication.isGuestMode() == false && parentApplication.isUniversityOnlyUser == false ){
					activityBox.visible = true;
				}
				if(parentApplication.isAdminState == true && parentApplication.isGuestMode() == false && parentApplication.isUniversityOnlyUser == false){
					for each (var facility:XML in parentApplication.coreFacilitiesICanManage) {
						if(parentApplication.getCoreFacilityProperty(facility.@idCoreFacility, parentApplication.PROPERTY_SHOW_METRIX_DASHBOARD) == 'Y'){
							sequencerButton.visible = true;
							break;
						}
					}
				}
				
				
			}
			
			public function checkSecurity():void {
				if (parentApplication.currentState == "GuestState") {
					if (parentApplication.isUniversityOnlyUser) {
						this.currentState = "UnivGuestState"
					} else {
						this.currentState = "GuestState";
					}
				} else if (parentApplication.isAdminState) {
					currentState = "AdminState";
				} else if (parentApplication.isBillingAdminState) {
					currentState = "BillingAdminState";
					
				} else if (parentApplication.currentState == "UserNonSubmitterState")  {
					currentState = "UserNonSubmitterState";						
				} else {
					currentState = "UserState";
				}
			}
			
			public function submitRequest(idCoreFacility:String):void {
				// If a request is currently loaded then make sure to reinitialze if changing between internal and external
				if(this.parentApplication.submitRequestView.request != null && !this.parentApplication.isInternalExperimentSubmission) {
					this.parentApplication.submitRequestView.startNewRequest();
				}
				this.parentApplication.isInternalExperimentSubmission = true;
				this.parentApplication.theViews.selectedChild = this.parentApplication.submitRequestView;
				this.parentApplication.submitRequestView.coreFacility = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.CoreFacility', idCoreFacility);
				// If new experiment then initialize ShowCCNumber checkbox
				this.parentApplication.submitRequestView.showCCNumberColumn = "N";
				
				// reset stuff for clinical research integration
				this.parentApplication.submitRequestView.setDefaultRequestCategory(null, null);
			}
			
			private function reviewOrders():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navOrderView;
			}
			
			private function fillPlates( buildState:String ):void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navPlateView;
				callLater ( function():void {
					parentApplication.navPlateView.removeRun();
					parentApplication.navPlateView.toggleBuildState( buildState );
					parentApplication.navPlateView.switchToNewState();
				});
			}
			
			private function reviewRuns():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navRunView;
			}
			
			private function reviewResults():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navDataView;
			}
			
			public function submitExternalExperiment(idCoreFacility:String):void {
				// If a request is currently loaded then make sure to reinitialze if changing between internal and external
				if(this.parentApplication.submitRequestView.request != null && this.parentApplication.isInternalExperimentSubmission) {
					this.parentApplication.submitRequestView.startNewRequest();
				}
				this.parentApplication.isInternalExperimentSubmission = false;
				this.parentApplication.theViews.selectedChild = this.parentApplication.submitRequestView;
				this.parentApplication.submitRequestView.coreFacility = null;	// external does multiple cores simultaneously
				//this.parentApplication.submitRequestView.coreFacility = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.CoreFacility', idCoreFacility);
				// If new experiment then initialize ShowCCNumber checkbox
				this.parentApplication.submitRequestView.showCCNumberColumn = "N";
				
				// reset stuff for clinical research integration
				this.parentApplication.submitRequestView.setDefaultRequestCategory(null, null);
			}
			
			private function amendRequest():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.amendRequestView;
			}
			private function showExperiments():void {
				this.parentApplication.navExperimentView.shortcutToExperimentListTab = true;
				this.parentApplication.theViews.selectedChild = this.parentApplication.navExperimentView;
			}
			private function showExperimentDownloads():void {
				this.parentApplication.navExperimentView.shortcutToDownloadTab = true;
				this.parentApplication.theViews.selectedChild = this.parentApplication.navExperimentView;
			}
			private function showAnalysis():void {
				this.parentApplication.navAnalysisView.shortcutToAnalysisListTab = true;
				this.parentApplication.theViews.selectedChild = this.parentApplication.navAnalysisView;
			}
			private function showDataTracks():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navDataTrackView;
			}
			private function showAnalysisDownloads():void {
				this.parentApplication.navAnalysisView.shortcutToDownloadTab = true;
				this.parentApplication.theViews.selectedChild = this.parentApplication.navAnalysisView;
			} 
			private function showProtocols():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.protocolsView;
			}	
			
			
			private function changePassword():void {
				parentApplication.showChangePasswordAfterLogin();
			}
			
			private function showAdvancedSearch():void {				
				parentApplication.showSearch();
			}
			private function showUserPublicView():void {				
				parentApplication.showUserPublicView();
			}		
			private function showBilling():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navBillingView;
			}
			private function showUsersAndGroups():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navUsersView;
			}
			public function showWorkAuthForm():void {
				parentApplication.showWorkAuthWindow();
				/*
				var wa:EditBillingAcctWindow = EditBillingAcctWindow(PopUpManager.createPopUp(this, EditBillingAcctWindow, true));
				wa.isEdit = false;
				wa.ba = new XML("<BillingAccount " +
				" idBillingAccount='BillingAccount0'" +
				" accountName=''" +
				" idCoreFacility=''" +
				" expirationDateOther=''" + 
				" startDateOther=''" +
				" accountNumberBus=''" + 
				" accountNumberOrg=''" + 
				" accountNumberFund=''" + 
				" accountNumberActivity=''" + 
				" accountNumberProject=''" +  
				" accountNumberAccount=''" + 
				" accountNumberAu=''" + 
				" accountNumberYear=''" +
				" totalDollarAmountDisplay=''" +
				" shortAcct=''" +
				" custom1=''" +
				" custom2=''" +
				" custom3=''" +
				" isDirty='Y'" +
				" isPO='N'" +
				" submitterEmail='" + parentApplication.getUserEmail() + "'" +
				" isApproved='N'" +
				" isSelectedPeerReviewedFunding='false'" + 
				"/>");
				PopUpManager.centerPopUp(wa);*/
			}			       
			private function showDictionaries():void {
				parentApplication.showDictionaries();				
			}
			private function showBroadcastEmailWindow():void {
				var broadcastEmailWindow:BroadcastEmailWindow = BroadcastEmailWindow(PopUpManager.createPopUp(this, BroadcastEmailWindow, true));
				PopUpManager.centerPopUp(broadcastEmailWindow);
			}			
			
			private function showBillingAccountFields():void {
				var w:BillingAccountFieldsConfigurationWindow = BillingAccountFieldsConfigurationWindow(PopUpManager.createPopUp(this, BillingAccountFieldsConfigurationWindow, true));
				PopUpManager.centerPopUp(w);
			}
			
			private function showPropertyWindow():void {
				var configWindow:PropertyWindow = PropertyWindow(PopUpManager.createPopUp(parentApplication.theBody, PropertyWindow, true));
				PopUpManager.centerPopUp(configWindow);
				
			}
			
			private function showOrganismWindow():void {
				var configWindow:OrganismsWindow = OrganismsWindow(PopUpManager.createPopUp(parentApplication.theBody, OrganismsWindow, true));
				PopUpManager.centerPopUp(configWindow);
				
			}
			
			private function showIScanChipWindow():void {
				var configWindow:IScanChipWindow = IScanChipWindow(PopUpManager.createPopUp(parentApplication.theBody, IScanChipWindow, true));
				PopUpManager.centerPopUp(configWindow);
				
			}
			
			private function showUsageWindow():void {
				this.parentApplication.theViews.selectedChild = this.parentApplication.navUsageView;
			}
			
			private function openPurchaseSuppliesLink(event:MouseEvent):void{
				var url:URLRequest = new URLRequest(parentApplication.getProperty(parentApplication.PROPERTY_PURCHASE_SUPPLIES_URL));
				url.method = URLRequestMethod.POST;
				navigateToURL(url, '_blank');
			}
			
			public function refreshDashboard():void{
				this.newsHub.getNewsItem.send();
				this.notificationHub.userTab.notificationInterface.send();
				this.notificationHub.workflowTab.notificationInterface.send();
				this.notificationHub.adminTab.notificationInterface.send();
				this.notificationHub.billingTab.notificationInterface.send();
				
				for each (var facility:XML in parentApplication.coreFacilitiesICanManage) {
					if(parentApplication.getCoreFacilityProperty(facility.@idCoreFacility, parentApplication.PROPERTY_SHOW_METRIX_DASHBOARD) == 'Y'){
						this.runStatusHub.metrixInterface.send();
						break;
					}
				}
			}
			
			private function showNewsBox():void{
				if(newsBox.visible == false){
					moveDashboard.target = newsBox;
					moveDashboard.xTo = dashBuffer;
					newsBox.includeInLayout = true;
					newsBox.visible = true;
					notificationBox.includeInLayout = false;
					notificationBox.visible = false;
					sequencerBox.includeInLayout = false;
					sequencerBox.visible = false;
					moveDashboard.play();
				}
			}
			
			private function showNotificationBox():void{
				if(notificationBox.visible == false){
					moveDashboard.target = notificationBox;
					moveDashboard.xTo = dashBuffer;
					notificationBox.includeInLayout = true;
					notificationBox.visible = true;
					newsBox.includeInLayout = false;
					newsBox.visible = false;
					sequencerBox.includeInLayout = false;
					sequencerBox.visible = false;
					moveDashboard.play();
				}
				
			}
			
			private function showSequencerBox():void{
				if(sequencerBox.visible == false){
					moveDashboard.target = sequencerBox;
					moveDashboard.xTo = dashBuffer;
					sequencerBox.includeInLayout = true;
					sequencerBox.visible = true;
					newsBox.includeInLayout = false;
					newsBox.visible = false;
					notificationBox.includeInLayout = false;
					notificationBox.visible = false;
					moveDashboard.play();
				}
				
			}
			
		]]> 
	</mx:Script> 
	
	<mx:Move id="moveDashboard" xFrom="1700"/>
	
	<mx:VBox    backgroundColor="#FFFFFF"
				width="100%" height="100%"  
				verticalAlign="top" horizontalAlign="left" 
				paddingRight="6" paddingLeft="6" paddingBottom="4" verticalGap="1" paddingTop="6" id="vbox10"  textAlign="center" horizontalScrollPolicy="off">
		<mx:Spacer height="30" />
		
		<mx:HBox horizontalAlign="left">
			<mx:VBox paddingTop="30">
				<mx:VBox id="newsButtonBox" showEffect="{parentApplication.fadeInSlow}" show="{showSplashAndDash()}" visible="false" >
					<mx:LinkButton label="News" fontSize="20" icon="@Embed(source='../../assets/newspaper.png')" click="{splashImage.visible = false; splashImage.includeInLayout = false; showNewsBox();}" />
					<mx:HRule width="200"/>
					<mx:Spacer height="10"/>
				</mx:VBox>
				<mx:VBox id="activityBox" showEffect="{parentApplication.fadeInSlow}" show="{showSplashAndDash()}" visible="false">
					<mx:LinkButton label="Activity" fontSize="20" icon="@Embed(source='../../assets/activity_monitor.png')" click="{splashImage.visible = false;splashImage.includeInLayout = false; showNotificationBox();}" />
					<mx:HRule width="200"/>
					<mx:Spacer height="10"/>
				</mx:VBox>
				<mx:LinkButton label="Sequencing" id="sequencerButton" visible="false" showEffect="{parentApplication.fadeInSlow}" show="{showSplashAndDash()}" icon="@Embed(source='../../assets/sequencing_bars.png')" click="{splashImage.visible = false;splashImage.includeInLayout = false; showSequencerBox();}" fontSize="20" />
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
	<mx:VBox
			 width="100%" height="100%"  
			 horizontalAlign="center" 
			 paddingRight="6" paddingLeft="6" paddingBottom="4" verticalGap="1" paddingTop="20" id="vbox11"  textAlign="center" horizontalScrollPolicy="off">
		<mx:HBox horizontalAlign="center" width="100%" paddingTop="20">
			<mx:Image id="splashImage" horizontalAlign="center" source="{parentApplication.welcomeSplash}"  show="{showSplashAndDash()}" showEffect="{parentApplication.fadeInSlow}"/>	
			<mx:VBox id="newsBox" paddingTop="30" verticalAlign="middle" width="100%" horizontalAlign="center" visible="false" includeInLayout="false">
				<db:News id="newsHub"/>
			</mx:VBox>
			<mx:VBox id="notificationBox" paddingTop="30" width="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false">
				<db:NotificationHub id="notificationHub"/>
			</mx:VBox>
			<mx:VBox id="sequencerBox" paddingTop="30" width="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false">
				<db:RunStatusHub id="runStatusHub"/>
			</mx:VBox>
	
		</mx:HBox>
		<mx:Spacer id="spacer2" height="100%"/>
		<mx:VBox width="400" horizontalAlign="center" paddingBottom="2" paddingTop="2" id="vbox15" height="100%" paddingLeft="2" paddingRight="2">
			<mx:VBox   visible="{parentApplication.bulletin != ''}" backgroundColor="#FDFCA6" backgroundAlpha=".2" width="100%" height="100%" borderStyle="outset" fontSize="11" textDecoration="none" fontStyle="normal" verticalAlign="middle"  horizontalAlign="center" borderColor="#000000" borderThickness="4" paddingTop="0" paddingRight="4" paddingLeft="4" paddingBottom="0">
				<mx:Text text="{parentApplication.bulletin}" fontSize="12" fontStyle="normal"  textAlign="left" height="100%"   id="text4" width="100%"/>  			
			</mx:VBox>
		</mx:VBox>
		<mx:HBox width="100%">
			<mx:Text text="{'Session started ' + parentApplication.loginDateTime}" styleName="welcomeSessionLabel" textAlign="right" fontSize="12"/>
			<mx:Spacer width="100%"/>
			<mx:Text text="{parentApplication.userName}"/>
			<mx:Text id="text5"/>
		</mx:HBox>
	</mx:VBox>
		
</mx:Canvas>