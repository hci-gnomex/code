<?xml version="1.0" encoding="utf-8"?>
<exp:TabConfirmBase xmlns:mx="http://www.adobe.com/2006/mxml" 
					label="Confirm" width="100%"  
					height="100%"    horizontalScrollPolicy="off"
					enabled="false"
					show="init()" xmlns:exp="views.experiment.*" xmlns:util="views.util.*"> 
	
	
	
	<mx:Script>	
		<![CDATA[
			import hci.flex.controls.ComboBox;
			import hci.flex.controls.DropdownLabel;
			
			import mx.collections.Grouping;
			import mx.collections.GroupingCollection;
			import mx.collections.GroupingField;
			
			import views.util.AnnotationDataGridColumn;
			
			[Bindable]
			private var longDescriptionRowCount:int = 0;
			
			override public function setupView():void {
				this.parentDocument.samplesView.initializeBarcoding();
				parentDocument.getEstimatedBilling();
				
				this.ccNumber.visible = parentDocument.samplesView.getShowCCNumber(); 
				
				submitterName.text = parentDocument.getSubmitterName();
				this.expDescriptArea.htmlText = parentDocument.saveDescription;
				this.experimentName.text = parentDocument.request.@name;
				this.seqNotes.text = parentDocument.request.@corePrepInstructions != null ? parentDocument.request.@corePrepInstructions : '';
				this.customBillingMessageLabel.text = '';
				if ( parentDocument.sampleSetupView.radioGroupSeqApp.selectedValue!= null && parentDocument.sampleSetupView.radioGroupSeqApp.selectedValue == 'OTHER' ) {
					if ( parentDocument.coreFacility != null ) {
						this.customBillingMessageLabel.text = parentApplication.getCoreFacilityProperty(parentDocument.coreFacility.@idCoreFacility, parentApplication.PROPERTY_CUSTOM_BILLING_MESSAGE);
					}
				}
				if ( this.bisulfideConversionBox != null ) {
					this.bisulfideConversionBox.visible=parentDocument.getRequestCategory()!=null && parentDocument.getRequestCategory().@codeRequestCategory=='SEQEPI';
					this.bisulfideConversionBox.includeInLayout=parentDocument.getRequestCategory()!=null && parentDocument.getRequestCategory().@codeRequestCategory=='SEQEPI';
				}				
				longDescriptionRowCount = 0;
				for each (var s:Object in parentDocument.samples) {
					if (s.@description.toString().length > 30) {
						var count:Number = s.@description.toString().length / 30;
						longDescriptionRowCount += Math.round(count);
					}
				}
				
				this.confirmContainer.validateNow();
				
			} 
			
			override public function showHideColumns():void {
				this.filteredSamples.removeAll();
				for each(var sample:Object in parentDocument.samples) {
					if (sample.@name != null && sample.@name != '') {
						this.filteredSamples.addItem(sample);
					}
				}
				
				this.label1.text = 'Samples (' + filteredSamples.length + ')';
				
				// Edit buttons shown
				
				this.parentDocument.submitButton.label = 'Submit';
				this.parentDocument.agreeBox.visible = true;
				this.parentDocument.agreeBox.includeInLayout = true;
				this.parentDocument.agreeCheckbox.selected = false;
				
				wellNameCol.visible = false;
				if (parentDocument.samplesView.hasPlates()) {
					wellNameCol.visible = true;
					plateNameCol.visible = true;
				}
				
				containerTypeCol.visible = parentDocument.isSequenomState() ? true : false;
				
				
				// reset selected ones to visible -- creating them if necessary.
				
				if ( parentDocument.isClinicalSequenomState() ) {
					this.sampleNameColumn.visible = false;
				} 
				
				// Make all annotation columns invisible
				for each(var col:DataGridColumn in this.samplesGridConfirm.columns) {
					if (col is views.util.AnnotationDataGridColumn) {
						col.visible = false;
					}
				} 
				
				
			}
			
			
			public function getSamplesConfirmGridRowNumber(item:Object,col:int):String
			{
				if (filteredSamples!= null) {
					var x:int = filteredSamples.getItemIndex(item) + 1;
					return String(x);     		
				} else {
					return "";
				}
			}
			
			override public function setBarcodeColVisibility(visibility:Boolean):void {
				
			}
			
			
			override public function setChannel2ColVisibility(visibility:Boolean):void {
				
			}
			
			override public function getSamplesGrid():Object {
				return this.samplesGridConfirm;
			}
			
			override public function getBillingGrid():Object {
				return this.billingConfirmGrid;
			}
			
			
		]]>
		
	</mx:Script>
	
	<mx:XMLListCollection id="filteredSamples" />
	
	<mx:VBox id="confirmHeaderContainer"  width="100%" backgroundAlpha="0.0" verticalGap="0" paddingRight="25"  >
		<mx:VBox   width="100%"  backgroundAlpha="0.0" verticalGap="0" paddingBottom="5" paddingLeft="5" paddingTop="0" id="confirmContainer" >
			<mx:HBox width="100%" horizontalGap="4">
				<mx:VBox height="100%" verticalGap="0" width="170" horizontalScrollPolicy="off">
					<mx:Label text="Experiment" textDecoration="none" height="16" styleName="formLabel" />
					<mx:Text text="{parentDocument.requestCategoryName}" id="requestKindLabel" width="140"/>
					<mx:Text text="{parentDocument.applicationName}" id="appLabel" width="140" visible="{!parentDocument.isSequencingState()}"/>
					<mx:Text text="{parentDocument.sampleSetupView.sequenomApplicationDesc!=null ? parentDocument.sampleSetupView.sequenomApplicationDesc.text:''}" 
							 id="appLabel0" width="140" />
					<mx:HBox verticalGap="0" horizontalGap="0" verticalAlign="middle" id="bisulfideConversionBox" >
						<mx:Label text="Bisulfide Conversion:" textAlign="left" 
								  visible="{parentDocument.isSequenomState()&amp;&amp;parentDocument.sampleSetupView.bisulfideConversionCheckBox!=null}"/>
						<mx:Text  text="{parentDocument.sampleSetupView.bisulfideConversionCheckBox.selected ? 'Yes' : 'No'}" id="bisulfideText"
								  visible="{parentDocument.isSequenomState()&amp;&amp;parentDocument.sampleSetupView.bisulfideConversionCheckBox!=null}" />
					</mx:HBox>
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" width="140" horizontalScrollPolicy="off">
					<mx:Label text="Lab" styleName="formLabel" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.labCombo.selectedItem.@name : parentDocument.setupView.labCombo.selectedItem.@name}" width="140" id="text2"/>
					<mx:Label text="Submitter" styleName="formLabel" height="16"/>
					<mx:Text  id="submitterName" width="140" />
				</mx:VBox> 
				<mx:VBox height="100%" verticalGap="0" width="180" horizontalScrollPolicy="off">
					<mx:Label text="Project" styleName="formLabel"  height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@projectName : parentDocument.setupView.projectCombo.selectedItem.@name}" width="200"  height="100%" id="text1"/>
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" id="vbox2" width="240" horizontalScrollPolicy="off">
					<mx:Label text="Billing Account" styleName="formLabel" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountName : parentDocument.setupView.billingAccountCombo.selectedItem.@accountName}" width="250"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountNumber : parentDocument.setupView.billingAccountCombo.selectedItem.@accountNumber}" width="250"/>
				</mx:VBox>
				<mx:TextArea styleName="instructionBox" width="284" wordWrap="true" id="textarea1" height="100" editable="false">
					<mx:htmlText><![CDATA[1.  Please confirm the information below. Click the<br>     Back button or a tab to modify the request.<br>2.  Agree to estimated charges by clicking the <br>    "I authorize" checkbox.<br>3.  Approve the work request by clicking the Submit<br>    button.]]></mx:htmlText>
				</mx:TextArea>
			</mx:HBox>
			<mx:VBox width="100%" verticalGap="0" id="billingContainer">
				<mx:HBox width="100%" id="chargesHeaderBox">
					<mx:Label text="{'Estimated Charges ' + parentDocument.createBillingItems.lastResult.Request.@invoicePrice}" id="label2" styleName="formLabel" paddingTop="4"/>								    	
				</mx:HBox>
				
				
				<mx:VBox width="100%" id="vbox1">
					<mx:DataGrid id="billingConfirmGrid"   showHeaders="false"  horizontalScrollPolicy="off"
								 editable="false" dataProvider="{parentDocument.createBillingItems.lastResult..BillingItem}"  
								 backgroundAlpha="0"  horizontalGridLines="false" verticalGridLines="false"  variableRowHeight="true" selectable="false" 
								 sortableColumns="false" fontSize="11"  borderStyle="none" >
						<mx:rowCount>{parentDocument.createBillingItems.lastResult..BillingItem.length() + 1}</mx:rowCount>
						<mx:columns>
							<mx:DataGridColumn  headerText="Price Category" dataField="@category" editable="false" width="200">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@category}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Description" dataField="@description" editable="false" width="270">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@description}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Qty" dataField="@qty" editable="false" textAlign="right" width="50" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@qty}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText=""   textAlign="center" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="center" text="X" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Unit price" dataField="@unitPrice"  textAlign="right" editable="false" width="65" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@unitPrice}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText=""   textAlign="left" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="left" text="=" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Total price" dataField="@invoicePrice" textAlign="right" width="105" editable="false" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@invoicePrice}"  textAlign="right" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer> 
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</mx:VBox>
				<mx:Text styleName="formLabel" color="#FF0000" id="customBillingMessageLabel" />
				
			</mx:VBox> 
			<mx:VBox width ="100%" id="expDescriptBox" verticalGap="0" paddingTop="4">
				<mx:HBox id="nameDropOffHBox">
					<mx:VBox id="experimentNameVbox">
						<mx:Label text="Experiment Name" styleName="formLabel" height="16"/>
						<mx:Label id="experimentName" width="200" alpha="0.8"  text="{parentDocument.isAmendState() ? parentDocument.request.@name : ''}"/>
					</mx:VBox>
					
					
				</mx:HBox>
				<mx:Label text="Experiment Description" styleName="formLabel" paddingTop="5"/>
				<util:TextAreaWorkaround  width="100%" editable="false" id="expDescriptArea" 
										  verticalScrollPolicy="auto" backgroundColor="#FFFFFF"
										  htmlText="{parentDocument.request.@description}" borderColor="#E3E6E8"/>
				
				<mx:HBox width="100%" paddingTop="4">
					<mx:VBox width="50%" id="vbox3" verticalGap="0"   paddingTop="2">
						<mx:Label text ="Note for Core Facility" styleName="formLabel"/>
						<util:TextAreaWorkaround width="100%" editable="false" id="seqNotes" 
												 backgroundColor="#FFFFFF"
												 text="{parentDocument.isAmendState() ? parentDocument.request.@corePrepInstructions : ''}" borderColor="#E3E6E8"/>
					</mx:VBox>
				</mx:HBox>
			</mx:VBox>
			
			
			<mx:VBox verticalGap="0" width="100%" id="samplesConfirmContainer" paddingTop="4">
				<mx:Label text="{'Samples (' + filteredSamples.length + ')'}" id="label1" styleName="formLabel"/>
				<mx:DataGrid width="100%" id="samplesGridConfirm"  editable="false" dataProvider="{filteredSamples}" 
							 backgroundAlpha="0" borderStyle="solid"  horizontalScrollPolicy="off" rowCount="{filteredSamples.length + longDescriptionRowCount + 1}"
							 sortableColumns="false" alpha="0.8" fontSize="11" variableRowHeight="true" selectable="false" >
					<mx:columns>
						<mx:DataGridColumn id="sampleRowNumberCol" visible="true" editable="false" headerText=""  width="40" resizable="false" labelFunction="getSamplesConfirmGridRowNumber"/>
						<mx:DataGridColumn id="containerTypeCol" visible="false" headerText="Container" width="80" dataField="@containerType"/>
						<mx:DataGridColumn id="plateNameCol" visible="false" headerText="Plate" width="80" dataField="@plateName"/>
						<mx:DataGridColumn id="wellNameCol" visible="false" editable="false" headerText="Well"  width="40" resizable="false" dataField="@wellName"/>
						<mx:DataGridColumn headerText="Sample Name" id="sampleNameColumn" width="100" dataField="@name">				    
						</mx:DataGridColumn>
						
						
						<mx:DataGridColumn id="ccNumber" headerText="CC Number" dataField="@ccNumber" visible="false" width="80"/>
						
						
						<mx:DataGridColumn id="concentrationCol" visible="true" headerText="Conc." width="65" dataField="@concentration"/>
						<mx:DataGridColumn id="sampleTypeColumn" headerText="Sample Type"  width="130"
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SampleType').DictionaryEntry, '@display', '@value', '@idSampleType')}"/>
					</mx:columns>
				</mx:DataGrid>
				
			</mx:VBox>
			
			
		</mx:VBox>
	</mx:VBox>
	
	<exp:states>
		<mx:State name="BillingExceedState" >
			<mx:AddChild relativeTo="{chargesHeaderBox}" position="lastChild">
				<mx:HBox borderStyle="none" id="hbox1" paddingBottom="2" >
					<mx:Text text="{'Total charges exceed balance remaining on billing account by ' + parentDocument.createBillingItems.lastResult.Request.@exceededDollarAmount + '. Experiment request cannot be submitted.'}" styleName="warningLabelSevere"/>			    	
				</mx:HBox>
			</mx:AddChild>
			<mx:SetStyle target="{chargesHeaderBox}" name="verticalAlign" value="bottom"/>
		</mx:State>
		<mx:State name="ExternalExperimentState">
			<mx:RemoveChild target="{vbox2}"/>
			<mx:SetProperty target="{text1}" name="width" value="300"/>
			<mx:SetProperty target="{text2}" name="width" value="200"/>
			<mx:SetProperty target="{requestKindLabel}" name="width" value="160"/>
			<mx:SetProperty target="{appLabel}" name="width" value="160"/>
			<mx:SetProperty target="{textarea1}" name="htmlText">
				<mx:value><![CDATA[1.  Please confirm that all information has been<br>     correctly entered. Modifications can be made by<br>     clicking the Back button or by clicking on a tab.<br>2.  Submit the experiment information by<br>      clicking the Submit button.]]></mx:value>
			</mx:SetProperty>
			<mx:RemoveChild target="{billingContainer}"/>
			<mx:SetProperty target="{label1}" name="text" value="{'Samples (' + parentDocument.samples.length + ' )'}"/>
			
		</mx:State>
		
	</exp:states>
</exp:TabConfirmBase>
