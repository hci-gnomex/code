<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				width="{isEditable ? 516 : 200}" height="250" showCloseButton="true" close="save()" creationComplete="centerMe()"
				title="URLs" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
	
	
	
	<mx:Script>
		
		<![CDATA[
			
			import mx.collections.XMLListCollection;
			import mx.events.ListEvent;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;
			
			
			[Bindable]
			public var urlList:XMLListCollection;
			
			[Bindable]
			private var isEditable:Boolean = true;

			public var opener:Object;
			
			public function initializeData(title:String, urlString:String, isEditable:Boolean):void {
				this.title = title;
				this.isEditable = isEditable;
				var urls:Array = new Array();
				urls = urlString.split("|");
				var idx:Object = null;

				urlList = new XMLListCollection();
				var node:XML = null;
				for (idx in urls) {
					
					if (urls[idx] == null || urls[idx] == '') {
						continue;
					}
					var urlTokens:Array = new Array();
					urlTokens = urls[idx].split(",");
					
					var theURL:String = urlTokens[0];
					var theAlias:String = 'Enter alias here...';
					if (urlTokens.length > 1) {
						theAlias = urlTokens[1];
					}
					node = new XML("<URL value='" + theURL + "' alias='" + theAlias + "'/>");
					urlList.addItem(node);
				}
				node = new XML("<URL value='Enter URL here...' alias='Enter alias here...' />");
				urlList.addItem(node);
			}
			
			
			private function save():void{
				if (!isEditable) {
					cancel();
					return;
				}
				var urlString:String = "";
				var url:XML = null;
				for each(url in urlList) {
					if (url.@value == 'Enter URL here...') {
						continue;						
					}
					if (urlString.length > 0) {
						urlString += "|";
					}
					urlString += url.@value;
					if (url.hasOwnProperty("@alias") && url.@alias != 'Enter alias here...' && url.@alias != '') {
						urlString += "," + url.@alias;
					}
				}
				(opener as URLRenderer).updateDP(urlString);
				cancel();
			}
			
			private function cancel():void{
				PopUpManager.removePopUp(this);
				returnFocus();
			}
			
			private function returnFocus():void{
				opener.setFocus();
				
			}
			
			private function centerMe():void{
				PopUpManager.centerPopUp(this);
				urlOuterBox.setFocus();
			}
			
			private function showURLLink(indices:Array):void {
				if (urlText[indices[0]].text == 'Enter URL here...') {
					return;
				}
				var isNew:Boolean = false;
				if ( urlLink[indices[0]].label == 'Enter alias here...' ||  urlLink[indices[0]].label == 'Enter URL here...') {
					isNew = true;
				}
				
				var newText:String = urlText[indices[0]].text
				var newAlias:String = aliasText[indices[0]].text
				urlList.getItemAt(indices[0]).@value = newText;
				urlList.getItemAt(indices[0]).@alias = newAlias;
				
				urlLink[indices[0]].label = newAlias != 'Enter alias here...' && newAlias != ''  ? newAlias : newText;
				
				urlStack[indices[0]].selectedIndex = 0;
				
				if (isNew) {
					addURL(indices);
				}
				
				
			}
			
			private function tabToURLText(indices:Array):void {
				urlText[indices[0]].setFocus();
			}
			
			private function navigateToURLLink(indices:Array):void {
				if (urlText[indices[0]].text == 'Enter URL here...') {
					return;
				}
				var url:String = urlText[indices[0]].text;
				if (url.indexOf("http://") == 0 || 
					url.indexOf("HTTP://") == 0 || 
					url.indexOf("https://") == 0 || 
					url.indexOf("HTTPS://") == 0 ) {
					// We have a well formed url
				} else {
					// Prefix url with http://
					url = "http://" + url;
				}
				navigateToURL( new URLRequest(url), '_blank' );
			}
			
			private function showURLEdit(indices:Array):void {
				urlStack[indices[0]].selectedIndex = 1;
			}
			
			private function removeURL(indices:Array):void {
				urlList.removeItemAt(indices[0]);
			}
			
			private function addURL(indices:Array):void {
				urlList.addItem(new XMLList("<URL value='Enter URL here...' alias='Enter alias here...'/>"));
			}			
			
			private function selectURLText(indices:Array):void {
				if (urlText[indices[0]].text == 'Enter URL here...') {
					urlText[indices[0]].selectionBeginIndex = 0;
					urlText[indices[0]].selectionEndIndex = urlText[indices[0]].text.length;
					urlText[indices[0]].setStyle("color", "#000000");
					
				} 
			}
			
			private function selectAliasText(indices:Array):void {
				if (aliasText[indices[0]].text == 'Enter alias here...') {
					aliasText[indices[0]].selectionBeginIndex = 0;
					aliasText[indices[0]].selectionEndIndex = aliasText[indices[0]].text.length;
					aliasText[indices[0]].setStyle("color", "#000000");
				} 
			}

		]]>
		
	</mx:Script>
	
	
	
	<mx:VBox id="urlOuterBox" styleName="form" width="100%" height="100%" verticalGap="1"  paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
		<mx:Repeater id="urlRepeater" dataProvider="{urlList}" >
			<mx:ViewStack id="urlStack"  selectedIndex="{urlRepeater.currentItem.@value == 'Enter URL here...' ? 1 : 0}" width="100%" creationPolicy="all">
				<mx:HBox  id="urlBox" verticalAlign="middle" horizontalGap="0" width="100%">
					<mx:LinkButton id="urlLink" click="{navigateToURLLink(event.target.instanceIndices)}" label="{urlRepeater.currentItem.@alias != 'Enter alias here...' &amp;&amp; urlRepeater.currentItem.@alias != '' ? urlRepeater.currentItem.@alias : urlRepeater.currentItem.@value}"  paddingLeft="0" textDecoration="underline" color="#121CE8" width="100%" textAlign="left"/>
					<mx:LinkButton label="Edit" click="{showURLEdit(event.target.instanceIndices)}" includeInLayout="{isEditable}" visible="{isEditable}" fontSize="9" textDecoration="underline"/>
					<mx:Image source="assets/bullet_delete.png" includeInLayout="{isEditable}" visible="{isEditable}" click="{removeURL(event.currentTarget.instanceIndices)}" useHandCursor="true"/>						
				</mx:HBox>
				<mx:HBox width="100%" visible="{isEditable}" includeInLayout="{isEditable}" verticalAlign="middle"  horizontalGap="0" horizontalAlign="left">
					<mx:TextInput id="aliasText" visible="{isEditable}" includeInLayout="{isEditable}" enter="{tabToURLText(event.target.instanceIndices)}" click="{selectAliasText(event.currentTarget.instanceIndices)}" text="{urlRepeater.currentItem.@alias}"  width="110" color="#8D7B7B"/>	
					<mx:Spacer width="6"/>
					<mx:TextInput id="urlText" visible="{isEditable}" includeInLayout="{isEditable}" text="{urlRepeater.currentItem.@value}" enter="{showURLLink(event.target.instanceIndices)}" click="{selectURLText(event.currentTarget.instanceIndices)}" width="100%" color="#8D7B7B"/>						
					<mx:LinkButton label="Show link" visible="{isEditable}" includeInLayout="{isEditable}" click="{showURLLink(event.target.instanceIndices)}" fontSize="9" textDecoration="underline" textAlign="left"/>
				</mx:HBox>
			</mx:ViewStack>		
			
		</mx:Repeater>
		
	</mx:VBox>

	
	
</mx:TitleWindow>
