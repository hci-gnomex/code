<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="views.util.*"
				layout="vertical" 
				title="Edit QC Assay" width="740" height="600" paddingTop="4" paddingRight="4" paddingLeft="4" paddingBottom="4"
				horizontalScrollPolicy="off">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import views.util.DirtyNote;
			
			import views.experimentplatform.ExperimentPlatformState;
			
			private var platformTypeCode:String = null;
			private var defaultIcon:String = null;
			private var parentDirty:DirtyNote;
				
			[Bindable]
			private var state:ExperimentPlatformState = null;
			
			[Bindable]
			private var selectedItem:Object;
			
			public function init(state:ExperimentPlatformState, selectedItem:Object, parentDirty:DirtyNote):void {
				this.state = state;
				this.selectedItem = selectedItem;
				this.parentDirty = parentDirty;
				
				var hideBufferStrength:String = parentApplication.getCoreFacilityProperty(state.requestCategory.@idCoreFacility, parentApplication.PROPERTY_QC_ASSAY_HIDE_BUFFER_STRENGTH);
				if (hideBufferStrength != null && hideBufferStrength == "Y") {
					this.maxSampleBufferStrengthHBox.visible = false;
					this.maxSampleBufferStrengthHBox.includeInLayout = false;
				} else {
					this.maxSampleBufferStrengthHBox.visible = true;
					this.maxSampleBufferStrengthHBox.includeInLayout = true;
				}
				var hideWellsPerChip:String = parentApplication.getCoreFacilityProperty(state.requestCategory.@idCoreFacility, parentApplication.PROPERTY_QC_ASSAY_HIDE_WELLS_PER_CHIP);
				if (hideWellsPerChip != null && hideWellsPerChip == "Y") {
					this.sampleWellsPerChipHBox.visible = false;
					this.sampleWellsPerChipHBox.includeInLayout = false;
				} else {
					this.sampleWellsPerChipHBox.visible = true;
					this.sampleWellsPerChipHBox.includeInLayout = true;
				}

				initValues(selectedItem);
			}
			
			private function initValues(selectedItem:Object):void {
				assayName.text = selectedItem.hasOwnProperty("@bioanalyzerChipType") ? selectedItem.@bioanalyzerChipType : "";
				concentration.text = selectedItem.hasOwnProperty("@concentrationRange") ? selectedItem.@concentrationRange : "";
				bufferStrength.text = selectedItem.hasOwnProperty("@maxSampleBufferStrength") ? selectedItem.@maxSampleBufferStrength : "";
				wells.text = selectedItem.hasOwnProperty("@sampleWellsPerChip") ? selectedItem.@sampleWellsPerChip : "";
				protocolDescription.text = selectedItem.hasOwnProperty("@protocolDescription") ? selectedItem.@protocolDescription : "";
				
				setPriceLabel(this.priceInternalLabel, parentApplication.PROPERTY_INTERNAL_PRICE_LABEL, 'Internal Pricing');
				setPriceLabel(this.priceExternalAcademicLabel, parentApplication.PROPERTY_EXTERNAL_ACADEMIC_PRICE_LABEL, 'External Academic Pricing');
				setPriceLabel(this.priceExternalCommercialLabel, parentApplication.PROPERTY_EXTERNAL_COMMERCIAL_PRICE_LABEL, 'External Commercial Pricing');
				
				dirty.resetDirty();
			}
			
			private function setPriceLabel(label:Label, property:String, defaultLabel:String):void {
				var val:String = parentApplication.getProperty(property);
				if (val == null || val.length == 0) {
					label.text = defaultLabel;
				} else {
					label.text = val;
				}
			}
			
			private function haveApplicationPricing():Boolean {
				return state.requestCategory.@canEnterPrices == 'Y';
			}
			
			private function save():void {
				if (haveApplicationPricing()) {
					var evt:ValidationResultEvent = priceInternalValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceInternalLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
					evt = priceExternalAcademicValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceExternalAcademicLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
					evt = priceExternalCommercialValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceExternalCommercialLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
				}
				
				selectedItem.@isActive = 'Y';
				selectedItem.@bioanalyzerChipType = assayName.text;
				selectedItem.@concentrationRange = concentration.text;
				selectedItem.@maxSampleBufferStrength = bufferStrength.text;
				selectedItem.@sampleWellsPerChip = wells.text;
				selectedItem.@protocolDescription = protocolDescription.text;
				if (haveApplicationPricing()) {
					selectedItem.@unitPriceInternal = this.priceInternalText.text;
					selectedItem.@unitPriceExternalAcademic = this.priceExternalAcademicText.text;
					selectedItem.@unitPriceExternalCommercial = this.priceExternalCommercialText.text;
					selectedItem.@unitPriceDisplay = this.priceInternalText.text + "/" + this.priceExternalAcademicText.text + "/" + this.priceExternalCommercialText.text;
				}
				
				if (dirty.isDirty()) {
					state.dirty.setDirty();
					if (parentDirty != null) {
						parentDirty.setDirty();
					}
				}
				dirty.resetDirty();
				mx.managers.PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	<mx:CurrencyValidator id="priceInternalValidator" source="{this.priceInternalText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="false"/>
	<mx:CurrencyValidator id="priceExternalAcademicValidator" source="{this.priceExternalAcademicText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="false"/>
	<mx:CurrencyValidator id="priceExternalCommercialValidator" source="{this.priceExternalCommercialText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="false"/>

	<mx:VBox width="100%" height="100%" styleName="form" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4" verticalGap="10">
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Assay Name" styleName="formLabel" width="120"/>
			<mx:TextInput id="assayName" width="400" backgroundColor="#FFFFFF" borderColor="#898F93" change="dirty.setDirty()" />
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Concentration" styleName="formLabel" width="120"/>
			<mx:TextInput id="concentration" width="400" backgroundColor="#FFFFFF" borderColor="#898F93" change="dirty.setDirty()" />
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4" id="maxSampleBufferStrengthHBox">
			<mx:Text text="Max Sample Buffer Strength" styleName="formLabel" width="120"/>
			<mx:TextInput id="bufferStrength" width="400" backgroundColor="#FFFFFF" borderColor="#898F93" change="dirty.setDirty()" />
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4" id="sampleWellsPerChipHBox">
			<mx:Text text="Sample Wells Per Chip" styleName="formLabel" width="120"/>
			<mx:TextInput id="wells" width="400" backgroundColor="#FFFFFF" borderColor="#898F93" change="dirty.setDirty()" restrict="0-9" maxChars="2" />
		</mx:HBox>
		
		<mx:VBox width="100%" verticalGap="0" horizontalGap="0" visible="{selectedItem.@hasChipTypes!='Y'}" includeInLayout="{selectedItem.@hasChipTypes!='Y'}">
			<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="0" visible="{state.requestCategory.@canEnterPrices != 'Y'}" includeInLayout="{state.requestCategory.@canEnterPrices != 'Y'}">
				<util:ContextHelp context1="ExperimentPlatformQCPricingHelp" showEdit="{parentApplication.isSuperAdmin}" title="Pricing Help"
								  label="Why can't I edit Prices?" labelPlacement="right" id="coreFacilityNoteLabel"/>
			</mx:HBox>
			<mx:HBox width="100%" horizontalGap="0" verticalAlign="top" paddingTop="0" enabled="{state.requestCategory.@canEnterPrices == 'Y'}">
				<mx:Text text="Billing" styleName="formLabel" paddingBottom="0" width="80"/>
				<mx:VBox width="100%" paddingTop="0" verticalGap="0" paddingLeft="0">
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0" paddingLeft="0">
						<mx:Label text="$" paddingRight="0" paddingLeft="0" textAlign="right" width="20" />
						<mx:TextInput id="priceInternalText" text="{selectedItem.@unitPriceInternal == '' ? '0.00' : selectedItem.@unitPriceInternal}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceInternalLabel" text="Internal Pricing" />
					</mx:HBox>
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0" paddingLeft="0">
						<mx:Label text="$" paddingRight="0" paddingLeft="0" textAlign="right" width="20" />
						<mx:TextInput id="priceExternalAcademicText" text="{selectedItem.@unitPriceExternalAcademic == '' ? '0.00' : selectedItem.@unitPriceExternalAcademic}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceExternalAcademicLabel" text="External Academic Pricing" />
					</mx:HBox>
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0" paddingLeft="0">
						<mx:Label text="$" paddingRight="0" paddingLeft="0" textAlign="right" width="20" />
						<mx:TextInput id="priceExternalCommercialText" text="{selectedItem.@unitPriceExternalCommercial == '' ? '0.00' : selectedItem.@unitPriceExternalCommercial}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceExternalCommercialLabel" text="External Commercial Pricing" />
					</mx:HBox>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>
		<mx:VBox width="100%" height="100%" verticalGap="0" paddingTop="4">
			<mx:Text text="Protocol Description" styleName="formLabel" />
			<util:TextAreaWorkaround id="protocolDescription" width="100%" change="dirty.setDirty()" height="100%"/>
		</mx:VBox>
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Spacer width="100%" />
		<util:DirtyNote id="dirty" />
		<mx:Button label="Apply" id="saveButton" click="save()" icon="@Embed(source='../../assets/save.png')" 
				   enabled="{assayName.text.length > 0}" 
				   disabledIcon="@Embed(source='../../assets/save_disable.png')"/>
		<mx:Button label="Cancel" click="{mx.managers.PopUpManager.removePopUp(this)}"/>
	</mx:ControlBar>
	
</mx:TitleWindow>
