155.98.164.36

#Upload
java -jar path2YourLocalCopyOfFDT/fdt.jar \
-noupdates -r \
-c bioserver.hci.utah.edu \
-d /scratch/fdtswap/fdt_sandbox_gnomex/2d446fc7-0f81-4294-bbd6-5d6d80bed2d7/A1463 \
list of full path files and directories  (will recurse through)
		
#Download
java -jar path2YourLocalCopyOfFDT/fdt.jar \
-pull -r \
-c bioserver.hci.utah.edu \
-d path2SaveDataOnYourLocalComputer \
/scratch/fdtswap/fdt_sandbox_gnomex/f0b1cb21-18ee-4a52-9fa8-b9be5d5f87b8/A1463

java -jar jdt.jar -pull -d ~/Desktop/FDT -c hci-bio3.hci.utah.edu  /home/u0028003/FDTRebuild/trans.txt

use http://www.diffchecker.com/diff to compare txt docs

########################## Modifications to the FDT code to incorporate restricted transfer directories ####################
Main method in lia.util.net.copy.FDTMain xxx.FDT



################################################### DONE
lia.util.net.common.Config.java
		//added an import statements
		import java.io.File;
		import java.io.IOException;
		
		//added field for available transfer directories, if this is null then no checks are made
	    //for locking server to uploads and downloads to directories within the restricted transit directories
    	private File[] restrictedTransferDirectories = null;
    	
    	//added getter for the transfer dirs
    	    public File[] getRestrictedTransferDirectories() {
		return restrictedTransferDirectories;
   			 }
    	
    	//new method to check file requests
	/**Checks to see if a file or directory is a child of the restrictedTransferDirectory. 
     * Thus one must create a staging directory or file within the restrictedTransferDirectory before the
     * server will be able to transfer files or folder into or out of the staging directory. Soft and hard links are OK.
     */
    public boolean authorizedTransfer(File toTransfer){
      //has the restricted directory been set?
      if (restrictedTransferDirectories == null) return true;

      //look to see if they are trying something sneaky (ie /../../ to drop levels)
      String path = toTransfer.getPath();
      try {
        if (toTransfer.getCanonicalPath().equals(path) == false) return false;
      } catch (IOException e) {
        e.printStackTrace();
        return false;
      }
      //look to see if it matches one of the restricted directories
      for (File rtd : restrictedTransferDirectories){
        //Match it
        Pattern pat = Pattern.compile(rtd.getPath()+File.separatorChar+".+");
        if (pat.matcher(path).matches()) return true;
      }
      return false;
    }
    
    //look to see if they want to restrict the FDT server's access to a particular directory
            if (configMap.containsKey("-rtd")) {
              //split on comma
              String[] dirs = ((String)configMap.get("-rtd")).split(",");
              restrictedTransferDirectories = new File[dirs.length];
              StringBuilder message = new StringBuilder();
              //check that each exist
              for (int i=0; i< dirs.length; i++){
                restrictedTransferDirectories[i] = new File (dirs[i]);
                if (restrictedTransferDirectories[i] == null || restrictedTransferDirectories[i].exists() == false){
                  throw new InvalidFDTParameterException("Cannot find your restricted transfer directory? -> "+dirs[i]);
                }
                else message.append(restrictedTransferDirectories[i]+ " ");
              }
              logger.log(Level.INFO, "Restricted Transfer Directories: "+message);
            }
// look to see if they want to call a special logger script
			if (configMap.containsKey("-appLogger")) {
				appLogger = (String)configMap.get("-appLogger");
			}
            
            
            	// for logging data transfers to a special application logger
	private String appLogger = null;
            
                public String getAppLogger() {
      return this.appLogger;
    }
    
#########################
modifying config to public in FDT.jar
many mods to DiskReaderTask.java and DiskWriterTask.java from Robb

// If there is an app logger this will log the file session info
                        logToAppLogger(fileSession);
                        
    private void logToAppLogger(FileSession fileSession) {
      if (FDT.config.getAppLogger() != null && !FDT.config.getAppLogger().equals("")) {
        try {
          SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.SSS a");
          Process process = Runtime.getRuntime().exec( new String[] {"/bin/sh", FDT.config.getAppLogger(), 
              "-fileName", fileSession.getFile().getAbsolutePath(), 
              "-type", "upload",
              "-method", "fdt", 
              "-startDateTime", df.format(new java.util.Date(fileSession.startTimeMillis)),
              "-endDateTime", df.format(new java.util.Date(System.currentTimeMillis())),
              "-fileSize", Long.valueOf(fileSession.getFile().length()).toString()
              });          
          process.waitFor();
          process.destroy();
        } catch(Exception e) {
          logger.log(Level.WARNING, " \n\n\n Cannot write to app logger " + FDT.config.getAppLogger() + " Cause: ", e);
        }
      }
    }


################################################### DONE
lia.util.net.common.usage  txt doc 
Server specific:
   -S			 disable standalone mode; if specified, the server
   			 will stop after the last client finishes
   -bs <bufferSize>	 Size for the I/O buffers. [K(ilo)|M(ega)] may be used
   			 as suffixes. The default is 1 MByte.
   -f <allowedIPsList>	 A list of IP addresses allowed to connect to the server
   			 Multiple IP addresses may be separated by ':'
   -rtd <resTransDirs>   Restricts the transfer of files to children within one
                         or more restricted transfer directories (full path,
                         comma delimited, no spaces).


########################################################### DONE
lia.util.net.copy.FDTReaderSession.java

		//check to see if they are allowed to download the files
		if (role==SERVER && config.getRestrictedTransferDirectories() != null){
			for (String name : fileList) {
				if (config.authorizedTransfer(new File(name)) == false) throw new IOException("Unauthorized download request for '"+name+"' from server.");
			}
		}


########################################################### DONE
lia.util.net.copy.FDTWriterSession.java

        //check destination dir on server, is this requested transfer allowed?
        if (role == SERVER && config.getRestrictedTransferDirectories() != null){
                if (config.authorizedTransfer(new File(destinationDir)) == false) throw new IOException("Unauthorized access request to "+destinationDir);
        }
        
       
       
################
What user would see if they attempted a download outside the sandbox
nix:~ davidnix$ jj ~/Desktop/FDT/srcBldFDR0.18.6.jar -pull -r -c hci-bio3.hci.utah.edu -d ~/Desktop  /home/u0028003/cell.pdf


FDT [ 0.18.6-201307011457 ] STARTED ... 


Jul 1, 2013 2:39:14 PM lia.util.net.common.Config <init>
INFO: Using lia.util.net.copy.PosixFSFileChannelProviderFactory as FileChannelProviderFactory
Jul 1, 2013 2:39:14 PM lia.util.net.common.Config <init>
INFO: FDT started in client mode
FDT uses *blocking* I/O mode.
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel initStreams
INFO: NEW CONTROL stream for 60873cfb-754d-4d86-857e-2a09474e39d7 initialized 
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel initStreams
INFO: App KeepAlive [ 120 second(s) ] enabled for control channel. Local FDTVersion [0.18.6-2013-07-01], Remote FDTVersion [0.18.6-2013-07-01]
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel$ControlChannelPingerTask <init>
INFO: [ ControlChannelPingerTask ] initialized
Jul 1, 2013 2:39:16 PM lia.util.net.copy.FDTWriterSession handleEndFDTSession
WARNING: 

 [ FDTWriterSession ] Remote FDTReaderSession for session [ 60873cfb-754d-4d86-857e-2a09474e39d7 ] finished with errors:
Down message: Got exception trying to process
Down cause:
java.lang.Exception: Unauthorized download request for '/home/u0028003/cell.pdf' from server.
	at lia.util.net.copy.FDTReaderSession.internalInit(FDTReaderSession.java:174)
	at lia.util.net.copy.FDTReaderSession.handleInitFDTSessionConf(FDTReaderSession.java:761)
	at lia.util.net.copy.FDTSession.notifyCtrlMsg(FDTSession.java:374)
	at lia.util.net.copy.FDTSessionManager.notifyCtrlMsg(FDTSessionManager.java:202)
	at lia.util.net.copy.transport.ControlChannel$1.run(ControlChannel.java:415)



Jul 1, 2013 2:39:16 PM lia.util.net.copy.FDTWriterSession internalClose
INFO: 
The FDTWriterSession ( 60873cfb-754d-4d86-857e-2a09474e39d7 ) finished with error(s). Cause: Down message: Got exception trying to process
Down cause:
java.lang.Exception: Unauthorized download request for '/home/u0028003/cell.pdf' from server.
	at lia.util.net.copy.FDTReaderSession.internalInit(FDTReaderSession.java:174)
	at lia.util.net.copy.FDTReaderSession.handleInitFDTSessionConf(FDTReaderSession.java:761)
	at lia.util.net.copy.FDTSession.notifyCtrlMsg(FDTSession.java:374)
	at lia.util.net.copy.FDTSessionManager.notifyCtrlMsg(FDTSessionManager.java:202)
	at lia.util.net.copy.transport.ControlChannel$1.run(ControlChannel.java:415)




FDTWriterSession ( 60873cfb-754d-4d86-857e-2a09474e39d7 ) final stats:
 Started: Mon Jul 01 14:39:14 MDT 2013
 Ended:   Mon Jul 01 14:39:16 MDT 2013
 Transfer period:   02s
 TotalBytes: 0
 TotalNetworkBytes: 0
 Exit Status: Not OK

Jul 1, 2013 2:39:16 PM lia.util.net.copy.FDTWriterSession doPostProcessing
INFO: [ FDTWriterSession ] Post Processing started
Jul 1, 2013 2:39:16 PM lia.util.net.copy.FDTWriterSession doPostProcessing
INFO: [ FDTWriterSession ] No post processing filters defined/processed.
 [ Mon Jul 01 14:39:17 MDT 2013 ] - GracefulStopper hook started ... Waiting for the cleanup to finish
 [ Mon Jul 01 14:39:17 MDT 2013 ]  - GracefulStopper hook finished!

 [ Mon Jul 01 14:39:17 MDT 2013 ]  FDT Session finished with errors: 
Down message: Got exception trying to process
Down cause:
java.lang.Exception: Unauthorized download request for '/home/u0028003/cell.pdf' from server.
	at lia.util.net.copy.FDTReaderSession.internalInit(FDTReaderSession.java:174)
	at lia.util.net.copy.FDTReaderSession.handleInitFDTSessionConf(FDTReaderSession.java:761)
	at lia.util.net.copy.FDTSession.notifyCtrlMsg(FDTSession.java:374)
	at lia.util.net.copy.FDTSessionManager.notifyCtrlMsg(FDTSessionManager.java:202)
	at lia.util.net.copy.transport.ControlChannel$1.run(ControlChannel.java:415)



nix:~ davidnix$


What is displayed in the server log:

Jul 1, 2013 2:39:00 PM lia.util.net.copy.FDTReaderSession doPostProcessing
INFO: [ FDTReaderSession ] Post Processing started
Jul 1, 2013 2:39:00 PM lia.util.net.copy.FDTReaderSession doPostProcessing
INFO: [ FDTReaderSession ] No post processing filters defined/processed.
Jul 1, 2013 2:39:02 PM lia.util.net.copy.transport.ControlChannel run
INFO:  ControlThread for ( cfcd20e7-c076-4b83-a4a8-28ccd1765042 ) /155.100.213.214:54452 FINISHED
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel initStreams
INFO: NEW CONTROL stream for 60873cfb-754d-4d86-857e-2a09474e39d7 initialized 
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel initStreams
INFO: App KeepAlive [ 120 second(s) ] enabled for control channel. Local FDTVersion [0.18.6-2013-07-01], Remote FDTVersion [0.18.6-2013-07-01]
Jul 1, 2013 2:39:14 PM lia.util.net.copy.transport.ControlChannel$ControlChannelPingerTask <init>
INFO: [ ControlChannelPingerTask ] initialized
Jul 1, 2013 2:39:14 PM lia.util.net.copy.FDTReaderSession internalClose
INFO: 
The FDTReaderSession ( 60873cfb-754d-4d86-857e-2a09474e39d7 ) finished with error(s). downMsg: Got exception trying to process downCause:
java.lang.Exception: Unauthorized download request for '/home/u0028003/cell.pdf' from server.
	at lia.util.net.copy.FDTReaderSession.internalInit(FDTReaderSession.java:174)
	at lia.util.net.copy.FDTReaderSession.handleInitFDTSessionConf(FDTReaderSession.java:761)
	at lia.util.net.copy.FDTSession.notifyCtrlMsg(FDTSession.java:374)
	at lia.util.net.copy.FDTSessionManager.notifyCtrlMsg(FDTSessionManager.java:202)
	at lia.util.net.copy.transport.ControlChannel$1.run(ControlChannel.java:415)
Jul 1, 2013 2:39:17 PM lia.util.net.copy.FDTReaderSession handleEndFDTSession
INFO: [ FDTReaderSession ] Remote FDTWriterSession for session [ 60873cfb-754d-4d86-857e-2a09474e39d7 ] finished OK!


FDTReaderSession ( 60873cfb-754d-4d86-857e-2a09474e39d7 ) final stats:
 Started: Mon Jul 01 14:39:14 MDT 2013
 Ended:   Mon Jul 01 14:39:17 MDT 2013
 Transfer period:   03s
 TotalBytes: 0
 TotalNetworkBytes: 0
 Exit Status: Not OK

Jul 1, 2013 2:39:17 PM lia.util.net.copy.FDTReaderSession doPostProcessing
INFO: [ FDTReaderSession ] Post Processing started
Jul 1, 2013 2:39:17 PM lia.util.net.copy.FDTReaderSession doPostProcessing
INFO: [ FDTReaderSession ] No post processing filters defined/processed.
Jul 1, 2013 2:39:17 PM lia.util.net.copy.transport.ControlChannel run
INFO:  ControlThread for ( 60873cfb-754d-4d86-857e-2a09474e39d7 ) /155.100.213.214:54461 FINISHED

        






