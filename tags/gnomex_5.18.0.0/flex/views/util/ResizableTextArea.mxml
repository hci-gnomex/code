<?xml version="1.0" encoding="utf-8"?>
<mx:TextArea xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import flash.text.TextLineMetrics;
			
			import mx.core.mx_internal;
			
			// auto resize setting
			private var _autoResizable:Boolean = false;
			
			// getter
			[Bindable(event="changeAutoResize")]
			public function get autoResize():Boolean
			{
				return _autoResizable;
			}
			
			// setter
			public function set autoResize(b:Boolean):void
			{
				_autoResizable = b;
				// if the text field component is created
				// and is auto resizable
				// we call the resize method
				if (this.mx_internal::getTextField() != null && 
					_autoResizable == true)
					resizeTextArea();
				// dispatch event to make the autoResize 
				// property bindable
				dispatchEvent(new Event("changeAutoResize"));
			}
			
			// setter override
			override public function set text(value:String):void
			{
				// calling super method 
				super.text = value;
				// if is auto resizable we call 
				// the resize method
				if (_autoResizable)
					resizeTextArea();
			}
			
			// setter override
			override public function set htmlText(value:String):void
			{
				// calling super method 
				super.htmlText = value;
				// if is auto resizable we call 
				// the resize method
				if (_autoResizable)
					resizeTextArea();
			}
			
			// resize function for the text area
			private function resizeTextArea():void
			{
				// Max width and height so no of lines is correct.
				this.width=1024;
				if (this.width > this.maxWidth) {
					this.width = this.maxWidth;
				}
				this.height=768;

				// initial height value
				// if set to 0 scroll bars will 
				// appear to the resized text area 
				var totalHeight:uint = 10;
				
				// variable to get width of longest line.
				var maxWidth:uint = 0;
				
				// validating the object
				this.validateNow();
				// find the total number of text lines 
				// in the text area
				var noOfLines:int = this.mx_internal::getTextField().numLines;
				// iterating through all lines of 
				// text in the text area
				for (var i:int = 0; i < noOfLines; i++) 
				{
					// getting the height of one text line
					var textLineHeight:int = 
						this.mx_internal::getTextField().getLineMetrics(i).height;
					var textLineWidth:int = 
						this.mx_internal::getTextField().getLineMetrics(i).width;
					// adding the height to the total height
					totalHeight += textLineHeight;
					if (textLineWidth > maxWidth) {
						maxWidth = textLineWidth;
					}
				}
				// setting the new calculated height
				this.height = totalHeight;
				
				this.width = maxWidth + 10;
				
				if (this.width > this.maxWidth) {
					this.width = this.maxWidth;
				}
			}
		]]>
	</mx:Script>
</mx:TextArea>
