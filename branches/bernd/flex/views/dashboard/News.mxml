<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:db="views.dashboard.*"
		   width="500" height="370" backgroundAlpha="1"
		   cornerRadius="12" creationComplete="init()" xmlns:renderers="views.renderers.*">   

	<mx:HTTPService 
		id="getNewsItem" 
		url="GetNewsItem.gx"
		resultFormat="e4x"
		destination="getNewsItem"
		showBusyCursor="true"
		result="onGetNewsInterface(event)"
		fault="parentApplication.onFailHttpRequest('Unable to get Newsitem list', event)"
		useProxy="false">
		<mx:request>
			<idNewsItem>{idNewsItem}</idNewsItem>
			<title>{title}</title>
			<date>{date}</date>
			<idSubmitter>{idSubmitter}</idSubmitter>
			<idCoreSender>{idCoreSender}</idCoreSender>
			<idCoreTarget>{idCoreTarget}</idCoreTarget>
		</mx:request>
	</mx:HTTPService>
	
	<mx:HTTPService
		id="deleteNewsItem" 
		url="DeleteNewsItem.gx"
		resultFormat="e4x"
		destination="deleteNewsItem"
		showBusyCursor="true"
		result="onDeleteNewsInterface(event)"
		fault="parentApplication.onFailHttpRequest('Unable to delete Newsitem ', event)"
		useProxy="false">
	</mx:HTTPService>
		
	
	<mx:XMLListCollection id="newsItemList" source="{getNewsItem.lastResult.NewsItem}" />
	
<mx:Script>
	<![CDATA[
		
		// Imports
		import flash.events.TimerEvent;
		import flash.utils.Timer;
		
		import mx.collections.ArrayCollection;
		import mx.collections.Sort;
		import mx.collections.SortField;
		import mx.collections.XMLListCollection;
		import mx.controls.Alert;
		import mx.controls.ProgressBar;
		import mx.events.CloseEvent;
		import mx.events.CollectionEvent;
		import mx.events.CollectionEventKind;
		import mx.events.DragEvent;
		import mx.events.FlexEvent;
		import mx.events.ListEvent;
		import mx.managers.DragManager;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		
		// Variables
		[Bindable]
		private var idNewsItem:int;
		
		[Bindable]
		private var title:String;
		
		[Bindable]
		private var date:Date;
		
		[Bindable]
		private var idCoreSender:int;
		
		[Bindable]
		private var idCoreTarget:int;
		
		[Bindable]
		private var idSubmitter:int;
		
		[Bindable]
		private var paramDelete:Object = new Object();
		
		// Init method
		public function init():void {
			getNewsItem.send();
		}
		
		private function onDeleteNewsInterface(event:ResultEvent):void {
			if (deleteNewsItem.lastResult.name() == "SUCCESS") {
				// Success.
				getNewsItem.send();
			}else{
				Alert.show("Error in deleting newsitem.");
			}
		}
		
		private function onGetNewsInterface(event:ResultEvent):void {
			if(event.result.name() == "NewsItemList"){
				//newsItemList.refresh();
				sortXLC();
			} else {
				Alert.show(event.result..ERROR.@message.toString(), "Error setting up News Interface.");
			}
		}
		
		protected function newsItemEdit_clickHandler(ci:Object):void
		{
			// Call edit popup.
			var EditNewsItemWindow:AddNewsItem = AddNewsItem(PopUpManager.createPopUp(parentApplication.homeDashboard, AddNewsItem, true));
			EditNewsItemWindow.itemTitle = ci.@title;
			EditNewsItemWindow.message = ci.@message;
			EditNewsItemWindow.idNewsItem = ci.@idNewsItem;
			EditNewsItemWindow.title = "News Item Manager - Edit Item";
			PopUpManager.centerPopUp(EditNewsItemWindow);
		}
		
		protected function newsItemRemove_clickHandler(ci:Object):void
		{
			// Call remove HTTPService after confirm in onPromptToDelete.
			paramDelete.idNewsItem = ci.@idNewsItem;
			
			Alert.show("Are you sure you wish to delete this news item?", 
				"Confirm", 
				(Alert.YES | Alert.NO), this, 
				onPromptToDelete);
		}

		private function sortXLC():void {
			var dateSort:Sort = new Sort();
			dateSort.fields = [new SortField('@date', true, false)];	// Set sort properties
			dateSort.reverse();											// Reverse the sort list
			newsItemList.sort = dateSort;								// Apply sort
			newsItemList.refresh();										// Refresh datasource
		}		
		
		private function onPromptToDelete(event:CloseEvent):void {
			if (event.detail==Alert.YES) {
				deleteNewsItem.send(paramDelete);
			}
		}
		
		public function showNewsItem(ci:Object):void {
			// Show detailed newsitem in popup.
			var DetailNewsItemWindow:DetailNewsItem = DetailNewsItem(PopUpManager.createPopUp(parentApplication.homeDashboard, DetailNewsItem, true));
			DetailNewsItemWindow.itemTitle = ci.@title;
			DetailNewsItemWindow.date = ci.@date;
			DetailNewsItemWindow.msg = ci.@message;
			PopUpManager.centerPopUp(DetailNewsItemWindow);
		}
		
		public function showAddNewsItem():void {
			var AddNewsItemWindow:AddNewsItem = AddNewsItem(PopUpManager.createPopUp(parentApplication.homeDashboard, AddNewsItem, true));
			PopUpManager.centerPopUp(AddNewsItemWindow);
		}
	]]>
</mx:Script>
	
	<mx:VBox width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
		<mx:HBox width="100%" paddingLeft="200" horizontalGap="155"  paddingTop="5">
			<mx:Label id="mainTitle" text="Latest News" fontSize="18" />
			<mx:LinkButton id="addNewsItem" click="showAddNewsItem()" 
						   icon="@Embed(source='../../assets/table_row_insert.png')" width="22" 
						   includeInLayout="{parentApplication.isSuperAdmin}"
						   toolTip="Add Newsitem"
						   paddingTop="6"
						/>
		</mx:HBox>
		
			<mx:VBox id="main" width="100%" paddingTop="10" verticalGap="5">
				<mx:Repeater id="newsRep" dataProvider="{newsItemList}" count="6">
							<mx:HBox id="newsItem" width="100%" height="25" backgroundColor="#E6E6E6" 
									 cornerRadius="7" borderStyle="solid" borderThickness="0"
									 paddingTop="2" paddingLeft="2" paddingRight="2"
									 >
								<mx:Label id="newsItemDate" width="85" height="20"
										  fontWeight="bold"
										  text="{newsRep.currentItem.@date}"/>
								<mx:Label id="newsItemTitle" width="325" height="20"
										  fontWeight="bold"
										  text="{newsRep.currentItem.@title}"
										  click="showNewsItem(event.currentTarget.getRepeaterItem());"
										  rollOver="{newsItemTitle[event.target.instanceIndex].setStyle('color', 0xED0018)}"
										  rollOut="{newsItemTitle[event.target.instanceIndex].setStyle('color', 0x000000)}"
										/>
								<mx:VRule height="15" includeInLayout="{parentApplication.isSuperAdmin}"/>
								<mx:LinkButton id="newsItemEdit"
											width="22"
											icon="@Embed(source='../../assets/tag_blue_edit.png')"
											click="newsItemEdit_clickHandler(event.currentTarget.getRepeaterItem());"
											includeInLayout="{parentApplication.isSuperAdmin}"
											toolTip="Edit NewsItem"
										/>
								<mx:LinkButton id="newsItemRemove"
											width="22"
											icon="@Embed(source='../../assets/table_row_delete.png')"
											click="newsItemRemove_clickHandler(event.currentTarget.getRepeaterItem());"
											includeInLayout="{parentApplication.isSuperAdmin}"
											toolTip="Delete NewsItem"
										/>
							</mx:HBox>
				</mx:Repeater>
			</mx:VBox>
	</mx:VBox>
</mx:Canvas>
