<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" creationComplete="init()" title="Add Experiment Platform" width="470" height="168" defaultButton="{saveButton}" paddingTop="4" verticalScrollPolicy="off" paddingRight="4" paddingLeft="4" paddingBottom="4">

    <mx:HTTPService 
    id="saveExperimentPlatform" 
    url="SaveExperimentPlatform.gx"
    showBusyCursor="true"
    resultFormat="e4x"
    result="onSaveExperimentPlatform(event)"
    fault="parentApplication.onFailHttpRequest('Unable to save experiment platform', event)"
    useProxy="false">
    </mx:HTTPService >
	
    

<mx:Script>
	<![CDATA[
		import mx.collections.XMLListCollection;
		import mx.controls.Alert;
		import mx.events.CloseEvent;
		import mx.events.ListEvent;
		import mx.managers.PopUpManager;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		
		[Bindable]
		private var platformTypes:XMLList;
		
		private var platformTypeCode:String = null;
		
		public var parentWindow:views.util.ExperimentPlatformWindow = null;
		
		private function init():void{
			var platformTypeString:String = "<label></label><label>Next Generation Sequencing</label><label>Microarray</label><label>Sample Quality</label><label>Capillary Sequencing</label><label>Mitochondrial D-Loop Sequencing</label><label>Fragment Analysis Panels</label><label>Cherry Picking</label><label>iScan</label><label>Clinical Sequenom</label><label>Sequenom</label><label>Generic</label>"
			platformTypes = new XMLList(platformTypeString);
		}
		
		private function save():void {
			var params:Object = new Object();
			
			params.requestCategory = this.platformName.text;
			params.newCodeRequestCategory = this.codeRequestCategoryField.text.toUpperCase();
			params.idAppUser = (parentApplication.hasPermission("canWriteDictionaries") ? '' : parentApplication.getIdAppUser());
			params.type = platformTypeCode;
			params.sampleTypesXMLString = "<sampleTypes/>";
			params.applicationsXMLString = "<applications/>";
			params.sequencingOptionsXMLString = "<sequencingOptions/>";
			
			saveExperimentPlatform.send(params);

		}
		
		private function promptToSave():void{
			if(codeRequestCategoryField.text == ''){
				Alert.show("If you do not provide a code request category, the system will provide one for you.  Is this okay?", 
					null, 
					(Alert.YES | Alert.NO), this, 
					onPromptToSave);
			}
			else{
				save();
			}
		}
		
		private function onPromptToSave(event:CloseEvent):void{
			if (event.detail==Alert.YES) {
				save();
			}
		}
		
		private function onSaveExperimentPlatform(event:ResultEvent):void {
			if (saveExperimentPlatform.lastResult.name() == "SUCCESS") {
				parentWindow.codeRequestCategorySelected = saveExperimentPlatform.lastResult.@codeRequestCategory;
				parentWindow.getExperimentPlatformList.send();
				PopUpManager.removePopUp(this);
			} else {
				Alert.show(saveExperimentPlatform.lastResult..ACTMESSAGE.@TEXT);
			}			
		}
		
		public function updatePlatform():void{
			if(typeCombo.selectedLabel == "Sample Quality"){
				platformTypeCode = parentApplication.TYPE_QC;//"QC";
			} else if(typeCombo.selectedLabel == "Microarray"){
				platformTypeCode = parentApplication.TYPE_MICROARRAY;	
			} else if(typeCombo.selectedLabel == "Next Generation Sequencing"){
				platformTypeCode = parentApplication.TYPE_ILLUMINA;
			} else if(typeCombo.selectedLabel == "Mitochondrial D-Loop Sequencing"){
				platformTypeCode = parentApplication.TYPE_MIT_SEQ;
			} else if(typeCombo.selectedLabel == "Fragment Analysis Panels"){
				platformTypeCode = parentApplication.TYPE_FRAG_ANAL;
			} else if(typeCombo.selectedLabel == "Cherry Picking"){
				platformTypeCode = parentApplication.TYPE_CHERRY_PICK;
			} else if(typeCombo.selectedLabel == "Capillary Sequencing"){
				platformTypeCode = parentApplication.TYPE_CAP_SEQ;
			} else if(typeCombo.selectedLabel == "iScan"){
				platformTypeCode = parentApplication.TYPE_ISCAN;
			} else if(typeCombo.selectedLabel == "Clinical Sequenom"){
				platformTypeCode = parentApplication.TYPE_CLINICAL_SEQUENOM;
			} else if(typeCombo.selectedLabel == "Sequenom"){
				platformTypeCode = parentApplication.TYPE_SEQUENOM;
			} else if(typeCombo.selectedLabel == "Generic"){
				platformTypeCode = parentApplication.TYPE_GENERIC;
			}
		}
		
	]]>
</mx:Script>
	<mx:VBox width="100%" height="100%" styleName="form" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Name" width="130"/>
			<mx:TextInput id="platformName" width="100%" backgroundColor="#FFFFFF" borderColor="#797E81" borderStyle="inset" borderThickness="1"/>
		</mx:HBox>
		
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Code Request Category" width="130"/>
			<mx:TextInput id="codeRequestCategoryField" width="50" backgroundColor="#FFFFFF" borderColor="#898F93" maxChars="8"/>
		</mx:HBox>
		
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Type" width="130"/>
			<mx:ComboBox id="typeCombo" dataProvider="{platformTypes}" labelField="@label" width="100%" change="{updatePlatform()}"/>
		</mx:HBox>
		
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Button label="Save" id="saveButton" click="promptToSave()" icon="@Embed(source='../../assets/save.png')" enabled="{platformName.text != '' &amp;&amp; typeCombo.selectedIndex != 0}" disabledIcon="@Embed(source='../../assets/save_disable.png')"/>
		<mx:Button label="Cancel" click="{mx.managers.PopUpManager.removePopUp(this)}"/>
	</mx:ControlBar>
	
</mx:TitleWindow>
