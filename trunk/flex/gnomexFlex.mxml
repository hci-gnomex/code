<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns="*" 
	xmlns:views="views.*"  

	preinitialize="init()" 
	 backgroundGradientColors="[#a8c1ce, #fbfcfd]" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" shadowDirection="0">
	

	     
        <mx:Style source="css/gnomex_flex.css" />
        
            <mx:Script>
            
        <![CDATA[
        	import views.PromptXMLListCollection;
        	import mx.collections.XMLListCollection;
            import mx.controls.Alert;
            import mx.rpc.events.ResultEvent;        
            import mx.managers.CursorManager;
            import mx.managers.PopUpManager;
	
	        [Bindable]
	        [Embed(source="assets/group.png")]
	        public var iconGroup:Class;
	        
	        
	        [Bindable]
	        [Embed(source="assets/folder_brick.png")]
	        public var iconProject:Class;
	
	        [Bindable]
	        [Embed(source="assets/color_swatch.png")]
	        public var iconExperiment:Class;
	        
	        [Bindable]
	        [Embed(source="assets/basket.png")]
	        public var iconCategory:Class;
	        
	        
	        [Bindable]
	        [Embed(source="assets/chart_curve_error.png")]
	        public var iconQC:Class;
	        

			[Bindable]
			public var promptedLabList:views.PromptXMLListCollection;
			[Bindable]
			public var promptedAppUserList:views.PromptXMLListCollection;
			[Bindable]
			public var promptedSlideProductList:views.PromptXMLListCollection;
			[Bindable]
			public var filteredSlideProductList:XMLListCollection;
			[Bindable]
			public var promptedProjectList:views.PromptXMLListCollection;
			[Bindable]
			public var filteredProjectList:XMLListCollection;
			
            public	var fileDownloadUtil:views.FileDownloadUtil;


			private var appProgressBar:views.AppProgressView;
            
            private function search():void {
            	theViews.selectedIndex=7;
 				navSearchView.searchViews.selectedIndex=1;
            	var params:Object = new Object();
            	params.text = searchText.text;
            	
            
            	CursorManager.setBusyCursor();
            	navSearchView.searchView.searchGNomEx.send(params);
            	CursorManager.removeBusyCursor();
            	
            	
            }

            
            private function init():void {
            	XML.ignoreWhitespace = true;
				XML.prettyPrinting = false;
				
            	createSecurityAdvisor.send();
            } 
            public  function formatDate(date:Date):String {
			    return date.getFullYear().toString() + 
                    '-' + (date.getMonth()+1).toString() + '-' + date.getDate();
            }
            
                   
            public function getUserName(item:Object, col:int):String 
            { 
	        	var userName:String = "";
	        	var appUserList:XMLList = getAppUserList.lastResult.AppUser;     			
	        	for(var i:Number = 0; i < appUserList.length(); i++) {
	            	if(appUserList[i].@idAppUser == item.@idAppUser) {
	                	userName = getAppUserList.lastResult.AppUser[i].@displayName;
	                    break;
	             	}
	             }
	             return userName;
       	
            }
            public function getLabName(item:Object, col:int):String 
            { 
	        	var labName:String = "";
	        	var labList:XMLList = getLabList.lastResult.Lab;     			
	        	for(var i:Number = 0; i < labList.length(); i++) {
	            	if(labList[i].@idLab == item.@idLab) {
	                	labName = labList[i].@name;
	                    break;
	             	}
	             }
	             return labName;
       	
            }
            
            private function onCreateSecurityAdvisor(event:ResultEvent):void {

			    appProgressBar = new views.AppProgressView();
			    PopUpManager.addPopUp(appProgressBar, mainArea, false);
			    PopUpManager.centerPopUp(appProgressBar);

            	manageDictionaries.send();
            	getAppUserList.send();
            	getExperimentDesignList.send();
            	getExperimentFactorList.send();
            	getLabList.send();
            	getSlideProductList.send();
            	getProjectList.send();
            	
            }
            private function onManageDictionaries(event:ResultEvent):void {
            	var emptyNode:XML = <DictionaryEntry value='' display=''/>;
            
            	var dictionaryList:XMLList = manageDictionaries.lastResult.Dictionary;     			
	        	for(var i:Number = 0; i < dictionaryList.length(); i++) {
	        		dictionaryList[i].insertChildAfter(null, emptyNode);
	        	}
	        	enableApp();
            }
            
            private function onGetAppUserList(event:ResultEvent):void {
	        	var emptyNode:XML = <Lab idLab='' name='' label=''/>;
	        	promptedAppUserList = new PromptXMLListCollection(emptyNode, new XMLListCollection(getAppUserList.lastResult.AppUser));
	        	enableApp();
            }
            
            private function onGetExperimentDesignList(event:ResultEvent):void {
	        }		
	        
			private function onGetExperimentFactorList(event:ResultEvent):void {
	        }
	        
	        private function onGetLabList(event:ResultEvent):void {
	        	var emptyNode:XML = <Lab idLab='' name='' label=''/>;
	        	promptedLabList = new PromptXMLListCollection(emptyNode, new XMLListCollection(getLabList.lastResult.Lab));
	        	enableApp();
	        }		
            
            private function onGetSlideProductList(event:ResultEvent):void {
	        	var emptyNode:XML = <SlideProduct idSlideProduct='' name='' label=''/>;
	        	promptedSlideProductList = new PromptXMLListCollection(emptyNode, new XMLListCollection(getSlideProductList.lastResult.SlideProduct));
	        	
	        	filteredSlideProductList = new XMLListCollection(getSlideProductList.lastResult.SlideProduct);
	        	filteredSlideProductList.addItemAt(emptyNode, 0);
	        	enableApp();
	            
	        }		
            private function onGetProjectList(event:ResultEvent):void {
	        	var emptyNode:XML = <Project idProject='' name='' idLab=''/>;
	        	promptedProjectList = new PromptXMLListCollection(emptyNode, new XMLListCollection(getProjectList.lastResult.Project));
	        	
	        	filteredProjectList = new XMLListCollection(getProjectList.lastResult.Project);
	        	filteredProjectList.addItemAt(emptyNode, 0);
	        	enableApp();
	        }
	        
	        private function enableApp():void {
	        	if (promptedProjectList != null &&
	        	    filteredProjectList != null &&
	        	    promptedAppUserList != null &&
	        	    promptedLabList != null &&
	        	    promptedSlideProductList != null &&
	        	    filteredSlideProductList != null) {
	        	    	
	        	    toggleButtonBar.enabled = true;
	        	    toggleButtonBar.visible = true;
	        	    PopUpManager.removePopUp(appProgressBar);
	        	    searchText.visible = true;
	        	    requestNumber.visible = true;
	        	    requestNumberLabel.visible = true;
	        	    searchButton.visible = true;
	        	    lookupButton.visible = true;
	        	    searchLabel.visible = true;
	        	    	
	        	}
	        }
	        	
	        
            
            
        ]]>
    </mx:Script>
    
    	
	<mx:HTTPService 
    id="createSecurityAdvisor" 
    url="http://localhost/gnomex/CreateSecurityAdvisor.gx"
    resultFormat="e4x"
    result="onCreateSecurityAdvisor(event)"
    destination="createSecurityAdvisor"
    showBusyCursor="false"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService > 
    
    
    <mx:HTTPService 
    id="getAppUserList" 
    url="http://localhost/gnomex/GetAppUserList.gx"
    resultFormat="e4x"
    result="onGetAppUserList(event)"
    destination="getAppUserList"
    showBusyCursor="false"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService >
    
        
    <mx:HTTPService 
    id="manageDictionaries" 
    url="http://localhost/gnomex/ManageDictionaries.gx"
    resultFormat="e4x"
        result="onManageDictionaries(event)"
    destination="manageDictionaries"
    showBusyCursor="false"
    useProxy="false">
    <mx:request>
       <action>load</action>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="getExperimentDesignList" 
    url="http://localhost/gnomex/GetExperimentDesignList.gx"
    resultFormat="e4x"
    showBusyCursor="false"
    destination="getExperimentDesignList"
    result="onGetExperimentDesignList(event)"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="getExperimentFactorList" 
    url="http://localhost/gnomex/GetExperimentFactorList.gx"
    resultFormat="e4x"
    showBusyCursor="false"
    result="onGetExperimentFactorList(event)"
    destination="getExperimentFactorList"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService >
         
         
    <mx:HTTPService 
    id="getLabList" 
    url="http://localhost/gnomex/GetLabList.gx"
    showBusyCursor="false"
    resultFormat="e4x"
    result="onGetLabList(event)"
    destination="getLabList"
    useProxy="false">
    <mx:request>
           <listKind>UnboundedLabList</listKind>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="getSlideProductList" 
    url="http://localhost/gnomex/GetSlideProductList.gx"
    showBusyCursor="false"
    resultFormat="e4x"
    result="onGetSlideProductList(event)"
    destination="getSlideProductList"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="getProjectList" 
    url="http://localhost/gnomex/GetProjectList.gx"
    resultFormat="e4x"
    result="onGetProjectList(event)"
    destination="getProjectList"
    showBusyCursor="false"
    useProxy="false">
    <mx:request>
    </mx:request>
    </mx:HTTPService >
    
    <mx:XMLListCollection id="dictionaryEntries" source="{manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.LabelingReactionSize').DictionaryEntry}"/>
    <mx:XMLListCollection id="experimentDesignList" source="{getExperimentDesignList.lastResult.ExperimentDesign}"/>
    <mx:XMLListCollection id="experimentFactorList" source="{getExperimentFactorList.lastResult.ExperimentFactor}"/>

	    <mx:VBox id="topArea" width="100%" height="100%" verticalGap="22">
	    
		   <mx:ApplicationControlBar  width="100%" fillColors="[#2e63a5, #6295d2]" fillAlphas="[1.0, 1]" dock="true"  paddingBottom="0" paddingLeft="1" paddingRight="1" paddingTop="1">
		      <mx:VBox width="100%" verticalGap="0">
			      <mx:HBox width="100%"  horizontalAlign="right" verticalAlign="top" horizontalGap="0" paddingBottom="3" backgroundAlpha=".5" styleName="catalogPanel">
			        <mx:HBox width="100%" height="100%" horizontalAlign="left" horizontalGap="0" paddingBottom="0" paddingTop="2">
			          <mx:Label text="GNomEx" id="appLabel" fontFamily="Arial" fontSize="16" color="#ffffff" fontWeight="bold"/>
			          <mx:HBox width="100%" height="100%" horizontalAlign="right" paddingLeft="10" paddingRight="12" horizontalGap="26">
			            <mx:HBox horizontalAlign="left" width="100%" paddingLeft="40">
			            </mx:HBox>
			            
			            <mx:HBox height="100%" horizontalGap="2">
			              <mx:Label text="Lookup by #" height="20" color="#ffffff" id="requestNumberLabel" visible="false"/>
			              <mx:TextInput id="requestNumber" height="20" backgroundAlpha="0.89" borderStyle="inset" width="56" visible="false"/>
			              <mx:Button id="lookupButton"  
			              	fontFamily="Arial"  height="20"
			              	color="#400040" visible="false" icon="@Embed('assets/arrow_right.png')"/>
			            </mx:HBox>
			            <mx:Spacer width="100"/>
			            <mx:HBox height="100%" horizontalAlign="right" horizontalGap="2">
			              <mx:Label text="Search" height="20" color="#ffffff" id="searchLabel" visible="false"/>
			              <mx:TextInput id="searchText" height="20" backgroundAlpha="0.89" borderStyle="inset" width="118" visible="false"/>
			              <mx:Button id="searchButton" height="20" click="theViews.selectedIndex=7;callLater(search)" fontFamily="Arial" visible="false" icon="@Embed('assets/magnifier.png')" toolTip="Search"/>
			            </mx:HBox>
			          </mx:HBox>
			        </mx:HBox>
			        <mx:HBox horizontalAlign="right" verticalAlign="top" horizontalGap="3">
			    	    <mx:LinkButton label="Help" color="#ffffff"/>
			    	    <mx:LinkButton label="About" color="#ffffff"/>
			        </mx:HBox>
			      </mx:HBox>
		          <mx:ToggleButtonBar id="toggleButtonBar"
	                dataProvider="{theViews}" width="100%" 
                paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" buttonHeight="25" enabled="true" visible="false" alpha=".6" useHandCursor="true" verticalAlign="middle" color="#ffffff" toggleOnClick="true"/>
		      	
		      	
		      </mx:VBox>

		      
		</mx:ApplicationControlBar>
	    
	    

        
        
	      <mx:VBox id="mainArea" width="100%" height="100%" paddingTop="1" paddingBottom="1" paddingLeft="0" paddingRight="0" horizontalCenter="0">
          
   

        <mx:ViewStack id="theViews" width="100%" height="100%"  creationPolicy="auto" paddingTop="0">

	        <mx:Canvas label="Submit Request"/>
	        
	        <views:NavExperimentView width="100%" height="100%">
	        </views:NavExperimentView>
	        
	        <views:NavAnalysisView label="Analysis"/>


	        <mx:Canvas label="Methods and Materials"/>
	        

	        <views:NavWorkflowView width="100%" height="100%">
	        </views:NavWorkflowView>

	        
	        <views:NavUsersView width="100%" height="100%" backgroundAlpha="1.0">	
	        </views:NavUsersView>

	        <mx:Canvas label="Dictionaries"/>
	        
           <views:NavSearchView id="navSearchView" width="100%" height="100%" backgroundAlpha="1.0">	
	        </views:NavSearchView>



      </mx:ViewStack> 
     </mx:VBox>
     

	 </mx:VBox>
	
	
</mx:Application>
