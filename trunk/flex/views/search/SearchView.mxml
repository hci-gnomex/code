<?xml version="1.0" encoding="utf-8"?>
<mx:VBox label="Advanced Search"  
	xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:views="views.*"
	paddingBottom="6" paddingTop="8" paddingLeft="8" paddingRight="8"
	width="100%" height="100%"  creationPolicy="all">


  <mx:HTTPService  
    id="searchGNomEx" 
    url="SearchIndex.gx"
    destination="searchGNomEx"
    resultFormat="e4x"
    result="onSearchIndex(event)"
	fault="parentApplication.onFailHttpRequest('Failed to search index', event)"
    method="POST"
    useProxy="false">
    <mx:request>
            <listKind>SearchList</listKind>
            <matchAnyTerm>{matchAnyTermRadio.selected == true ? "Y" : "N"}</matchAnyTerm>
            <matchAllTerms>{matchAllTermsRadio.selected == true ? "Y" : "N"}</matchAllTerms>
            <text1>{text1.text}</text1>
            <text2>{text2.text}</text2>
            <text3>{text3.text}</text3>
            <text4>{text4.text}</text4>
            <idLab>{labCombo.selectedItem.@idLab}</idLab>
            <idOrganism>{organismCombo.selectedItem.@value}</idOrganism>
            <idSampleType>{sampleTypeCombo.selectedItem.@value}</idSampleType>
            <codeRequestCategory>{requestCategoryCombo.selectedItem.@value}</codeRequestCategory>
            <searchOrganismOnSlideProduct>{searchOrganismOnSlideProductRadio.selected == true ? "Y" : "N" }</searchOrganismOnSlideProduct>
            <searchOrganismOnSample>{searchOrganismOnSampleRadio.selected == true ? "Y" : "N" }</searchOrganismOnSample>
            <codeMicroarrayCategory>{microarrayCategoryCombo.selectedItem.@value}</codeMicroarrayCategory>
            <idSampleSource>{sampleSourceCombo.selectedItem.@value}</idSampleSource>
            <idSlideProduct>{microarrayCombo.selectedItem.@idSlideProduct}</idSlideProduct>
            <experimentDesignConcatCodes>{experimentDesignCodes}</experimentDesignConcatCodes>
            <experimentFactorConcatCodes>{experimentFactorCodes}</experimentFactorConcatCodes>
            <lab>{labCombo.selectedItem.@name}</lab>
            <organism>{organismCombo.selectedItem.@organism}</organism>
            <slideProduct>{microarrayCombo.selectedItem.@name}</slideProduct>
            <microarrayCategory>{microarrayCategoryCombo.selectedItem.@display}</microarrayCategory>
            <requestCategory>{requestCategoryCombo.selectedItem.@display}</requestCategory>
            <sampleSource>{sampleSourceCombo.selectedItem.@display}</sampleSource>
            <sampleType>{sampleTypeCombo.selectedItem.@display}</sampleType>
            <searchPublicProjects>{includePublicProjectsCheckBox.selected == true ? "Y" : "N"}</searchPublicProjects>
            <showCategory>N</showCategory>
    </mx:request>
    </mx:HTTPService >
    
    <mx:Script> 
        <![CDATA[
        import mx.events.ListEvent;
        import mx.rpc.events.FaultEvent;           
        import mx.rpc.events.ResultEvent;   
        import mx.controls.Alert;
        
        
        [Bindable]
        private var experimentDesignCodes:String = new String();
        [Bindable]
        private var experimentFactorCodes:String = new String();
        
        [Bindable]
        private var myXMLString:String = "";
        
       public function checkSecurity():void {
       	if (parentApplication.hasPermission("canAccessAnyObject") ||
       	    parentApplication.isGuestMode()) {
       		this.includePublicProjectsCheckBox.visible = false;    	
       	} else {
       		this.includePublicProjectsCheckBox.visible = true;
       	}
       }


       public function initializeData():void {
       	parentApplication.filteredSlideProductList.filterFunction = filterSlideProduct;
       	
       	microarrayCategoryCombo.dataProvider = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.MicroarrayCategory').DictionaryEntry;
       	organismCombo.dataProvider = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.Organism').DictionaryEntry;
       	sampleSourceCombo.dataProvider = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.SampleSource').DictionaryEntry;
       	requestCategoryCombo.dataProvider = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry;
       	sampleTypeCombo.dataProvider = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.SampleType').DictionaryEntry;
       }
       
        private function filterSlideProduct(item:Object):Boolean {
        	if (item.@idSlideProduct == null || item.@idSlideProduct == "") {
        		return true;
        	}
			var doesMatchRequestCategoryVendor:Boolean = true;
        	if (requestCategoryCombo.selectedItem != null && 
        	    requestCategoryCombo.selectedItem.@value != '') {
        		doesMatchRequestCategoryVendor = false;
				var rCategory:Object = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry.(@value == requestCategoryCombo.selectedItem.@value);
        		if (item.@idVendor == rCategory.@idVendor) {
        			doesMatchRequestCategoryVendor = true;        			
        		}
        	}       	
        	
        	var doesMatchOrganism:Boolean = true;
        	if (organismCombo.selectedItem != null && 
        	    organismCombo.selectedItem.@value != null  &&
        	    organismCombo.selectedItem.@value != "") {
        		if (item.@idOrganism == organismCombo.selectedItem.@idOrganism) {
        			doesMatchOrganism = true;
        		} else {
        			doesMatchOrganism = false;
        		}
        	}
        	var doesMatchExperimentCategory:Boolean = true;
        	if (microarrayCategoryCombo.selectedItem != null && 
        	    microarrayCategoryCombo.selectedItem.@value != null &&
        	    microarrayCategoryCombo.selectedItem.@value != "") {
        		doesMatchExperimentCategory = false;
        		var categoriesForSlideProduct:XMLList  = item.microarrayCategories.MicroarrayCategory;
        		for(var x:Number = 0; x < categoriesForSlideProduct.length(); x++) {
        			if (categoriesForSlideProduct[x].@codeMicroarrayCategory == microarrayCategoryCombo.selectedItem.@value) {
        				doesMatchExperimentCategory = true;
        				break;
        			}
        		}
        	}
        	var doesMatchGroup:Boolean = true;
        	if (labCombo.selectedItem != null && labCombo.selectedItem.@idLab != "") {
        		if (item.@isCustom == "Y" && item.@idLab == labCombo.selectedItem.@idLab) {
        			doesMatchGroup = true;
        		} else {
        			doesMatchGroup = false;
        		}
        	}
        	
        	return doesMatchRequestCategoryVendor && doesMatchOrganism && doesMatchExperimentCategory && doesMatchGroup;
        }  
        public function callSearchIndex():void {
			var codeDesignList:XMLList = parentApplication.getExperimentDesignList.lastResult.ExperimentDesign;     			
			experimentDesignCodes = new String(); 
        	for(var i:Number = 0; i < codeDesignList.length(); i++) {
        		if (codeDesignList[i].@isSelected != null && codeDesignList[i].@isSelected.toString() == "true") {
            		experimentDesignCodes = experimentDesignCodes + codeDesignList[i].@codeExperimentDesign + ":";
          		}
            } 
            
            var codeFactorList:XMLList = parentApplication.getExperimentFactorList.lastResult.ExperimentFactor;     			
			experimentFactorCodes = new String(); 
        	for(var i1:Number = 0; i1 < codeFactorList.length(); i1++) {
        		if (codeFactorList[i1].@isSelected != null && codeFactorList[i1].@isSelected.toString() == "true") {
            		experimentFactorCodes = experimentFactorCodes + codeFactorList[i1].@codeExperimentFactor + ":";
          		}
            } 
            
            //var codeFactorList:XMLList = parentApplication.getExperimentFactorList.lastResult.ExperimentFactor;    
            //myXMLString = codeFactorList.toXMLString();
            //trace(myXMLString.length);
            //trace(myXMLString);
        	searchGNomEx.send(); 
        }
        
        private function onSearchIndex(event:ResultEvent): void {        	
        	parentDocument.searchViews.selectedChild = parentDocument.searchResultsView;
        	parentDocument.onViewSwitch();
        	parentDocument.setResultsCount();
        	callLater(parentDocument.expandAllNodes);
        }
        

		public function clearForm():void {
			this.text1.text = "";
			this.text2.text = "";
			this.text3.text = "";
			this.text4.text = "";
			this.labCombo.selectedIndex = 0;
			this.sampleSourceCombo.selectedIndex = 0;
			this.organismCombo.selectedIndex = 0;
			this.microarrayCategoryCombo.selectedIndex = 0;
			this.microarrayCombo.selectedIndex = 0;
			this.requestCategoryCombo.selectedIndex = 0;
			this.sampleTypeCombo.selectedIndex = 0;
			
			for each (var item:Object in parentApplication.experimentDesignList) {
				item.@isSelected = "false";
			}
			this.experimentDesignGrid.invalidateDisplayList();
			this.experimentDesignGrid.invalidateList();
			
			for each (var item1:Object in parentApplication.experimentFactorList) {
				item1.@isSelected = "false";
			}
			this.experimentFactorGrid.invalidateDisplayList();
			this.experimentFactorGrid.invalidateList();
		}
		
		private function toggleExperimentDesignCheck(event:ListEvent):void {
			if (event.columnIndex == 0) {
   				return;
   			}
			if (experimentDesignGrid.selectedItem.@isSelected == "true") {
				experimentDesignGrid.selectedItem.@isSelected = "false";
			} else {
				experimentDesignGrid.selectedItem.@isSelected = "true";
			}
		}
		private function toggleExperimentFactorCheck(event:ListEvent):void {
			if (event.columnIndex == 0) {
   				return;
   			}
			if (experimentFactorGrid.selectedItem.@isSelected == "true") {
				experimentFactorGrid.selectedItem.@isSelected = "false";
			} else {
				experimentFactorGrid.selectedItem.@isSelected = "true";
			}
		}
                
           

        ]]>
    </mx:Script>
    
   
<mx:HDividedBox width="100%" height="100%">
    
        <mx:VBox height="100%" verticalGap="20" paddingRight="4">
            <mx:HBox width="100%">
              <mx:VBox width="100%" verticalGap="8">
                <mx:HBox>
                	<mx:Label text="Keywords:" textAlign="left" width="130"/>
                	<mx:TextInput id="text1" width="80">
                    </mx:TextInput>
                    <mx:TextInput id="text2" width="80">
                    </mx:TextInput>
                    <mx:TextInput id="text3" width="80">
                    </mx:TextInput>
                    <mx:TextInput id="text4" width="80">
                    </mx:TextInput>

                </mx:HBox>
              	
              </mx:VBox>
            </mx:HBox>
            <mx:HBox>
             <mx:Label text="Experiment Category:" textAlign="left" width="130"/>
             <mx:ComboBox id="requestCategoryCombo"  labelField="@display" 
             	 width="200">
              <mx:change>parentApplication.filteredSlideProductList.refresh();microarrayCombo.selectedIndex=0</mx:change>
             </mx:ComboBox>
            </mx:HBox>
            <mx:HBox>
               <mx:Label text="Sample Type:" textAlign="left" width="130"/>
               <mx:ComboBox id="sampleTypeCombo"  
                labelField="@display"
               	 width="200">
               </mx:ComboBox>
            </mx:HBox>
            <mx:HBox>
               <mx:Label text="Sample Source:" textAlign="left" width="130"/>
               <mx:ComboBox id="sampleSourceCombo"  
                labelField="@display"
               	 width="200">
               </mx:ComboBox>
            </mx:HBox>
            <mx:HBox paddingBottom="0" width="100%">
             <mx:Label text="Organism:" textAlign="left" width="130"/>
            <mx:VBox verticalGap="0">
               <mx:ComboBox 
               	id="organismCombo"  labelField="@display"  
               width="200" 
               change="parentApplication.filteredSlideProductList.refresh();microarrayCombo.selectedIndex=0">
               </mx:ComboBox>
               <mx:HBox>
                  <mx:RadioButtonGroup id="radiogroup2"/>
                  <mx:RadioButton id="searchOrganismOnSlideProductRadio" label="Microarray" groupName="radiogroup2" selected="true"/>
                  <mx:RadioButton id="searchOrganismOnSampleRadio" label="Sample" groupName="radiogroup2" />
               </mx:HBox>
            </mx:VBox>
            </mx:HBox>
            <mx:HBox>
              <mx:Label text="Group:" textAlign="left" width="130"/>
              <mx:ComboBox id="labCombo"  
              	labelField="@name" dataProvider="{parentApplication.promptedLabList}" 
               width="200"
               change="parentApplication.filteredSlideProductList.refresh();microarrayCombo.selectedIndex=0">
              	</mx:ComboBox>
              	
            </mx:HBox>
            <mx:HBox>
             <mx:Label text="Microarray Category:" textAlign="left" width="130"/>
             <mx:ComboBox id="microarrayCategoryCombo"  labelField="@display" 
             	 width="200" change="parentApplication.filteredSlideProductList.refresh();microarrayCombo.selectedIndex=0">
             </mx:ComboBox>
            </mx:HBox>
            <mx:HBox width="100%">
             <mx:Label text="Microarray:" textAlign="left" width="130"/>
             <mx:ComboBox id="microarrayCombo"  
             	labelField="@name" 
             	dataProvider="{parentApplication.filteredSlideProductList}" 
             	 width="340">
             </mx:ComboBox>
            </mx:HBox>
    	<mx:VBox width="100%" height="100%" verticalAlign="bottom">
    	    <mx:HBox width="100%">
    	         <mx:VBox verticalGap="0">
		        	<mx:RadioButtonGroup id="radiogroup1"/>
		        	<mx:RadioButton id="matchAllTermsRadio" label="Match ALL terms" groupName="radiogroup1" selected="true"/>
		        	<mx:RadioButton id="matchAnyTermRadio" label="Match ANY term" groupName="radiogroup1" selected="false"/>
    	         </mx:VBox>
	        	<mx:HBox width="100%"  height="100%" verticalAlign="bottom" horizontalAlign="left">
	        		<mx:CheckBox label="Include public projects" id="includePublicProjectsCheckBox" selected="true" width="100%" textAlign="right" >
	        		</mx:CheckBox>
	        	</mx:HBox>
    	    </mx:HBox>
         </mx:VBox>
            
        </mx:VBox>
        <mx:HBox width="250" height="100%"  paddingLeft="4">
            <mx:DataGrid  width="100%" height="100%" dataProvider="{parentApplication.experimentDesignList}" selectionColor="#FFFFFF" rowHeight="20" id="experimentDesignGrid">
                <mx:itemClick>toggleExperimentDesignCheck(event)</mx:itemClick>
                <mx:columns>
                    <mx:DataGridColumn headerText=" " 
                    	width="18" 
                    	editable="true"                        	
                    	dataField="@isSelected" 
                    	editorDataField="selected"
                    	itemRenderer="views.renderers.CheckBox" >
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Experiment Design (general intent)" editable="false" editorDataField="selected" dataField="@experimentDesign"/>
                </mx:columns>
            </mx:DataGrid>
            <mx:DataGrid width="100%" height="100%" dataProvider="{parentApplication.experimentFactorList}" selectionColor="#FFFFFF" rowHeight="20" id="experimentFactorGrid" itemClick="toggleExperimentFactorCheck(event)">
                <mx:columns>
                    <mx:DataGridColumn headerText=" " 
                    	width="18" 
                    	editable="true"                        	
                    	dataField="@isSelected" 
                    	editorDataField="selected" 
                    	itemRenderer="views.renderers.CheckBox">
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Experimental Factors (differences)" editable="false" dataField="@experimentFactor"/>
                </mx:columns>
            </mx:DataGrid>
        </mx:HBox>



       
						
						

</mx:HDividedBox>
</mx:VBox>
