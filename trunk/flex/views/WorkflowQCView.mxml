<?xml version="1.0" encoding="utf-8"?>
<mx:Panel label="Quality Control"  xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" title="Quality Control" titleIcon="@Embed('../assets/chart_curve.png')">
	
	<mx:HTTPService 
    id="getWorkListQC" 
    url="http://localhost/gnomex/GetWorkItemList.gx"
    resultFormat="e4x"
    destination="getWorkListQC"
    showBusyCursor="true"
    result="onGetWorkList(event)"
	fault="onFailGetWorkList(event)"
    useProxy="false">
    <mx:request>
        <codeStepNext>QC</codeStepNext>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="saveWorkItemQC" 
    url="http://localhost/gnomex/SaveWorkItemQualityControl.gx"
    resultFormat="e4x"
    destination="saveWorkItemQualityControl"
    showBusyCursor="true"
    result="onSaveWorkItemQualityControl(event)"
    fault="onFailSaveWorkItemQualityControl(event)"
    method="POST"
    useProxy="false">
    <mx:request>
        <workItemXMLString>{dirtyWorkItems.toXMLString()}</workItemXMLString>
    </mx:request>
    </mx:HTTPService >
    
    <mx:XMLListCollection id="workList" source="{getWorkListQC.lastResult.WorkItem}"/>
    

    <mx:Script>
        <![CDATA[
        import mx.collections.ArrayCollection;
        import mx.collections.XMLListCollection;
        import mx.rpc.events.FaultEvent; 
        import mx.rpc.events.ResultEvent;   
        import mx.controls.Alert;
        
        [Bindable]
        private var dirtyWorkItems:XMLListCollection;
        
        [Bindable]
        private var requestNumbers:ArrayCollection;
        
        private function refreshWorkList():void {
        	getWorkListQC.send();
        }
 
        private function getGridRowNumber(item:Object,col:int):String
        {
        	if (workList!= null) {
	           var x:int = workList.getItemIndex(item) + 1;
	           return String(x);     		
        	} else {
        		return "";
        	}
        }
                
        private function onEdit(event:Event):void {
        	workList.filterFunction = null;
	    	workListGrid.selectedItem.@isDirty = "Y";
        }
        
        private function save():void {
        	var dirtyItems:XMLList = getWorkListQC.lastResult.WorkItem.(@isDirty == 'Y');        	
        	dirtyWorkItems = new XMLListCollection(dirtyItems);
        	saveWorkItemQC.send();
        }
        
        private function onGetWorkList(event:ResultEvent):void {
        	refreshRequestNumbers();
        }
        
        private function onFailGetWorkList(event:FaultEvent):void {
        	Alert.show("failed to get work list " + event.message);
        }
        
        private function onSaveWorkItemQualityControl(event:ResultEvent):void {
        	if (saveWorkItemQC.lastResult.name() == "WorkItemList") {
        		
        	} else {
        		Alert.show(saveWorkItemQC.lastResult..ACTMESSAGE.@TEXT);
        	}
        }
        
        private function onFailSaveWorkItemQualityControl(event:FaultEvent):void {
        	Alert.show("failed to save work list " + event.message);
        }
        
        private function refreshRequestNumbers():void {
        	requestNumbers = new ArrayCollection();

			var blankItem:Object = new Object();
			blankItem.data = "";
			blankItem.label = "";
        	requestNumbers.addItem(blankItem);
        	
        	for(var x:Number = 0; x < workList.length; x++) {
        		var item:Object = workList.getItemAt(x, 0);
        		
        		var found:Boolean = false;
        		for(var i:Number = 0; i < requestNumbers.length; i++) {
        			if (requestNumbers.getItemAt(i).label == item.@requestNumber) {
        				found = true;
        				break;
        			}
        		}
        		if (found == false) {
	    			var newItem:Object = new Object();
	    			newItem.data = item.@requestNumber;
	    			newItem.label = item.@requestNumber;
        			requestNumbers.addItem(newItem);
        		}
        	}
        }
        
        private function filterWorkList(item:Object):Boolean {
        	var keep:Boolean = true;
        	if (requestNumberCombo.selectedItem != null && requestNumberCombo.selectedItem.label != "") {
        		keep = false;
        		if (item.@requestNumber == requestNumberCombo.selectedItem.label) {
        			keep = true;
        		}
        	}        	
        	return keep;
        }
  
           

        ]]>
    </mx:Script> 
    
   
    <mx:VBox width="100%" height="100%">
            <mx:HBox width="100%" horizontalAlign="left" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
            	<mx:Button label="Save" click="save()" icon="@Embed('../assets/action_save.gif')">
            	</mx:Button>
            	<mx:Button label="Refresh" icon="@Embed('../assets/action_refresh.gif')" 
            		click="refreshWorkList();"/>
            	<mx:VRule height="20"/>
            	<mx:HBox width="100%" horizontalAlign="right">
	            	<mx:Label text="Request #"/>
	            	<mx:ComboBox id="requestNumberCombo" dataProvider="{requestNumbers}" change="workList.filterFunction = filterWorkList;workList.refresh()"  width="70"></mx:ComboBox>
            		
            	</mx:HBox>
            	
            	
            </mx:HBox>
        	
		<mx:VBox width="100%" height="100%" verticalGap="0">
	
			<mx:DataGrid height="100%" id="workListGrid"  width="100%" dataProvider="{workList}" editable="true" itemEditEnd="onEdit(event)">
				<mx:columns>
					<mx:DataGridColumn editable="false" headerText=""  width="3" labelFunction="getGridRowNumber"/>
					<mx:DataGridColumn editable="false" headerText="Request #"  width="12" dataField="@requestNumber"/>
					<mx:DataGridColumn editable="false" headerText="Ready Date" width="15" dataField="@workItemCreateDate"/>
					<mx:DataGridColumn editable="false" headerText="Requester name"  width="20" dataField="@idAppUser" labelFunction="parentApplication.getUserName"/>
	                <mx:DataGridColumn editable="false" headerText="Sample #" width="12" dataField="@sampleNumber"/>
					<mx:DataGridColumn headerText="Conc. ng/uL" width="15" dataField="@qualCalcConcentration"/>
					<mx:DataGridColumn headerText="260/230" width="15" dataField="@qual260nmTo230nmRatio"/>
					<mx:DataGridColumn headerText="260/280" width="15" dataField="@qual260nmTo280nmRatio"/>
					<mx:DataGridColumn headerText="28S/18S" width="15" dataField="@qual28sTo18sRibosomalRatio"/>
					<mx:DataGridColumn headerText="RIN#" width="15" dataField="@qualRINNumber"/>
	                <mx:DataGridColumn headerText="Status"  width="12" dataField="@qualStatus" 
	                	editorDataField="value"
	                   rendererIsEditor="true"  
	                   itemRenderer="views.renderers.ComboBoxWorkflowStatusQC" />
				</mx:columns>
		</mx:DataGrid>
			
		</mx:VBox>
	  	
	  </mx:VBox>
					
						

</mx:Panel>
