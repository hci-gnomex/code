<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow   
	xmlns:mx="http://www.adobe.com/2006/mxml"   
	xmlns:views="views.*"  
	xmlns:util="views.util.*"  
	xmlns:search="views.search.*" 
	showCloseButton="true"
	close="{closeWindow()}"
	title="Edit User Account Settings"
	creationPolicy="all"
	width="720" height="428" icon="@Embed('../../assets/user.png')">

	<mx:HTTPService 
    id="getAppUserPublic" 
    url="GetAppUserPublic.gx"
    destination="getAppUserPublic"
    showBusyCursor="true"
    resultFormat="e4x"
    result="resultHandler(event)"
 	fault="parentApplication.onFailHttpRequest('Failed to get user', event)"
    useProxy="false">
    <mx:request>
            <idAppUser>{parentApplication.idAppUser}</idAppUser>
    </mx:request>
    </mx:HTTPService>
	
	<mx:HTTPService 
		id="saveAppUserPublic" 
		url="SaveAppUserPublic.gx"
		showBusyCursor="true"
		resultFormat="e4x"
		result="onSaveAppUserPublic(event)"
		fault="parentApplication.onFailHttpRequest('Unable to save user', event)"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="publicSaveSelfRegisteredAppUser" 
		url="PublicSaveSelfRegisteredAppUser.gx"
		showBusyCursor="true"
		resultFormat="e4x"
		result="onPublicSaveSelfRegisteredAppUser(event)"
		fault="parentApplication.onFailHttpRequest('Unable to save self register info', event)"
		useProxy="false">
	</mx:HTTPService >

	<mx:XMLListCollection id="notificationLabs" source="{publicUser.notificationLabs.Lab}"/>
    	

    <mx:Script>
        <![CDATA[
			import hci.flex.controls.ComboBox;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			
			[Bindable]
			public var publicUser:Object;
			
			
			public function init():void {
				getAppUserPublic.send();
			}
			
			
			private function resultHandler(event:ResultEvent):void {
				publicUser = getAppUserPublic.lastResult;
			}
			
			private function closeWindow():void {
				if(dirty.isDirty()) {
					promptToSaveDirty();
				}
				else {
					PopUpManager.removePopUp(this)
				}
				
			}	
			
			public function promptToSaveDirty():void {
				if (dirty.isDirty()) {
					Alert.show("Your changes have not been saved.  Save now?", 
						null, 
						(Alert.YES | Alert.NO), this,  
						onPromptToSaveDirty);
				}
			}
			
			
			private function onPromptToSaveDirty(event:CloseEvent):void {
				if (event.detail==Alert.YES) {
					save();
				}
				dirty.resetDirty();
				closeWindow();				
			}
			
			
			private function save():void {
				var params:Object = new Object();
				if(this.currentState == "editPublicAppUserState") {
					params.idAppUser = parentApplication.idAppUser;
					params.lastName = lastName.text;
					params.firstName = firstName.text;
					params.institute = institute.text;
					params.department = department.text;
					params.email = email.text;
					params.phone = phone.text;
					
					params.userNotificationLabsXMLString = "<userNotificationLabs>" + notificationLabs.toXMLString() + "</userNotificationLabs>";
					
					saveAppUserPublic.send(params);				  
				} else {
					var missingFields:String = "";
					
					params.firstName = firstName.text;
					if(firstName.text.length == 0) {
						missingFields += "\t\t\tFirst Name\n";
					}
					
					params.lastName = lastName.text;
					if(lastName.text.length == 0) {
						missingFields += "\t\t\tLast Name\n";
					}
					
					params.lab = lab.text;
					if(lab.text.length == 0) {
						missingFields += "\t\t\tLab\n";
					}
					
					params.institute = institute.text;
					params.department = department.text;
					
					params.email = email.text;
					if(email.text.length == 0) {
						missingFields += "\t\t\tEmail\n";
					}
					
					params.phone = phone.text;
					if(this.currentState == "externalInterfaceOnlyState") {
						params.userNameExternal = externalUserName_1.text;
						if(externalUserName_1.text.length == 0) {
							missingFields += "\t\t\tUser name\n";
						}
						
						params.passwordExternal = externalUserPassword_1.text;
						if(externalUserPassword_1.text.length == 0) {
							missingFields += "\t\t\tPassword\n";
						}
					} 
					if (this.currentState == "externalUserState") {
						params.userNameExternal = externalUserName.text;
						if(externalUserName.text.length == 0) {
							missingFields += "\t\t\tUser name\n";
						}
						
						params.passwordExternal = externalUserPassword.text;
						if(externalUserPassword.text.length == 0) {
							missingFields += "\t\t\tPassword\n";
						}
					}
					if (this.currentState == "universityUserState") {
						params.uNID = uNID.text;
						if(uNID.text.length == 0) {
							missingFields += "\t\t\tuNID\n";
						}
					}
					params.isActive = "N";
					
					if(missingFields.length > 0) {
						Alert.show("Please complete the following:\n\n" + missingFields, "Missing Fields");
						return;
					}
					
					publicSaveSelfRegisteredAppUser.send(params);				  
				}
				
			}
			
			private function onSaveAppUserPublic(event:ResultEvent):void {
				if (saveAppUserPublic.lastResult.name() == "SUCCESS") {
					dirty.resetDirty();
					closeWindow();
				} else { 
					Alert.show("An error occurred while saving the user record.");
				}	
			}
			
			private function onPublicSaveSelfRegisteredAppUser(event:ResultEvent):void {
				if (publicSaveSelfRegisteredAppUser.lastResult.name() == "SUCCESS") {
					dirty.resetDirty();
					closeWindow();
				} else { 
					if (publicSaveSelfRegisteredAppUser.lastResult.name() == "ERROR") {
						Alert.show(publicSaveSelfRegisteredAppUser.lastResult.@message);	
					} else {
						Alert.show("An error occurred while saving the self register info.");						
					}
					
				}
			}
			
			
			
			private function setDirty():void {
				dirty.setDirty();
				saveButton.enabled = true;
			}
			
			private function onUserAccountChange():void {
				if (this.radioUniversityUser.selected) {
					currentState = "universityUserState";
					externalUserName.text = "";
					this.externalUserPassword.text = "";
				} else {            		
					currentState = "externalUserState";
					uNID.text = "";
					
				}
			}			
			
			
        ]]>
    </mx:Script>

    
    


	<mx:VBox height="100%" 
			 width="100%" 
			 paddingTop="0" 
			 paddingRight="0" 
			 paddingLeft="0" 
			 paddingBottom="0" 
			 styleName="panelBox">
		
		<mx:VDividedBox  width="100%" height="100%" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
			
			<mx:VBox  width="100%" verticalGap="10">
				<mx:HBox verticalAlign="bottom">
					<mx:VBox verticalGap="1"  width="100%">
						<mx:Label text="First name"/>
						<mx:TextInput id="firstName" maxChars="200" text="{publicUser.@firstName}" width="170" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1" width="100%" id="vbox3">
						<mx:Label text="Last name"/>
						<mx:TextInput id="lastName" maxChars="200" editable="true" enabled="true" text="{publicUser.@lastName}" width="170" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1" width="100%" id="labContainer">
						<mx:Label text="Lab:"/>
						<mx:TextInput id="lab" maxChars="200" editable="true" enabled="true" width="170" change="setDirty()"/>
					</mx:VBox>		
				</mx:HBox>
				<mx:HBox verticalAlign="middle">
					<mx:VBox verticalGap="1"   width="100%" >
						<mx:Label text="Institution (optional)" id="Label2"/>
						<mx:TextInput width="170" id="institute" text="{publicUser.@institute}" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1"   width="100%" >
						<mx:Label text="Department (optional)" id="Label1"/>
						<mx:TextInput id="department" text="{publicUser.@department}" width="170" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1"  width="100%" >
						<mx:Label text="Email" id="Label"/>
						<mx:TextInput id="email" text="{publicUser.@email}" width="200" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1"  width="100%" >
						<mx:Label text="Phone" id="Label0"/>
						<mx:TextInput id="phone" text="{publicUser.@phone}" width="130" change="setDirty()"/>
					</mx:VBox>
					
				</mx:HBox>
				<mx:VBox id="userTypeContainer" borderStyle="inset" borderColor="#C9D7E1" paddingBottom="4" paddingRight="4" paddingLeft="4" verticalGap="8">
					<mx:HBox verticalGap="0" visible="true" id="radioUnivOrExternalBox">
						<mx:RadioButtonGroup id="radioGroupUserAccount"/>
						<mx:RadioButton label="University user" groupName="radiogroup1" click="{onUserAccountChange()}" value="UNID" id="radioUniversityUser"/>
						<mx:RadioButton label="External user" groupName="radiogroup1" click="{onUserAccountChange()}" value="EXTERNAL" id="radioExternalUser">
						</mx:RadioButton>
						
					</mx:HBox>	
					<mx:HBox paddingLeft="0">	  	      
						<mx:VBox verticalGap="1" id="unidContainer" width="100">
							<mx:Label text="uNID" />
							<mx:TextInput id="uNID" 
										  text="{parentDocument.fullUser.@uNID}" 
										  width="100" change="setDirty()"/>
						</mx:VBox>		  	    	
					</mx:HBox>		  		
				</mx:VBox>
			</mx:VBox>
			
			<mx:VBox id="labAlertsContainer" width="100%" height="100%" verticalGap="0">
				<mx:Label text="Select labs for which you would like to receive upload notifications:"/>
				<mx:HBox width="100%" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4" height="100%">
					<mx:DataGrid change="setDirty()" id="userNotificationLabs" width="100%" dataProvider="{notificationLabs}" height="100%">
						<mx:columns>
							<mx:DataGridColumn width="50" dataField="@labName" headerText="Lab"/>
							<mx:DataGridColumn width="30" dataField="@role" headerText="Role"/>
							<mx:DataGridColumn width="20" headerText="Receive Alert"  
											   editable="false"                         	
											   dataField="@doUploadAlert" 
											   editorDataField="selected" 
											   textAlign="center" 
											   itemRenderer="{hci.flex.controls.CheckBox.getFactory('Y', 'N', '@doUploadAlert', true)}" >
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</mx:HBox>
			</mx:VBox>			
			
		</mx:VDividedBox>
		
		
		
	</mx:VBox>
	<mx:ControlBar   width="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4" verticalAlign="middle" horizontalAlign="left">
		<mx:HBox width="100%" horizontalAlign="right">
			<util:DirtyNote id="dirty"/>	
			<mx:Button id="saveButton" label="Save" enabled="false"
					   icon="@Embed('../../assets/action_save.gif')" click="save()" disabledIcon="@Embed(source='../../assets/save_disable.png')">
			</mx:Button>
			<mx:Button label="Close"  click="{closeWindow()}"/>			
		</mx:HBox>	
	</mx:ControlBar>
	
	<mx:states>
		<mx:State name="editPublicAppUserState">
			<mx:RemoveChild target="{userTypeContainer}"/>
			<mx:RemoveChild target="{labContainer}"/>
		</mx:State>
		<mx:State name="externalUserState">
			<mx:AddChild relativeTo="{unidContainer}" position="before">
				<mx:HBox width="100%" >
					<mx:VBox verticalGap="1"   id="vbox2">
						<mx:Label text="User name" />
						<mx:TextInput id="externalUserName" 
									  width="120" text="{parentDocument.fullUser.@userNameExternal}" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1"  >
						<mx:Label text="Password"/>
						<mx:TextInput id="externalUserPassword" 
									  text="{parentDocument.fullUser.@passwordExternalEntered}" 
									  width="167" displayAsPassword="true"  change="setDirty()"/>
					</mx:VBox>
				</mx:HBox>
				
			</mx:AddChild>
			<mx:RemoveChild target="{unidContainer}"/>
			<mx:RemoveChild target="{labAlertsContainer}"/>
			<mx:SetProperty 
				target="{this}" 
				name="height" value="300"/>
		</mx:State>
		<mx:State name="universityUserState">
			<mx:RemoveChild target="{labAlertsContainer}"/>
			<mx:SetProperty 
				target="{this}" 
				name="height" value="300"/>
		</mx:State>
		<mx:State name="externalInterfaceOnlyState">
			<mx:AddChild relativeTo="{unidContainer}" position="before">
				<mx:HBox width="100%" >
					<mx:VBox verticalGap="1" id="vbox4">
						<mx:Label text="User name" />
						<mx:TextInput id="externalUserName_1" 
									  width="120" text="{parentDocument.fullUser.@userNameExternal}" change="setDirty()"/>
					</mx:VBox>
					<mx:VBox verticalGap="1"  >
						<mx:Label text="Password"/>
						<mx:TextInput id="externalUserPassword_1" 
									  text="{parentDocument.fullUser.@passwordExternalEntered}" 
									  width="167" displayAsPassword="true"  change="setDirty()"/>
					</mx:VBox>
				</mx:HBox>
				
			</mx:AddChild>
			<mx:RemoveChild target="{radioUnivOrExternalBox}"/>
			<mx:RemoveChild target="{unidContainer}"/>
			<mx:RemoveChild target="{labAlertsContainer}"/>
			<mx:SetProperty 
				target="{this}" 
				name="height" value="300"/>
		</mx:State>		
	</mx:states>
</mx:TitleWindow>
