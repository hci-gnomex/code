<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="310" height="62" creationComplete="init()"
				title="Billing Account Document" verticalScrollPolicy="off" horizontalScrollPolicy="off"
				showCloseButton="true"
				close="{mx.managers.PopUpManager.removePopUp(this)}">
	
	<mx:HTTPService 
		id="uploadOrder" 
		url="UploadPurchaseOrder.gx"
		destination="uploadOrder"
		showBusyCursor="true"
		resultFormat="e4x"
		method="POST"
		fault="parentApplication.onFailHttpRequest('Failed to upload Purchase Order', event)"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService  
		id="getUploadPurchaseOrderURL" 
		url="UploadPurchaseOrderURL.gx"
		resultFormat="e4x"
		showBusyCursor="true" 
		result="onGetUploadPurchaseOrderURL(event)" 
		fault="parentApplication.onFailHttpRequest('Failed to get purchase order upload URL', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService>
	
	<mx:HTTPService 
		id="deletePurchaseForm" 
		url="DeletePurchaseForm.gx"
		destination="deletePurchaseForm"
		showBusyCursor="true"
		resultFormat="e4x"
		result="onDeletePurchaseForm(event)"
		fault="parentApplication.onFailHttpRequest('Failed to delete group', event)"
		useProxy="false">
		<mx:request>
			<idBillingAccount>{parentView.billingAccounts.getItemAt(parentView.billingAccountGrid.selectedIndex).@idBillingAccount}</idBillingAccount>
		</mx:request>
	</mx:HTTPService >
	
	<mx:Script>
		<![CDATA[
			import flash.net.FileReference;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;
			import mx.managers.PopUpManager;
			
			private var fileRef:FileReference = new FileReference();
			public var uploadPurchaseOrderURL:String;
			
			[Bindable]
			public var parentView:GroupDetailView; 
			
			
			private function init():void{
				//Get the upload purchase order URL
				getUploadPurchaseOrderURL.send();
			}
			
			
			public function prepareToUploadPDF(event:MouseEvent):void{
				if(parentView.billingAccounts[parentView.billingAccountGrid.selectedIndex].@orderFormFileType != ''){
					Alert.show("By uploading a new purchase form you will overwrite the existing purchase form.\n\nContinue anyway?",
						null, (Alert.YES | Alert.NO), this, continueToUpload);
				}
				else{
					uploadPDF();
				}
				
			}
			
			private function continueToUpload(event:CloseEvent):void{
				if (event.detail == Alert.YES) {
					uploadPDF();
				}
			}
			
			private function uploadPDF():void{
				fileRef.addEventListener(Event.SELECT, selectHandler);
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.browse(new Array(new FileFilter("(*.pdf, *.doc, *.docx, *.txt, *.html, *.zip, *.xls)", "*.pdf; *.doc; *.docx; *.txt; *.html; *.zip; *.xls")));
			}
			
			private function onGetUploadPurchaseOrderURL(event:ResultEvent):void{
				if (getUploadPurchaseOrderURL.lastResult.name() == "UploadPurchaseOrderURL") {
					uploadPurchaseOrderURL = getUploadPurchaseOrderURL.lastResult.@url;
				}
			}
			
			private function selectHandler(event:Event):void{
				var request:URLRequest = new URLRequest(uploadPurchaseOrderURL);
				request.method = URLRequestMethod.POST;
				
				var variables:URLVariables = new URLVariables();
				variables.idBillingAccount = parentView.billingAccounts[parentView.billingAccountGrid.selectedIndex].@idBillingAccount;
				request.data = variables;
				fileRef.upload(request);
			}
			
			private function completeHandler(event:Event):void{
				parentView.billingAccounts[parentView.billingAccountGrid.selectedIndex].@orderFormFileType = fileRef.type;
				Alert.show("File uploaded successfully");
			}
			
			public function viewOrder(event:MouseEvent):void{
				var billingAccount:int = (int)(parentView.billingAccounts[parentView.billingAccountGrid.selectedIndex].@idBillingAccount);
				var url:URLRequest = new URLRequest('GetPurchaseOrderForm.gx?idBillingAccount=' + billingAccount);
				url.method = URLRequestMethod.POST;
				navigateToURL(url, '_blank');
			}
			
			public function removeOrder(event:MouseEvent):void{
				deletePurchaseForm.send();
			}
			
			private function onDeletePurchaseForm(event:ResultEvent):void{
				if(deletePurchaseForm.lastResult.name() == "SUCCESS"){
					parentView.billingAccounts[parentView.billingAccountGrid.selectedIndex].@orderFormFileType = "";
					Alert.show("File successfully removed");
				}
				else{
					Alert.show(deletePurchaseForm.lastResult..ACTMESSAGE.@TEXT);
				}
			}
		]]>
	</mx:Script>
	
	
	<mx:HBox width="100%" height="100%" verticalAlign="middle">
		<mx:LinkButton width="100%" height="20" label="Upload" click="prepareToUploadPDF(event)" textDecoration="underline" icon="@Embed(source='../../assets/upload.png')" disabledIcon="@Embed(source='../../assets/upload_disable.png')"/>
		<mx:LinkButton width="100%" height="20" label="View" click="viewOrder(event)" enabled="{parentView.billingAccounts.getItemAt(parentView.billingAccountGrid.selectedIndex).@orderFormFileType != ''}" textDecoration="underline" icon="@Embed(source='../../assets/page_find.gif')" disabledIcon="@Embed(source='../../assets/page_go_disabled.png')"/>
		<mx:LinkButton width="100%" height="20" label="Remove" click="removeOrder(event)" enabled="{parentView.billingAccounts.getItemAt(parentView.billingAccountGrid.selectedIndex).@orderFormFileType != ''}" textDecoration="underline" icon="@Embed(source='../../assets/cross.png')" disabledIcon="@Embed(source='../../assets/cross_disable.png')"/>
	</mx:HBox>
	
</mx:TitleWindow>
