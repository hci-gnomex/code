<?xml version="1.0" encoding="utf-8"?>
<exp:TabConfirmBase xmlns:mx="http://www.adobe.com/2006/mxml" 
					label="Confirm" width="100%"  
					height="100%" horizontalScrollPolicy="off"
					enabled="false"
					show="init()" xmlns:exp="views.experiment.*" xmlns:util="views.util.*"> 
	
	
	<mx:Script>	
		<![CDATA[
			import hci.flex.controls.ComboBox;
			import hci.flex.controls.DropdownLabel;
			
			import mx.collections.Grouping;
			import mx.collections.GroupingCollection;
			import mx.collections.GroupingField;
			import mx.controls.AdvancedDataGrid;
			import mx.core.mx_internal;
			
			import views.util.AnnotationDataGridColumn;
			
			[Bindable]
			private var longDescriptionRowCount:int = 0;
			
			[Bindable]
			private var iScanChip:Object;
			
			override public function setupView():void {
				this.parentDocument.samplesView.initializeBarcoding();
				parentDocument.getEstimatedBilling();
				
				submitterName.text = parentDocument.getSubmitterName();
				
				this.ccNumber.visible = parentDocument.samplesView.getShowCCNumber(); 
				
				longDescriptionRowCount = 0;
				for each (var s:Object in parentDocument.samples) {
					if (s.@description.toString().length > 30) {
						var count:Number = s.@description.toString().length / 30;
						longDescriptionRowCount += Math.round(count);
					}
				}
				
				this.experimentName.text = parentDocument.request.@name;
				this.expDescriptArea.htmlText = parentDocument.saveDescription;
				this.expDescriptArea.validateNow();
				this.expDescriptArea.height = this.expDescriptArea.textHeight + this.expDescriptArea..mx_internal::getTextField().getLineMetrics(0).height;  
				this.seqNotes.text = parentDocument.request.@corePrepInstructions != null ? parentDocument.request.@corePrepInstructions : '';
				this.seqNotes.validateNow();
				this.seqNotes.height = this.seqNotes.textHeight + this.seqNotes..mx_internal::getTextField().getLineMetrics(0).height; 
				
				// Edit buttons shown
				this.parentDocument.submitButton.label = 'Submit';
				this.parentDocument.submitButton.enabled = false;
				this.parentDocument.agreeCheckbox.selected = false;
				this.parentDocument.agreeBox.includeInLayout = true;
				this.parentDocument.agreeBox.visible = true;
				
				this.confirmContainer.validateNow();
			} 
			
			override public function showHideColumns():void {
				this.filteredSamples.removeAll();
				for each(var sample:Object in parentDocument.samples) {
					if (sample.@name != null && sample.@name != '') {
						this.filteredSamples.addItem(sample);
					}
				}
				this.label1.text = 'Samples (' + filteredSamples.length + ')';
				
			}
			
			override public function getSamplesGrid():Object {
				return this.samplesGridConfirm;
			}
			
			override public function getBillingGrid():Object {
				return this.billingConfirmGrid;
			}
						
			public function getSamplesConfirmGridRowNumber(item:Object,col:int):String
			{
				if (filteredSamples!= null) {
					var x:int = filteredSamples.getItemIndex(item) + 1;
					return String(x);     		
				} else {
					return "";
				}
			}
			override public function updateBatchWarning():void{
				var warning:String = this.getSampleBatchWarning();
				
				if(warning == ""){
					sampleBatchWarningBox.includeInLayout = false;
					this.batchWarning.text = "";
				} else{
					sampleBatchWarningBox.includeInLayout = true;
					this.batchWarning.text = this.getSampleBatchWarning();	
				}
			}
		]]>
		
	</mx:Script>
	
	<mx:XMLListCollection id="filteredSamples" />
	<mx:CurrencyFormatter id="dollarFormatter" currencySymbol="$" precision="2" decimalSeparatorTo="." thousandsSeparatorTo="," useThousandsSeparator="true"/> 
	
	<mx:VBox id="confirmHeaderContainer"  width="100%" backgroundAlpha="0.0" verticalGap="0" paddingRight="25"  >
		<mx:VBox   width="100%"  backgroundAlpha="0.0" verticalGap="0" paddingBottom="5" paddingLeft="5" paddingTop="0" id="confirmContainer" >
			<mx:HBox width="100%" horizontalGap="4">
				<mx:VBox height="100%" verticalGap="0" width="160" horizontalScrollPolicy="off">
					<mx:Label text="Experiment" textDecoration="none" height="16" styleName="formLabel" />
					<mx:Text text="{parentDocument.requestCategoryName}" id="requestKindLabel" width="140"/>
					<mx:Text id="isolationText" text="{parentDocument.sampleSetupView.isolationTypeRadioGroup.selectedValue ? parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.IsolationPrepType').DictionaryEntry.(@value == parentDocument.sampleSetupView.isolationTypeRadioGroup.selectedValue).@display : ''}" 
							 visible="{isolationText.text != ''}"
							 includeInLayout="{isolationText.text != ''}"
							 width="100%" />
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" width="140" horizontalScrollPolicy="off">
					<mx:Label text="Lab" styleName="formLabel" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.labCombo.selectedItem.@name : parentDocument.setupView.labCombo.selectedItem.@name}" width="140" id="text2"/>
					<mx:Label text="Submitter" styleName="formLabel" height="16"/>
					<mx:Text  id="submitterName" width="140" />
				</mx:VBox> 
				<mx:VBox height="100%" verticalGap="0" width="200" horizontalScrollPolicy="off">
					<mx:Label text="Project" styleName="formLabel"  height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@projectName : parentDocument.setupView.projectCombo.selectedItem.@name}" width="200"  height="100%" id="text1"/>
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" id="vbox2" width="240" horizontalScrollPolicy="off">
					<mx:Label text="Billing Account" styleName="formLabel" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountName : parentDocument.setupView.selectedBillingAccount.@accountName}" width="250"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountNumber : parentDocument.setupView.selectedBillingAccount.@accountNumber}" width="250"/>
				</mx:VBox>
				<mx:TextArea styleName="instructionBox" width="284" wordWrap="true" id="textarea1" height="50" editable="false">
					<mx:htmlText><![CDATA[1.  Please confirm the information below. Click the<br>     Back button or a tab to modify the request.<br>2. Click save button.]]></mx:htmlText>
				</mx:TextArea>
			</mx:HBox>
			
			<mx:VBox width="100%" verticalGap="0" id="billingContainer">
				<mx:HBox width="100%" id="chargesHeaderBox">
					<mx:Label text="{'Estimated Charges ' + parentDocument.createBillingItems.lastResult.Request.@invoicePrice}" 
							  styleName="formLabel" paddingTop="6"/>								    	
				</mx:HBox>
				<mx:HBox width="100%" id="sampleBatchWarningBox">
					<mx:Label id="batchWarning" 
							  styleName="sampleBatchWarning" paddingTop="6"/>								    	
				</mx:HBox>
				<mx:VBox width="100%">
					<mx:DataGrid id="billingConfirmGrid" showHeaders="false" horizontalScrollPolicy="off"  
								 editable="false" dataProvider="{parentDocument.createBillingItems.lastResult..BillingItem}"  
								 backgroundAlpha="0"  horizontalGridLines="false" verticalGridLines="false" variableRowHeight="true" selectable="false" 
								 sortableColumns="false" fontSize="11" borderStyle="none" >
						<mx:rowCount>{parentDocument.createBillingItems.lastResult..BillingItem.length() + 1}</mx:rowCount>
						<mx:columns>
							<mx:DataGridColumn  headerText="Price Category" dataField="@category" editable="false" width="200">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@category}" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Description" dataField="@description" editable="false" width="240">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@description}" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Qty" dataField="@qty" editable="false" textAlign="right" width="55" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@qty}" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="" textAlign="center" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="center" text="X" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Unit price" dataField="@unitPrice"  textAlign="right" editable="false" width="64" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@unitPrice}" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="" textAlign="left" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text textAlign="left" text="=" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Total price" dataField="@invoicePrice" textAlign="right" width="105" editable="false" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@invoicePrice}"  textAlign="right" styleName="normal" />
									</mx:Component>
								</mx:itemRenderer> 
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</mx:VBox>
				
			</mx:VBox> 
			
			<mx:VBox width ="100%" id="expDescriptBox" verticalGap="0" paddingTop="4">
				
				<mx:VBox id="experimentNameVbox">
					<mx:Label text="Experiment Name" styleName="formLabel" height="16"/>
					<mx:Label id="experimentName" width="200" alpha="0.8"  text="{parentDocument.request.@name}"/>
				</mx:VBox>
				
				<mx:Label text="Experiment Description" styleName="formLabel" paddingTop="5"/>
				<mx:TextArea  width="100%" editable="false" id="expDescriptArea" 
							  verticalScrollPolicy="off" backgroundColor="#FFFFFF"
							  htmlText="{parentDocument.request.@description}" borderColor="#E3E6E8"/>
				
				<mx:Label text ="Note for Core Facility" styleName="formLabel"/>
				<mx:TextArea width="100%" editable="false" id="seqNotes" 
							 backgroundColor="#FFFFFF" verticalScrollPolicy="off"
							 text="{parentDocument.isAmendState() ? parentDocument.request.@corePrepInstructions : ''}" borderColor="#E3E6E8"/>
				
			</mx:VBox>
			
			
			<mx:VBox verticalGap="0" width="100%" id="samplesConfirmContainer" paddingTop="4">
				<mx:Label text="{'Samples (' + filteredSamples.length + ')'}" id="label1" styleName="formLabel"/>
				<mx:DataGrid width="100%" id="samplesGridConfirm"  editable="false" dataProvider="{filteredSamples}" 
							 backgroundAlpha="0" borderStyle="solid"  horizontalScrollPolicy="off" rowCount="{filteredSamples.length + longDescriptionRowCount + 1}"
							 sortableColumns="false" alpha="0.8" fontSize="11" variableRowHeight="true" selectable="false" >
					<mx:columns>
						<mx:DataGridColumn id="sampleRowNumberCol" visible="true" editable="false" headerText=""  width="45" resizable="false" labelFunction="getSamplesConfirmGridRowNumber"/>
						<mx:DataGridColumn headerText="Sample Name" id="sampleNameColumn" dataField="@name" width="150"/>				    
						<mx:DataGridColumn id="concentrationCol" visible="true" headerText="Conc." width="65" dataField="@concentration" labelFunction="getSampleConcentrationFormatted"/>
						<mx:DataGridColumn id="qc_260_280Column" headerText="QC 260/280" width="80" dataField="@qual260nmTo280nmRatio" />
						<mx:DataGridColumn id="ccNumber" headerText="CC Number" dataField="@ccNumber" visible="false" />
						<mx:DataGridColumn id="sampleSourceColumn" headerText="Sample Source" width="80" dataField="@idSampleSource"
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SampleSource').DictionaryEntry, '@display', '@value', '@idSampleSource')}"/>
					</mx:columns>
				</mx:DataGrid>
				
			</mx:VBox>
			
			
		</mx:VBox>
	</mx:VBox>
	
</exp:TabConfirmBase>
