<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	label="Confirm" width="100%"  
	height="100%"    horizontalScrollPolicy="off"
	enabled="false"
	show="init()"> 
	<mx:states>
		<mx:State name="BillingExceedState" >
			<mx:AddChild relativeTo="{chargesHeaderBox}" position="lastChild">
			    <mx:HBox borderStyle="none" id="hbox1" paddingBottom="2" >
					<mx:Text text="{'Total charges exceed balance remaining on billing account by ' + parentDocument.createBillingItems.lastResult.Request.@exceededDollarAmount + '. Experiment request cannot be submitted.'}" styleName="warningLabelSevere"/>			    	
			    </mx:HBox>
			</mx:AddChild>
			<mx:SetStyle target="{chargesHeaderBox}" name="verticalAlign" value="middle"/>
		</mx:State>
		<mx:State name="ExternalExperimentState">
			<mx:RemoveChild target="{vbox2}"/>
			<mx:SetProperty target="{text1}" name="width" value="300"/>
			<mx:SetProperty target="{text2}" name="width" value="200"/>
			<mx:SetProperty target="{requestKindLabel}" name="width" value="160"/>
			<mx:SetProperty target="{appLabel}" name="width" value="160"/>
			<mx:SetProperty target="{textarea1}" name="htmlText">
				<mx:value><![CDATA[1.  Please confirm that all information has been<br>     correctly entered. Modifications can be made by<br>     clicking the “Back” button or by clicking on a tab.<br>2.  Submit the experiment information by<br>      clicking the “Submit” button.]]></mx:value>
			</mx:SetProperty>
			<mx:RemoveChild target="{billingContainer}"/>
			<mx:SetProperty target="{label1}" name="text" value="{'Samples (' + parentDocument.samples.length + ' )'}"/>
			<mx:SetProperty target="{laneGridLabel}" name="text" value="{'Sequencing Lanes' + ' (' + parentDocument.multiplexLanes.length + ' )'}"/>
			<mx:SetProperty target="{label4}" name="text" value="{'Sequencing lanes (' + parentDocument.lanes.length + ' )'}"/>
			<mx:SetProperty target="{textarea1}" name="height" value="78"/>
		</mx:State>
	</mx:states>
	
	
<mx:Script>	
	<![CDATA[
		import views.util.AnnotationDataGridColumn;
		import hci.flex.controls.ComboBox;
		import hci.flex.controls.DropdownLabel;
		import mx.collections.GroupingField;
		import mx.collections.Grouping;
		import mx.collections.GroupingCollection;
		
		[Bindable]
		private var submitterName:String = "";
				

		private function init():void {
	        this.parentDocument.samplesView.initializeBarcoding();
			parentDocument.getEstimatedBilling();
			parentDocument.getMultiplexLanes();
			
			submitterName = parentDocument.getSubmitterName();
			
			if (this.parentDocument.isSolexaState()) {
				if (this.confirmContainer.contains(this.hybsConfirmContainer)) {
					this.confirmContainer.removeChild(this.hybsConfirmContainer);
				}
				if (parentApplication.submitInternalExperiment()) {
					if (parentDocument.showSampleMultiplexGroup()) {
						if (!this.confirmContainer.contains(this.lanesConfirmContainer)) {
							this.confirmContainer.addChild(this.lanesConfirmContainer);
						}
						if (this.confirmContainer.contains(this.lanesConfirmFlatContainer)) {
							this.confirmContainer.removeChild(this.lanesConfirmFlatContainer);
						}
					} else {
						if (!this.confirmContainer.contains(this.lanesConfirmFlatContainer)) {
							this.confirmContainer.addChild(this.lanesConfirmFlatContainer);
						}
						if (this.confirmContainer.contains(this.lanesConfirmContainer)) {
							this.confirmContainer.removeChild(this.lanesConfirmContainer);
						}
					}					
				} else {
					if (this.confirmContainer.contains(this.lanesConfirmContainer)) {
						this.confirmContainer.removeChild(this.lanesConfirmContainer);
					}
					if (this.confirmContainer.contains(this.lanesConfirmFlatContainer)) {
						this.confirmContainer.removeChild(this.lanesConfirmFlatContainer);
					}
				}
	
			} else {
				if (this.parentDocument.isMicroarrayState()) {
					if (!this.confirmContainer.contains(this.hybsConfirmContainer)) {
						this.confirmContainer.addChild(this.hybsConfirmContainer);
					}					
				} else {
					if (this.confirmContainer.contains(this.hybsConfirmContainer)) {
						this.confirmContainer.removeChild(this.hybsConfirmContainer);
					}					
				}
				if (this.confirmContainer.contains(this.lanesConfirmContainer)) {
					this.confirmContainer.removeChild(this.lanesConfirmContainer);
				}
				if (this.confirmContainer.contains(this.lanesConfirmFlatContainer)) {
					this.confirmContainer.removeChild(this.lanesConfirmFlatContainer);
				}				
			}
			this.showHideColumns();
			this.confirmContainer.validateNow();
			
		} 

        public function showHideColumns():void {
        	if (parentDocument.isSolexaState()) {
				concentrationUnitConfirmColumn.visible = parentApplication.submitInternalExperiment();
				sampleOrganismConfirmColumn.visible = true;
				otherOrganismCol.visible = parentApplication.submitInternalExperiment();
				chipTypeConfirmColumn.visible = false; 
				
				preppedByCoreCol.visible = parentApplication.submitInternalExperiment();
				samplePrepMethodConfirmCol.visible = parentApplication.submitInternalExperiment();
				otherSamplePrepMethodConfirmCol.visible = parentApplication.submitInternalExperiment();
				
				this.numberOfSequencingCyclesCol.visible = parentApplication.submitInternalExperiment();
				this.seqRunTypeCol.visible = parentApplication.submitInternalExperiment();
				
				this.barcodeColumn.visible = parentDocument.showSampleBarcodes();
				this.customBarcodeColumn.visible = parentDocument.showSampleCustomBarcodes();
				
				//corePrepInstructionsConfirmColumn.visible = true;
				
				if (!parentApplication.submitInternalExperiment()) {
					seqLibProtocolConfirmCol.visible = false;
				} else if (!parentDocument.isEditState() &&
				    parentDocument.sampleSetupView.currentState == "SolexaSetupState") {
					seqLibProtocolConfirmCol.visible = false;
				} else {
					seqLibProtocolConfirmCol.visible = true;
				}
			} else if (parentDocument.currentState == 'QCState') {
				concentrationUnitConfirmColumn.visible = true;
				sampleOrganismConfirmColumn.visible = false;
				otherOrganismCol.visible = false;
				chipTypeConfirmColumn.visible = true; 
				samplePrepMethodConfirmCol.visible = true;
				otherSamplePrepMethodConfirmCol.visible = true;
				preppedByCoreCol.visible = false;
				seqLibProtocolConfirmCol.visible = false;
				//corePrepInstructionsConfirmColumn.visible = false;
				this.numberOfSequencingCyclesCol.visible = false;
				this.seqRunTypeCol.visible = false;


			} else {
				concentrationUnitConfirmColumn.visible = parentApplication.submitInternalExperiment();
				sampleOrganismConfirmColumn.visible = true;
				otherOrganismCol.visible = false;
				chipTypeConfirmColumn.visible = false; 
				samplePrepMethodConfirmCol.visible = true;
				otherSamplePrepMethodConfirmCol.visible = true;
				preppedByCoreCol.visible = false;
				seqLibProtocolConfirmCol.visible = false;
				//corePrepInstructionsConfirmColumn.visible = false;
				this.numberOfSequencingCyclesCol.visible = false;
				this.seqRunTypeCol.visible = false;


			}
			// If this is a QC request, hide the annotation columns 
			if (parentDocument.currentState == 'QCState') {
				// Make all annotation columns invisible
				for each(var col:DataGridColumn in this.samplesGridConfirm.columns) {
					if (col is views.util.AnnotationDataGridColumn) {
						col.visible = false;
					}
				} 
			}
  						 
        }
		
		public function getEmptyTreeIcon(item:Object):Class {
			return null; 
		}  
	]]>
</mx:Script>
	<mx:VBox id="confirmHeaderContainer"  width="100%" backgroundAlpha="0.0" verticalGap="0" paddingRight="25"  >
		<mx:VBox   width="100%"  backgroundAlpha="0.0" verticalGap="0" paddingBottom="5" paddingLeft="5" paddingTop="0" id="confirmContainer" >
			<mx:HBox width="100%" horizontalGap="4"   height="110">
				<mx:VBox height="100%" verticalGap="0" width="120" horizontalScrollPolicy="off">
					<mx:Label text="Experiment" textDecoration="underline" height="16"/>
					<mx:Text text="{parentDocument.requestCategoryName}" id="requestKindLabel" width="140"/>
					<mx:Text text="{parentDocument.applicationName}" id="appLabel" width="140"/>
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" width="130" horizontalScrollPolicy="off">
					<mx:Label text="Lab" textDecoration="underline" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.labCombo.selectedItem.@name : parentDocument.setupView.labCombo.selectedItem.@name}" width="140" id="text2"/>
					<mx:Label text="Submitter" textDecoration="underline" height="16"/>
					<mx:Text  text="{submitterName}" width="140" />
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" width="180" horizontalScrollPolicy="off">
					<mx:Label text="Project" textDecoration="underline" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@projectName : parentDocument.setupView.projectCombo.selectedItem.@name}" width="200" height="100%" id="text1"/>
				</mx:VBox>
				<mx:VBox height="100%" verticalGap="0" id="vbox2" width="240" horizontalScrollPolicy="off">
					<mx:Label text="Billing Account" textDecoration="underline" height="16"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountName : parentDocument.setupView.billingAccountCombo.selectedItem.@accountName}" width="250"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountNumber : parentDocument.setupView.billingAccountCombo.selectedItem.@accountNumber}" width="250"/>
				</mx:VBox>
				<mx:TextArea styleName="instructionBox" width="268" wordWrap="true" id="textarea1" height="108">
					  <mx:htmlText><![CDATA[1.  Please confirm that all information has been<br>     correctly entered. Modifications can be made by<br>     clicking the “Back” button or by clicking on a tab.<br>2.  Agree to estimated charges by clicking the <br>    "I authorize" checkbox.<br>3.  Approve the work request by clicking the<br>     “Submit” button.]]></mx:htmlText>
				</mx:TextArea>
			</mx:HBox>
				<mx:VBox width="100%" verticalGap="0" id="billingContainer">
				    <mx:HBox width="100%" id="chargesHeaderBox">
				    <mx:Label text="{'Estimated Charges ' + parentDocument.createBillingItems.lastResult.Request.@totalPrice}" id="label2" textDecoration="underline" paddingTop="10"/>								    	
				    </mx:HBox>
					<mx:VBox width="100%" id="vbox1">
						<mx:DataGrid id="billingConfirmGrid"   showHeaders="false"
							editable="false" dataProvider="{parentDocument.createBillingItems.lastResult..BillingItem}"  
							backgroundAlpha="0"  alpha="0" 
							sortableColumns="false"   fontSize="9" borderStyle="none">
							<mx:rowCount>{parentDocument.createBillingItems.lastResult..BillingItem.length() - 1}</mx:rowCount>
							<mx:columns>
							   				<mx:DataGridColumn  headerText="Price Category" dataField="@category" editable="false" width="200">
							   				     <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text text="{data.@category}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText="Description" dataField="@description" editable="false" width="270">
							   				     <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text text="{data.@description}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText="Qty" dataField="@qty" editable="false" textAlign="right" width="50" >
							   				  <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text  textAlign="right" text="{data.@qty}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText=""   textAlign="center" editable="false" width="10" > 
							   				  <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text  textAlign="center" text="X" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText="Unit price" dataField="@unitPrice"  textAlign="right" editable="false" width="65" > 
							   				  <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text  textAlign="right" text="{data.@unitPrice}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText=""   textAlign="left" editable="false" width="10" > 
							   				  <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text  textAlign="left" text="=" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer>
							   				</mx:DataGridColumn>
							   				<mx:DataGridColumn headerText="Total price" dataField="@totalPrice" textAlign="right" width="105" editable="false" >
							   				  <mx:itemRenderer>
							   				         <mx:Component>
							   				         <mx:Text text="{data.@totalPrice}"  textAlign="right" styleName="{data.@other == 'Y' ?'other':'normal'}" />
							   				         </mx:Component>
							   				     </mx:itemRenderer> 
							   				</mx:DataGridColumn>
							   			</mx:columns>
						</mx:DataGrid>
					</mx:VBox>
					
				</mx:VBox> 
			 
			<mx:VBox verticalGap="0" width="100%" id="samplesConfirmContainer" paddingTop="2">
				<mx:Label text="{'Samples (' + parentDocument.samples.length + ')'}" id="label1" textDecoration="underline" paddingTop="10"/>
				<mx:DataGrid width="100%" id="samplesGridConfirm"  editable="false" dataProvider="{parentDocument.samples}" 
					backgroundAlpha="0" borderStyle="solid"  horizontalScrollPolicy="off" rowCount="{parentDocument.samples.length}"
					sortableColumns="false" alpha="0.8" fontSize="9" >
					<mx:columns>
						<mx:DataGridColumn headerText="Sample Name" width="100" dataField="@name">				    
						</mx:DataGridColumn>
						<mx:DataGridColumn id="concentrationCol" visible="{parentApplication.isInternalExperimentSubmission}" headerText="Conc." width="65" dataField="@concentration"/>
		                <mx:DataGridColumn id="concentrationUnitConfirmColumn" headerText="Unit"  width="60" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.ConcentrationUnit').DictionaryEntry, '@display', '@value', '@codeConcentrationUnit')}"/>
	                    <mx:DataGridColumn id="ccNumber" headerText="CC Number" dataField="@ccNumber"
	                       visible="{parentDocument.samplesView.showCCNumberCheckbox.selected ? true : false}" width="60"/>

		                <mx:DataGridColumn id="multiplexGroupNumberColumn" headerText="Multiplex #" dataField="@multipexGroupNumber" editable="false" visible="false"
							width="58">
							<mx:headerRenderer>
								<mx:Component>
									<mx:VBox  horizontalScrollPolicy="off" verticalGap="0">
										<mx:Label text="Mutiplex"/>
										<mx:Label text="in group"/>
									</mx:VBox>
								</mx:Component>
							</mx:headerRenderer>
					    </mx:DataGridColumn>

	                    <mx:DataGridColumn id="barcodeColumn"  headerText="Index Tag" width="130" dataField="@idOlogiBarcode" 
	                      editorDataField="value" sortable="false" editable="false" rendererIsEditor="true" 
	                      visible="false"
 	                      itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.OligoBarcode').DictionaryEntry, '@display', '@value', '@idOligoBarcode')}" />

		                <mx:DataGridColumn id="customBarcodeColumn" headerText="Index Tag" dataField="@barcodeSequence" editable="false" visible="false"
							width="58">
					    </mx:DataGridColumn>
						<mx:DataGridColumn id="treatmentConfirmColumn" headerText="Treatment" visible="{parentDocument.request.@treatment == 'Y' ? true : false}" width="100" dataField="@treatment"/>
						<mx:DataGridColumn headerText="Description" width="200" dataField="@description"/>
						
					
  					    <mx:DataGridColumn id="preppedByCoreCol" headerText="Core to prep lib?"   visible="{true}" width="104"  dataField="@seqPrepByCore" editable="false"/>
			            <mx:DataGridColumn headerText="Seq Lib Protocol" id="seqLibProtocolConfirmCol" width="160" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SeqLibProtocol').DictionaryEntry, '@display', '@value', '@idSeqLibProtocol')}"/>
			            <mx:DataGridColumn headerText="Nucl. acid extraction method" id="samplePrepMethodConfirmCol" width="160" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SamplePrepMethod').DictionaryEntry, '@display', '@value', '@idSamplePrepMethod')}"/>
						<mx:DataGridColumn id="otherSamplePrepMethodConfirmCol" headerText="Other nucl. acid extraction method" width="200" dataField="@otherSamplePrepMethod"/>
			            <mx:DataGridColumn headerText="Sample Type"  width="130" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SampleType').DictionaryEntry, '@display', '@value', '@idSampleType')}"/>
			            <mx:DataGridColumn headerText="Organism" id="sampleOrganismConfirmColumn" width="100" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.OrganismLite').DictionaryEntry, '@display', '@value', '@idOrganism')}"/>
						<mx:DataGridColumn id="otherOrganismCol" headerText="Organism (other)" width="140" dataField="@otherOrganism"/>
		                <mx:DataGridColumn id="chipTypeConfirmColumn" headerText="Chip Type"  width="130" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.BioanalyzerChipType').DictionaryEntry, '@display', '@value', '@codeBioanalyzerChipType')}"/>
					</mx:columns>
				</mx:DataGrid>				
			</mx:VBox>
			
			<mx:VBox width="100%" verticalGap="0" id="hybsConfirmContainer" paddingTop="4">
				<mx:Label text="{'Hybridizations (' + parentDocument.hybs.length + ')'}" id="label3" textDecoration="underline" paddingTop="10"/>
				<mx:DataGrid width="100%" id="hybsGridConfirm" rowCount="{parentDocument.hybs.length}"
					editable="false" dataProvider="{parentDocument.hybs}"  
					backgroundAlpha="0" borderStyle="solid" 
					sortableColumns="false" alpha="0.8" fontSize="9" >
					<mx:columns>
					    <mx:DataGridColumn editable="false" headerText="Cy3 Sample (green)"  width="122" labelFunction="parentDocument.getSampleChannel1Name"/>
					    <mx:DataGridColumn id="channel2SampleConfirmColumn" editable="false" headerText="Cy5 Sample (red)"  width="122" labelFunction="parentDocument.getSampleChannel2Name"/>
					     <mx:DataGridColumn headerText="Slide"  width="182" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SlideDesign').DictionaryEntry, '@display', '@value', '@idSlideDesign')}"/>
					     <mx:DataGridColumn headerText="Slide Source"  width="52" 
	                  	  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SlideSource').DictionaryEntry, '@display', '@value', '@codeSlideSource')}"/>
					</mx:columns>
				</mx:DataGrid>
				 
			</mx:VBox>
            <mx:VBox  id="lanesConfirmContainer"  verticalGap="0" width="100%"  paddingTop="4" >
			  <mx:Label id="laneGridLabel" text="{'Sequencing setup ' + ' (' + parentDocument.multiplexLanes.length + ' lanes)'}" textDecoration="underline" paddingTop="10"/>
					<mx:AdvancedDataGrid width="100%"  id="lanesConfirmGrid" 
						rollOverColor="#C0C0C0" 
						editable="false"
						allowMultipleSelection="false" 
						horizontalScrollPolicy="off" 
						sortableColumns="false"
						sortExpertMode="true"  
						iconFunction="getEmptyTreeIcon"
						defaultLeafIcon="{null}" 
						rowCount="{parentDocument.lanes.length + parentDocument.multiplexLanes.length + 2}"
						displayItemsExpanded="true"  
						selectionColor="#FFFFB9" 
						alpha="0.8" fontSize="9">
						<mx:dataProvider>   
      						<mx:HierarchicalData source="{parentDocument.multiplexLanes}"/> 
    					</mx:dataProvider> 						
					<mx:columns>
					    <mx:AdvancedDataGridColumn  headerText=""  width="20" id="multiplexGroupNumberCol" dataField="@number" editable="false"/>
					    <mx:AdvancedDataGridColumn  headerText="Sample"  width="100" dataField="@sampleName" editable="false"/>
			            <mx:AdvancedDataGridColumn  width="200" id="seqRunTypeCol" headerText="Seq Run Type"  dataField="@idSeqRunType" 						             						             
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SeqRunType').DictionaryEntry, '@display', '@value','@idSeqRunType', true)}"/>
			            <mx:AdvancedDataGridColumn width="65" id="numberOfSequencingCyclesCol" headerText="# Cycles"    editable="false" dataField="@idNumberSequencingCycles" 						             						             
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.NumberSequencingCycles').DictionaryEntry, '@display', '@value', '@idNumberSequencingCycles', true)}"/>
			            <mx:AdvancedDataGridColumn headerText="Genome Build (align to)" dataField="@idGenomeBuildAlignTo" width="150" 
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.GenomeBuildLite').DictionaryEntry, '@display', '@value', '@idGenomeBuildAlignTo')}"/>
					</mx:columns>
					</mx:AdvancedDataGrid>
              	
				
			</mx:VBox>	
            <mx:VBox  id="lanesConfirmFlatContainer"  verticalGap="0" width="100%"  paddingTop="4" >
				  <mx:Label  text="{'Sequencing setup (' + parentDocument.lanes.length + ' lanes)'}" textDecoration="underline" paddingTop="10" id="label4"/>
					<mx:DataGrid width="100%"  
						rollOverColor="#C0C0C0" 
						editable="false"
						allowMultipleSelection="false" 
						horizontalScrollPolicy="off" 
						sortableColumns="false"
						rowCount="{parentDocument.lanes.length}"
						selectionColor="#FFFFB9" 
						alpha="0.8" fontSize="9"
						dataProvider="{parentDocument.lanes}">
					<mx:columns>
					    <mx:DataGridColumn  headerText="Sample"  width="222" labelFunction="parentDocument.getLaneSampleName" editable="false"/>
			            <mx:DataGridColumn  width="200"  headerText="Seq Run Type"  editable="false" dataField="@idSeqRunType" 						             						             
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SeqRunType').DictionaryEntry, '@display', '@value','@idSeqRunType', true)}"/>
			            <mx:DataGridColumn width="65" headerText="# Cycles"    editable="false" dataField="@idNumberSequencingCycles" 						             						             
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.NumberSequencingCycles').DictionaryEntry, '@display', '@value', '@idNumberSequencingCycles', true)}"/>
			            <mx:DataGridColumn headerText="Genome Build (align to)" dataField="@idGenomeBuildAlignTo" width="150" 
                  		  itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.GenomeBuildLite').DictionaryEntry, '@display', '@value', '@idGenomeBuildAlignTo')}"/>
					</mx:columns>
					</mx:DataGrid>
			</mx:VBox>
 </mx:VBox>
 </mx:VBox>
</mx:Canvas>
