<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="Bioinformatics" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:util="views.util.*" show="{init();}" verticalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			[Bindable]
			private var organismString:String;
			
			private function init():void {
				if (parentDocument != null && parentDocument.request != null
					&& parentDocument.request.multiplexSequenceLanes.hasOwnProperty("@idGenomeBuildAlignTo")
					&& parentDocument.request.multiplexSequenceLanes.@idGenomeBuildAlignTo != null
					&& parentDocument.request.multiplexSequenceLanes.@idGenomeBuildAlignTo != '') {
					alignCheckBox.selected = true;
					for each(var obj:Object in parentDocument.filteredGenomeBuildList) {
						if (obj.@idGenomeBuild == parentDocument.request.multiplexSequenceLanes.@idGenomeBuildAlignTo) {
							genomeBuildCombo.selectedItem = obj;
							genomeBuildCombo.enabled = true;
							break;
						}
					}
				} else {
					alignCheckBox.selected = false;
					genomeBuildCombo.selectedIndex = -1;
					genomeBuildCombo.enabled = false;
				}
				
				this.bioAssistCheckBox.selected = false;
				if (parentDocument != null && parentDocument.request != null
					&& parentDocument.request.hasOwnProperty("@bioinformaticsAssist")
					&& parentDocument.request.@bioinformaticsAssist == 'Y') {
					this.bioAssistCheckBox.selected = true;
				}
				
				organismString = 'Organism: ' + parentDocument.getOrganism() != null ? parentDocument.getOrganism().@organism : "N/A";
				parentDocument.confirmView.enabled = true;
				parentDocument.enableNextButtons();
			}
			
			private function setAnalysisInstructions():void {
				parentDocument.request.@analysisInstructions = this.noteToBio.text;
			}

			public function propagateGenomeBuild():void {
				parentDocument.request.@idGenomeBuildAlignTo = alignCheckBox.selected && genomeBuildCombo.selectedItem != null ? genomeBuildCombo.selectedItem.@value : "";
				for each (var lane:Object in parentDocument.lanes) {
					if (this.genomeBuildCombo.selectedItem != null) {
						if(!alignCheckBox.selected) {
							lane.@idGenomeBuildAlignTo = "";
						} else {
							lane.@idGenomeBuildAlignTo = this.genomeBuildCombo.selectedItem.@value;						
						}					
					}
				}
				callLater(parentDocument.samplesView.checkSamplesCompleteness);
			}
			
			public function selectDefaultGenomeBuild():void {
				if (alignCheckBox.selected) {
					if (this.genomeBuildCombo.dataProvider.length > 1) {
						for each(var genomeBuild:Object in this.genomeBuildCombo.dataProvider) {
							if (genomeBuild.@isLatestBuild != null && genomeBuild.@isLatestBuild == 'Y') {
								this.genomeBuildCombo.selectedItem = genomeBuild;
								propagateGenomeBuild();
								break;
							}
						}
					}
				} else {
					genomeBuildCombo.selectedIndex = 0;
				}
			}
			
			private function onAlignCheckBoxClick():void {
				if (!alignCheckBox.selected) {
					genomeBuildCombo.selectedIndex = 0;
					genomeBuildCombo.enabled = false;
					propagateGenomeBuild();
				} else {
					genomeBuildCombo.enabled = true;
					if (genomeBuildCombo.selectedIndex == 0) {
						this.selectDefaultGenomeBuild();
					}
				}
			}		
			
			private function onGenomeBuildComboChange():void {
				if (!alignCheckBox.selected) {
					genomeBuildCombo.selectedIndex = 0;
				}
				
				propagateGenomeBuild();
			}
			
			private function onBioAssistCheckBoxClick():void {
				if (bioAssistCheckBox.selected) {
					parentDocument.request.@bioinformaticsAssist = "Y";
				} else {
					parentDocument.request.@bioinformaticsAssist = "N";
				}
			}
		]]>
	</mx:Script>
	<mx:VBox id="bioNoteHBox" width="100%" verticalGap="0" height="100%" >
		<mx:Label text="{parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_ANALYSIS_ASSISTANCE_HEADER)}" fontWeight="bold"/>
		<mx:HBox  horizontalAlign="left" id="vbox4" width="100%">
			<mx:HBox backgroundColor="#FFFEC3">
				<mx:TextArea editable="false" borderColor="#FFFEC3" change="{parentDocument.dirty.setDirty();}" backgroundColor="#FFFEC3" text="{'Questions?  Please Contact the ' + parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_ANALYSIS_ASSISTANCE_GROUP) + ' at: '}" wordWrap="true" height="20" id="textarea1" width="388"/>
				<mx:LinkButton label="{parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_CONTACT_EMAIL_BIOINFORMATICS)}" click="navigateToURL(new URLRequest('mailto:' + parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_CONTACT_EMAIL_BIOINFORMATICS)), '_blank');" textDecoration="underline" color="#0000ff" paddingTop="1"/>
			</mx:HBox>
		</mx:HBox>
		<mx:Spacer height="5" id="bioNoteSpacer" />
		<mx:VBox id="genomeBuildBox" width="100%" verticalGap="0">
			<util:ContextHelp context1="bioSequenceAligned" context2="{parentDocument.coreFacility.@idCoreFacility}" showEdit="{parentApplication.isAdminState}" title="Sequence Alignment Help"
							  label="{'(1) Do you want the sequence data to be aligned? ' + parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_REQUEST_BIO_ALIGNMENT_NOTE)}" 
							  labelPlacement="left" id="bioSequenceAlignedLabel"/>
			<mx:HBox width="100%" verticalGap="0" paddingBottom="0" paddingTop="0">
				<mx:Spacer width="12"/>
				<mx:Label text="{organismString}"/>
			</mx:HBox>
			<mx:HBox width="100%" horizontalGap="2" verticalGap="0" paddingBottom="0" paddingTop="0">
				<mx:Spacer width="20"/>
				<mx:CheckBox id="alignCheckBox" label="Yes, align to genome build" click="{onAlignCheckBoxClick(); parentDocument.dirty.setDirty();}" selected="false"/>
				<mx:ComboBox labelField="@display" id="genomeBuildCombo" change="{onGenomeBuildComboChange(); parentDocument.dirty.setDirty();}" width="300" dataProvider="{parentDocument.filteredGenomeBuildList}" enabled="false">							
				</mx:ComboBox>
			</mx:HBox>
		</mx:VBox>
		<mx:Spacer height="10" />
		<util:ContextHelp context1="bioAnalysisAssistance" context2="{parentDocument.coreFacility.@idCoreFacility}" showEdit="{parentApplication.isAdminState}" title="Analysis Assistance Help"
						  label="{'(2) Would you like the ' + parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_ANALYSIS_ASSISTANCE_GROUP) + ' to assist you with analysis?'}" 
						  labelPlacement="left" id="bioAnalysisAssistanceLabel"/>
		<mx:HBox width="100%" verticalGap="0" paddingBottom="0" paddingTop="0">
			<mx:Spacer width="12"/>
			<mx:CheckBox label="{'Yes   ' + parentApplication.getCoreFacilityProperty(parentDocument.getRequestCategory().@idCoreFacility, parentApplication.PROPERTY_REQUEST_BIO_ANALYSIS_NOTE)}"
						 id="bioAssistCheckBox" click="{onBioAssistCheckBoxClick(); parentDocument.dirty.setDirty();}" selected="false" />
		</mx:HBox>
		<util:ContextHelp context1="bioNote" context2="{parentDocument.coreFacility.@idCoreFacility}" showEdit="{parentApplication.isAdminState}" title="Analysis Note Help"
						  label="Enter a note regarding analysis. (optional)" labelPlacement="left" id="bioNoteLabel"/>
		<util:TextAreaWorkaround id="noteToBio" enabled="{bioAssistCheckBox.selected}" text="{parentDocument.request.@analysisInstructions}" 
								 focusOut="setAnalysisInstructions()" change="{parentDocument.dirty.setDirty();}" width ="100%" height="25%"/> 
	</mx:VBox>
</mx:Canvas>
