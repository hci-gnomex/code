<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:views="views.*" >



   <mx:HTTPService  
    id="saveVisibility" 
    url="SaveVisibility.gx"
    destination="saveVisibility"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onSaveVisibility(event)"
	fault="parentApplication.onFailHttpRequest('Failed to save visibility', event)"
    method="POST"
    useProxy="false">
  </mx:HTTPService>


 <mx:Script>
 <![CDATA[
 	import mx.collections.XMLListCollection; 
 	import mx.rpc.events.ResultEvent;
 	import views.renderers.ComboBoxVisibility;
 	
 	public function checkSecurity():void {
 		if (parentDocument.parentDocument.browseTree.selectedItem.name() == "Project" &&
 		    parentDocument.parentDocument.selectedProject != null) {
 			if (parentDocument.parentDocument.selectedProject.@canUpdateVisibility == "Y") {
 				parentDocument.saveVisibilityButton.enabled = true;
 				projectVisibilityCombo.enabled = true;
 			} else {
 				parentDocument.saveVisibilityButton.enabled = false;
 				projectVisibilityCombo.enabled = false;
 			}
 		} else {
 			parentDocument.saveVisibilityButton.enabled = false;
 			projectVisibilityCombo.enabled = false;
 		}
 	}
			

 	private function getRequestKind(item:Object, col:int):String {
		var de:XMLList = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry.(@value == item.@codeRequestCategory);
    	if (de.length() == 1) {
	    	return de[0].@display;
    	} else {
    		return "";
    	}
	}
	
	public function save():void {
	    var dirtyRequests:XMLList = parentDocument.parentDocument.browseTree.selectedItem..Request.(@isDirty == 'Y');        	
    	var dirtyRequestList:XMLListCollection = new XMLListCollection(dirtyRequests);
    	
    	var params:Object = new Object();
    	params.idProject = parentDocument.parentDocument.browseTree.selectedItem.@idProject;
    	params.codeVisibility = projectVisibilityCombo.selectedItem.@codeVisibility;
    	params.visibilityXMLString = dirtyRequestList.toXMLString();
    	saveVisibility.send(params);

	}
	
	private function onSaveVisibility(event:ResultEvent):void {
		if (saveVisibility.lastResult.name() == "SUCCESS" ||
		    saveVisibility.lastResult.name() == "ProjectRequestVisibilityList") {
    		parentDocument.parentDocument.refreshExperiments();
    		parentDocument.dirtyVisibility.resetDirty();
    	} else {
    		mx.controls.Alert.show(saveVisibility.lastResult..ACTMESSAGE.@TEXT);
    	}
	}
	
	
	
	                
    public function onEdit():void {
    	visibilityGrid.selectedItem.@isDirty = "Y";
    	parentDocument.dirtyVisibility.setDirty();
    }
    
    public function setVisibilityCombo():void {
    	projectVisibilityCombo.selectedIndex = 0;
        if (parentDocument.parentDocument.browseTree.selectedItem.@codeVisibility != null) {
            for(var i:Number = 0; i < projectVisibilityCombo.dataProvider.length; i++) {
            	if(projectVisibilityCombo.dataProvider[i].@value == parentDocument.parentDocument.browseTree.selectedItem.@codeVisibility) {
                      projectVisibilityCombo.selectedIndex = i;
                      break;
                 }
            }
        	
        }
    }
    
    
    
    
    
 ]]>
 </mx:Script>
	
	<mx:VBox  width="100%" height="100%"   paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
	       <mx:HBox width="100%" horizontalAlign="left">
					<mx:Label text="{'Visibility for ' + parentDocument.parentDocument.browseTree.selectedItem.@projectName}"/>
	                <mx:ComboBox id="projectVisibilityCombo" labelField="@display"  
                     	dataProvider="{parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.Visibility').DictionaryEntry}"  
                     	  width="250"  change="parentDocument.dirtyVisibility.setDirty()"/>
	       </mx:HBox>
	       <mx:DataGrid  id="visibilityGrid" 
	       	dataProvider="{parentDocument.browseList}" 
	       	 width="100%" height="100%" 
			 editable="true"
	       	 itemEditEnd="onEdit()">
	         <mx:columns>
	            <mx:DataGridColumn width="35" minWidth="35" headerText="#">
	                <mx:itemRenderer>
	                    <mx:Component >
	                        <mx:HBox  horizontalGap="0" >
			                    <mx:Image id="experimentImage"  
			                     	source="{(data.@codeRequestCategory == 'QC' ? parentApplication.iconQC : (data.@codeRequestCategory == 'SOLEXA' ? parentApplication.iconSolexa : parentApplication.iconExperiment))}" >
								</mx:Image>
	                           <mx:Label id="requestNumber" text="{data.@requestNumber}">
	                           </mx:Label>
	                        </mx:HBox>
	                    </mx:Component>
	                </mx:itemRenderer>
	            </mx:DataGridColumn> 
		       	<mx:DataGridColumn headerText="Date" width="20" dataField="@requestCreateDateDisplay"/>
		        <mx:DataGridColumn headerText="Requester" width="40" labelFunction="parentDocument.getFullName"/>
		       	<mx:DataGridColumn headerText="Experiment Kind" width="35" labelFunction="parentDocument.getExperimentKind"/>
		       	<mx:DataGridColumn headerText="Microarray" width="90" dataField="@slideProductName"/>
		       	<mx:DataGridColumn headerText="Experiment Visibility"  width="75" dataField="@codeVisibility" 
					editorDataField="value" sortable="false" editable="{projectVisibilityCombo.enabled}" 
					rendererIsEditor="false" 
					itemRenderer="{gnomexFlex.createRendererWithProperties(views.renderers.LabelDictionary, {dictionary: 'hci.gnomex.model.Visibility', dataField: '@codeVisibility'})}"
					itemEditor="{gnomexFlex.createRendererWithProperties(views.renderers.ComboBoxVisibility, {dictionary: 'hci.gnomex.model.Visibility', dataField: '@codeVisibility'})}"/>

	         </mx:columns>
	       </mx:DataGrid>
	
	     
	</mx:VBox>
	
	



</mx:Canvas>


