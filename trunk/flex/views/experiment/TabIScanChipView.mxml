<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas  label="Sample Setup" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"  enabled="false">
	
<mx:Script>
	<![CDATA[
		import mx.collections.Sort;
		import mx.collections.XMLListCollection;
		
		private var validNumberOfSamples:Boolean = false;
		[Bindable]
		private var maxNumberOfSamples:int;
		
		private function pickChip():void {
			if (this.iScanChipRadioGroup.selectedValue != null && 
				(this.iScanChipRadioGroup.selectedValue.@idIScanChip != null && this.iScanChipRadioGroup.selectedValue.@idIScanChip != '')) {
				this.iScanChipBox.styleName = "normalBox";
				parentDocument.request.@idIScanChip = iScanChipRadioGroup.selectedValue.@idIScanChip;
			} else {
				this.iScanChipBox.styleName = "requiredBox";
			}
			
			this.checkSampleCount();
		}
		
		public function checkSampleCount():void {
			if (this.iScanChipRadioGroup.selectedValue != null && 
				(this.iScanChipRadioGroup.selectedValue.@samplesPerChip != null && this.iScanChipRadioGroup.selectedValue.@samplesPerChip != '')) {
				
				maxNumberOfSamples = parseInt( iScanChipRadioGroup.selectedValue.@samplesPerChip ) * parseInt(numberOfChips.text);
				numberOfSamplesValidator.maxValue = parseInt( iScanChipRadioGroup.selectedValue.@samplesPerChip ) * parseInt(numberOfChips.text);
				
				if ( this.numberOfSamples != null && this.numberOfSamples.text != '' && parseInt(this.numberOfSamples.text) <= this.maxNumberOfSamples ) {
					validNumberOfSamples = true;
				} else {
					validNumberOfSamples = false;
				}
				
				numberOfSamplesValidator.validate();
				
				checkChipSetupCompleteness();
			} 
			
		}
		
	    public function checkChipSetupCompleteness():Boolean {
        	var isComplete:Boolean = false;
        	if (parentDocument.isEditState() || parentDocument.isIScanState()) {
				if (this.iScanChipRadioGroup.selectedValue != null && 
					(this.iScanChipRadioGroup.selectedValue.@idIScanChip != null && this.iScanChipRadioGroup.selectedValue.@idIScanChip != '')) {
					if ( validNumberOfSamples ) {
						isComplete = true;
					}
				}
        	} 
			
    		parentDocument.samplesView.enabled = isComplete; 
			
			if (!parentDocument.isAmendState() && validNumberOfSamples) {
				parentDocument.samplesView.initializeSamplesGrid();
			}
			
			if (parentDocument.theTab.contains(parentDocument.annotationView)) {
				parentDocument.annotationView.enabled = isComplete;        			
	    	}
    		parentDocument.enableNextButtons();

        	callLater(postChipSetupCompleteness, [isComplete]);
        	
    		return isComplete;
        }
        
        private function postChipSetupCompleteness(isComplete:Boolean):void {
	    		
	    	if (!isComplete) {
	        	parentDocument.confirmView.enabled = false;
    		} else {
    			parentDocument.samplesView.checkSamplesCompleteness();
    		}
        	
        }
        
		private function handleInvalidNumberOfSamples(eventObject:Event):void {
			this.validNumberOfSamples = false;
			parentDocument.samplesView.enabled = validNumberOfSamples;
			this.checkSampleCount();
		}
		private function handleValidNumberOfSamples(eventObject:Event):void {
			this.validNumberOfSamples = true;
			this.checkSampleCount();
		}
			
		
	]]>
</mx:Script>   
 
	<mx:NumberValidator id="numberOfSamplesValidator" source="{numberOfSamples}" property="text" 
						required="true" allowNegative="false" domain="int" 
						requiredFieldError="Please enter the number of samples you are submitting."
						exceedsMaxError="{'This chip handles ' + iScanChipRadioGroup.selectedValue.@samplesPerChip + ' samples; you have requested ' + numberOfChips.text + ' chips. The maximum number of samples you can submit is ' + maxNumberOfSamples.toString() + '.'}" />
	<mx:NumberValidator id="numberOfChipsValidator" source="{numberOfChips}" property="text" 
						required="true" allowNegative="false" domain="int"  maxValue="4" minValue="4"
						lowerThanMinError="A kit contains 4 chips; you must submit samples for all 4 chips."
						exceedsMaxError="A kit contains 4 chips; you cannot submit samples for more than 4 chips."
						requiredFieldError="Please enter the number of chips you want." />
	<mx:CurrencyFormatter id="dollarFormatter" currencySymbol="$" precision="2" decimalSeparatorTo="." thousandsSeparatorTo="," useThousandsSeparator="true"/> 
	
	
	<mx:VBox width="100%" height="100%" verticalGap="12">
		<mx:HBox id="iScanChipContainer" width="100%" horizontalGap="0">
			<mx:Label text="(1) Select the desired chip:" width="300"  id="label10"/>
			<mx:VBox verticalGap="0" styleName="requiredBox" id="iScanChipBox" width="100%">
				<mx:HBox width="100%">
					<mx:Label width="200" fontSize="10" fontWeight="bold" text="Chip" paddingLeft="25"/>
					<mx:Label width="125" fontSize="10" fontWeight="bold"  text="Samples per Chip"/>
					<mx:Label width="125" fontSize="10" fontWeight="bold" text="Markers per Sample" />
					<mx:Label width="125" fontSize="10" fontWeight="bold" text="Cost per Sample" />
				</mx:HBox>
				<mx:RadioButtonGroup id="iScanChipRadioGroup"/>
				<mx:Repeater id="iScanChipRepeater" dataProvider="{parentApplication.iScanChipList}"> 
					<mx:HBox verticalAlign="middle" width="100%">
						<mx:RadioButton  label="{iScanChipRepeater.currentItem.@name}" 
										 paddingLeft="0" paddingRight="1"
										 value="{iScanChipRepeater.currentItem}" 
										 click="{pickChip()}"
										 groupName="iScanChipRadioGroup" width="200"/>
						<mx:Text width="125" fontSize="9" text="{iScanChipRepeater.currentItem.@samplesPerChip}" />
						<mx:Text width="125" fontSize="9" text="{iScanChipRepeater.currentItem.@markersPerSample}" />
						<mx:Text width="125" fontSize="9" 
								 text="{iScanChipRepeater.currentItem.@costPerSampleDisplay!='0'&amp;&amp;iScanChipRepeater.currentItem.@costPerSampleDisplay!=''?dollarFormatter.format(iScanChipRepeater.currentItem.@costPerSampleDisplay):''}" />
					</mx:HBox>
				</mx:Repeater>
				
			</mx:VBox>
		</mx:HBox>
		
		<mx:HBox horizontalGap="0" verticalAlign="middle">
			<mx:Label text="(2) How many chips do you want?" width="300" />
			<mx:TextInput width="40" id="numberOfChips" change="checkSampleCount();">
				<mx:focusOut>checkSampleCount();</mx:focusOut>
			</mx:TextInput>							
		</mx:HBox>
		
		<mx:HBox horizontalGap="0" verticalAlign="middle">
			<mx:Label text="(3) How many samples will you be submitting?" width="300" />
			<mx:TextInput width="40" id="numberOfSamples" 
						  valid="handleValidNumberOfSamples(event)" 
						  invalid="handleInvalidNumberOfSamples(event)"
						  change="checkSampleCount();">
				<mx:focusOut>checkSampleCount();</mx:focusOut>
			</mx:TextInput>								
		</mx:HBox>
		
	</mx:VBox>
</mx:Canvas>
