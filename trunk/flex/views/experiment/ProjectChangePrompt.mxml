<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	title="Reassignment"
	showCloseButton="true" 
	width="480" 
	height="188"
	close="closeWindow('No')"
	xmlns:util="views.util.*" verticalScrollPolicy="off" horizontalScrollPolicy="off"
	layout="vertical" backgroundAlpha="100" defaultButton="{saveButton}">
	
	<mx:HTTPService             
		id="getLab" 
		url="GetLab.gx" 
		destination="getLab" 
		resultFormat="e4x"
		result="onGetLab(event)"
		fault="parentApplication.onFailHttpRequest('Failed to get lab', event)"
		method="POST" 
		useProxy="false">
	</mx:HTTPService> 
       
    <mx:Script>
	<![CDATA[
	
	import mx.collections.Sort;
	import mx.collections.XMLListCollection;
	import mx.controls.Alert;
	import mx.managers.PopUpManager;
	import mx.rpc.events.ResultEvent;
	
	import views.util.StringUtil;
		
	private var idLab:String;
	private var idBillingAccount:String;
	private var currentOwnerId:String;	
		
	[Bindable]
	private var appUsersForLab:XMLListCollection;
	private var appUserSort:Sort;
		
	private var navExperimentView:NavExperimentView;
		
		
	public	function init(navExperimentView:NavExperimentView, message:String, idLab:String, currentOwnerId:String, idBillingAccount:String):void {
		this.navExperimentView = navExperimentView;
		this.message.text = message;
		this.idLab = idLab;
		this.currentOwnerId = currentOwnerId;
		this.idBillingAccount = idBillingAccount;
		
		var params:Object = new Object();
		params.idLab = idLab;
		getLab.send(params);
	}		
		
	private function onGetLab(event:ResultEvent):void {	
		if (getLab.lastResult.name() == "OpenLabList") {		
			var lab:Object = getLab.lastResult..Lab.(@idLab == idLab);
			
			var emptyNode:XML = <BillingAccount idBillingAccount='' accountName=''/>;
			billingAccounts = new XMLListCollection(lab.billingAccounts.BillingAccount);
			billingAccounts.addItemAt(emptyNode, 0);
			requestEditBillingAccountCombo.selectedItem = null;
			for each(var ba:Object in billingAccounts) {
				if (ba.@idBillingAccount == idBillingAccount) {
					requestEditBillingAccountCombo.selectedItem = ba;
					break;
				}
			}						
			
			emptyNode = <AppUser idAppUser='' displayName=''/>;
			appUsersForLab = new XMLListCollection(lab.members.AppUser.(@isActive=='Y'));
			for each (var mgr:Object in lab.managers.AppUser) {
				if (!appUsersForLab.contains(mgr)) {
					if(mgr.@isActive=='Y') {
						appUsersForLab.addItem(mgr);
					}
					
				}
			}
			if(appUsersForLab.length == 0) {
				Alert.show("Sorry, in order to reassign this experiment you must change its owner to a member of the new lab group. However, you do not have permission to access the member list for this lab. Please contact an administrator.");
				navExperimentView.onPromptToReassignProject("No", null, null);
				PopUpManager.removePopUp(this);
				return;
			}
			appUsersForLab.addItemAt(emptyNode, 0);
			
			appUserSort = new Sort();
			appUserSort.compareFunction = StringUtil.sortAppUsers;
			appUsersForLab.sort = appUserSort;
			appUsersForLab.refresh();
			ownerCombo.dataProvider = appUsersForLab;
			ownerCombo.selectedItem = emptyNode;
			for each(var a:Object in appUsersForLab) {
				if (a.@idAppUser == currentOwnerId) {
					ownerCombo.selectedItem = a;
					break;
				}
			}				
		}		
	}
		
		
    private function closeWindow(closeStatus:String):void {
		if(closeStatus == "Yes") {
			if (ownerCombo.selectedItem == null || ownerCombo.selectedIndex == 0) {
				ownerCombo.setFocus();
				Alert.show("Please select the experiment owner.");
				return;        		
			} 
			if (requestEditBillingAccountCombo.selectedItem == null || requestEditBillingAccountCombo.selectedIndex == 0) {
				requestEditBillingAccountCombo.setFocus();
				Alert.show("Please select the experiment billing account.");
				return;        		
			} 
			
		}
		navExperimentView.onPromptToReassignProject(closeStatus, ownerCombo.selectedItem.@idAppUser, requestEditBillingAccountCombo.selectedItem.@idBillingAccount);
		PopUpManager.removePopUp(this);		
	}
		
	]]>
    </mx:Script>
	<mx:XMLListCollection id="billingAccounts" />
	
    <mx:VBox width="100%" height="100%" verticalGap="10"  verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<mx:HBox width="100%" >
			<mx:TextArea id="message" editable="false" wordWrap="true" fontSize="11" width="100%" backgroundColor="#DDDDDD"/>
		</mx:HBox>				
		<mx:HBox width="100%">
			<mx:Label text="Owner" width="50"/>
			<util:ComboBoxDatProvChangeFix  width="409" id="ownerCombo" labelField="@displayName" dataProvider="{appUsersForLab}"></util:ComboBoxDatProvChangeFix>						         			
		</mx:HBox>	
		<mx:HBox width="100%">
			<mx:Label text="Account" width="50"/>
			<mx:ComboBox id="requestEditBillingAccountCombo"
						 labelField="@accountName" width="409"
						 dataProvider="{billingAccounts}" />
		</mx:HBox>		
    </mx:VBox>

	<mx:ControlBar horizontalAlign="right" height="29">
		<mx:Button id="saveButton"  
			label="Yes"
			click="{closeWindow('Yes')}"/>
		<mx:Button label="No" click="{closeWindow('No')}"/>
	</mx:ControlBar>
</mx:TitleWindow>
