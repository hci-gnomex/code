<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas  label="Seq Setup" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"  enabled="false">
<mx:Script>
	<![CDATA[
       	public function propagateSeqRunType():void {

			var idSeqRunType:String = ''; 
			if (parentDocument.isSolexaState()) {
	       		idSeqRunType = this.seqRunTypeCombo.selectedItem.@value;
	       		
				for each (var sample:Object in parentDocument.samples) {
					sample.@idSeqRunType = idSeqRunType;
				}
				for each (var lane:Object in parentDocument.lanes) {
					lane.@idSeqRunType = idSeqRunType;
				}
				callLater(parentDocument.samplesView.checkSamplesCompleteness);
				
			}
		}
       	private function propagateGenomeBuild():void {
			for each (var sample:Object in parentDocument.samples) {
				sample.@idGenomeBuildAlignTo = this.genomeBuildCombo.selectedItem.@value;
			} 
			for each (var lane:Object in parentDocument.lanes) {
				lane.@idGenomeBuildAlignTo = this.genomeBuildCombo.selectedItem.@value;
			}
			callLater(parentDocument.samplesView.checkSamplesCompleteness);
		}
       	private function propagateAnalysisInstructions():void {
			for each (var sample:Object in parentDocument.samples) {
				sample.@analysisInstructions = this.analysisInstructions.text;
			}
			for each (var lane:Object in parentDocument.lanes) {
				lane.@analysisInstructions = this.analysisInstructions.text;
			}
			callLater(parentDocument.samplesView.checkSamplesCompleteness);
		}
       	private function propagateNumberSequencingCycles():void {
			for each (var sample:Object in parentDocument.samples) {
				sample.@idNumberSequencingCycles = this.numberSequencingCyclesCombo.selectedItem.@value;
			}
			for each (var lane:Object in parentDocument.lanes) {
				lane.@idNumberSequencingCycles = this.numberSequencingCyclesCombo.selectedItem.@value;
			}
			callLater(parentDocument.samplesView.checkSamplesCompleteness);
		}
		public function selectDefaultGenomeBuild():void {
			if (this.genomeBuildCombo.dataProvider.length > 1) {
				for each(var genomeBuild:Object in this.genomeBuildCombo.dataProvider) {
					if (genomeBuild.@isLatestBuild != null && genomeBuild.@isLatestBuild == 'Y') {
						this.genomeBuildCombo.selectedItem = genomeBuild;
						propagateGenomeBuild();
						break;
					}
				}
			}
		}
	    
	    public function checkSeqSetup1Completeness():Boolean {
        	var isComplete:Boolean = false;
        	if (parentDocument.isEditState()) {
        		isComplete = true;
        	}else if (parentDocument.isSolexaState()) {
	        	if (this.numberSequencingCyclesCombo.selectedItem != null && this.numberSequencingCyclesCombo.selectedItem.@value != '' &&
	        	    this.seqRunTypeCombo.selectedItem != null && this.seqRunTypeCombo.selectedItem.@value != '' &&
	        	    this.numberSequencingCyclesCombo.selectedItem != null && this.numberSequencingCyclesCombo.selectedItem.@value != '' ) {
	        	
	        		isComplete = true;
	        	    
	        	 }
        	
        	} 
        	
        	     
        	
    		parentDocument.samplesView.enabled = isComplete; 
    			
			if (parentDocument.theTab.contains(parentDocument.annotationView)) {
				parentDocument.annotationView.enabled = isComplete;        			
	    	}
    		parentDocument.enableNextButtons();

        	callLater(postSeqSetup1Completeness, [isComplete]);
        	
    		return isComplete;
    	    	
        }
        
        private function postSeqSetup1Completeness(isComplete:Boolean):void {
	    		
	    	if (!isComplete) {
	        	parentDocument.confirmView.enabled = false;
    		} else {
    			parentDocument.samplesView.checkSamplesCompleteness();
    		}
        	
        }

		
	]]>
</mx:Script>   
   <mx:NumberValidator id="seqRunTypeValidator"
        source="{this.seqRunTypeCombo}"
        lowerThanMinError="This field is required."
        property="selectedIndex"
        minValue="1" />   
    <mx:NumberValidator id="numberSeqCyclesValidator"
        source="{this.numberSequencingCyclesCombo}"
        lowerThanMinError="This field is required."
        property="selectedIndex"
        minValue="1" />    

	<mx:VBox width="100%" height="100%">
			<mx:VBox  horizontalAlign="center" paddingLeft="4">
  			  <mx:TextArea styleName="instructionBox" width="570" wordWrap="true" height="48">
				<mx:htmlText><![CDATA[Instructions<br>  1.  Provide requested information or select appropriate dropdown options for each line item below.<br>  2.  After completing all line items, click the 'Next' button at the bottom of the page to proceed.]]></mx:htmlText>
			  </mx:TextArea>
			</mx:VBox>
			<mx:HBox id="seqRunTypeContainer" width="100%" horizontalGap="0">
				<mx:Label text="(1) Select the sequencing run type:" width="314."  id="label9"/>
				<mx:ComboBox id="seqRunTypeCombo" labelField="@display" 
					change="parentDocument.samplePrepMethodList.refresh();parentDocument.sampleSetupView.selectDefaultSamplePrepMethod();parentDocument.samplesView.initializeSamplesGrid();this.propagateSeqRunType();this.checkSeqSetup1Completeness();" 
					width="300" 
					dataProvider="{parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.SeqRunType').DictionaryEntry.(@isActive != &quot;N&quot;)}">
				</mx:ComboBox>
			</mx:HBox>
			<mx:HBox id="numberOfCyclesContainer" width="100%" horizontalGap="0">
				<mx:Label text="(2) Select the desired number of sequencing cycles." width="314."  id="label10"/>
				<mx:ComboBox id="numberSequencingCyclesCombo" labelField="@display" change="parentDocument.samplePrepMethodList.refresh();parentDocument.sampleSetupView.selectDefaultSamplePrepMethod();parentDocument.samplesView.initializeSamplesGrid();this.propagateNumberSequencingCycles();this.checkSeqSetup1Completeness();">
					<mx:dataProvider>{parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.NumberSequencingCycles').DictionaryEntry.(@isActive == 'Y')}</mx:dataProvider>
				</mx:ComboBox>
			</mx:HBox>
			<mx:HBox id="numberOfCyclesContainer0" width="100%" horizontalGap="0">
				<mx:Label text="(3) Do you want the sequence data to be aligned?" width="314"  id="label11"/>
				<mx:VBox width="100%" id="alignMoreContainer" paddingRight="4">
					<mx:HBox width="100%" horizontalGap="2">
						<mx:CheckBox id="alignCheckBox" label="Yes, align to genome build" click="{if (!alignCheckBox.selected) {genomeBuildCombo.selectedIndex = 0;};this.checkSeqSetup1Completeness();}" selected="true"/>
						<mx:ComboBox labelField="@display" id="genomeBuildCombo" change="this.propagateGenomeBuild();this.checkSeqSetup1Completeness();" width="300" dataProvider="{parentDocument.filteredGenomeBuildList}">							
						  	</mx:ComboBox>                			
					</mx:HBox>
						<mx:HBox width="100%" horizontalGap="0">
						    <mx:Spacer width="20"/>
						</mx:HBox>
				</mx:VBox>
			</mx:HBox>
			<mx:HBox id="numberOfCyclesContainer1" width="100%" horizontalGap="0" height="100%">
				<mx:Label text="(4) Provide any special analysis instructions." width="314"  id="label12"/>
				<mx:TextArea id="analysisInstructions" width="100%" focusOut="this.propagateAnalysisInstructions()" maxChars="2000" height="100%"/>
			</mx:HBox>
		
	</mx:VBox>
</mx:Canvas>
