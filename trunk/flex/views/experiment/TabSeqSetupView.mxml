<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="Seq application" 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:util="views.util.*" 
	 width="100%" height="100%" show="init()" >
	<mx:states>
		<mx:State name="EditState">
			<mx:RemoveChild target="{hbox1}"/>
			<mx:SetProperty name="enabled" value="true"/>
		</mx:State>
	</mx:states>
<mx:Script>
	<![CDATA[
		import hci.flex.controls.CheckBox;
		
		import mx.collections.ArrayCollection;
		import mx.collections.XMLListCollection;
		import mx.controls.RadioButton;
		import mx.controls.Spacer;
		import mx.events.ListEvent;
		
		import views.renderers.CheckBoxIsSelectedChipType;
	
		private var validNumberOfSamples:Boolean = true;
		private var validConcentration:Boolean = true;
		private var application:Object = null;
		
		[Bindable]
		private var meanInsertSizes:ArrayCollection = null;

		private var codeRequestCategoryInitted:String = "";
		
		public function init():void {
			checkSecurity();
			
			// We don't show seq apps on edit window
			if (this.currentState == "EditState") {
				return;
			}
			
			// Only initialize once.
			if (this.seqAppBox.getChildren().length > 0 && codeRequestCategoryInitted == parentDocument.getRequestCategory().@codeRequestCategory) {
				return;
			}
			
			// clear the box
			seqAppBox.removeAllChildren();
			
			this.codeRequestCategoryInitted = parentDocument.getRequestCategory().@codeRequestCategory;
			
			// Map the apps by theme
			var themeMap:Array= new Array();
			for each(var item:Object in parentDocument.filteredAppList) {
				var theKey:Object = item.@idApplicationTheme;
				var apps:XMLListCollection = themeMap[theKey];
				if (apps == null) {
					apps = new XMLListCollection();
					themeMap[theKey] = apps;
				}
				apps.addItem(item);
			}
			
			var meanInsertSizeSet:Boolean = false;
			var capLibBoxSet:Boolean = false;
			// Organize the sequencing appliction radio buttons by theme.  
			for (var key:Object in themeMap) {
				var theApps:XMLListCollection = themeMap[key];
				
				if (seqAppBox.getChildren().length > 0) {
					var spacer:Spacer = new Spacer();
					spacer.height = 10;
					seqAppBox.addChild(spacer);
				}
				
				
				var header:mx.controls.Label = new mx.controls.Label();
				header.text = parentApplication.dictionaryManager.getEntryDisplay("hci.gnomex.model.ApplicationTheme", key);
				if (header.text != "" && header.text != null) {
					seqAppBox.addChild(header);
				}
				else{
					header.text = "Other";
					seqAppBox.addChild(header);
				}
				
				for each(var app:Object in theApps) {
					var rb:RadioButton = new RadioButton();
					rb.value = app.@value;
					rb.label = app.@application;
					
					rb.group = radioGroupSeqApp;
					rb.setStyle("paddingLeft", 10);
					rb.addEventListener("click", onSeqAppRadioClick);
					seqAppBox.addChild(rb);
					seqAppBox.validateNow();
					
					if(app.@hasCaptureLibDesign == 'Y' && !capLibBoxSet){
						designSpacer.height = rb.y;
						designSpacer.validateNow();
						capLibBoxSet = true;
					}
				}
			}
			
			checkSeqAppSetupCompleteness();
		}
		
		public function checkSecurity():void {
		}
		
		private function onSeqAppRadioClick(event:Object):void {
			pickSeqApp();
		}
	
	 

		public function checkSeqAppSetupCompleteness():Boolean {
			var isComplete:Boolean = false;
			if (parentDocument.isEditState() && parentDocument.request.@captureLibDesignId != "") {
				isComplete = true;
			} else if (parentDocument.isSolexaState() || parentDocument.isSolexaAmendState() || parentDocument.isAmendState()) {
				if (this.radioGroupSeqApp.selectedValue != null && this.radioGroupSeqApp.selectedValue != '') {
					
					if (libraryDesign.visible) {
						
						// If the capture design lib id is visible, it is required, so
						// make sure it has been filled in.
						if (parentDocument.request.@captureLibDesignId != "") {
							isComplete = true;
						}
					} else {
						
						// If neither insert ranges or design lib id is visible, we have
						// passed all of the required field checks already.
						isComplete = true;
						
					}
				}
			} 
			
			if (this.currentState != "EditState") {
				parentDocument.sampleSetupView.enabled = isComplete; 
			}
			
			parentDocument.enableNextButtons();
			
			callLater(postSeqAppSetupCompleteness, [isComplete]);
			
			return isComplete;
			
		}
		
        private function postSeqAppSetupCompleteness(isComplete:Boolean):void {
	    		
	    	if (!isComplete) {
	        	if (parentDocument.theTab.contains(parentDocument.sampleSetupView)) {
		        	parentDocument.sampleSetupView.enabled = false;
	        	}
	        	parentDocument.confirmView.enabled = false;
    		} else {
    			if (parentDocument.theTab.contains(parentDocument.sampleSetupView)) {
		    		parentDocument.sampleSetupView.checkSampleSetupCompleteness();
		    	}
    		}
        	
        }

		private function pickSeqApp():void {
			if (this.radioGroupSeqApp.selectedValue != null) {
				this.seqAppBox.styleName = 'normalBox';
				application = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.Application', radioGroupSeqApp.selectedValue);
				if (application != null && application is XMLList) {
					this.parentDocument.applicationName = application[0].@display;
					this.parentDocument.codeApplication = application[0].@codeApplication;
					if(application[0].@hasCaptureLibDesign == 'Y'){ //If it is sure select we need to show the library capture id input box
						libraryDesign.visible = true;
						libraryDesign.includeInLayout = true;
					}
					else{
						libraryDesign.visible = false;
						libraryDesign.includeInLayout = false;
						designID.text = "";
						libraryDesign.styleName = "requiredBox";
						parentDocument.request.@captureLibDesignId = "";
					}
				} else if (application != null && application is XML) {
					this.parentDocument.applicationName = application.@display;
					this.parentDocument.codeApplication = application.@codeApplication;
				}
			} else {
				this.seqAppBox.styleName = 'requiredBox';
				this.parentDocument.applicationName = '';
				this.parentDocument.codeApplication = '';	
			}
			
			this.checkSeqAppSetupCompleteness();
			if (!this.parentDocument.isAmendState()) {
				this.parentDocument.sampleSetupView.pickSeqApp();
			}
		}
		
		
		private function propagateDesign():void{
			libraryDesign.styleName = "requiredBox";
	
			if(designID.text != "" || designID.text != null){
				parentDocument.request.@captureLibDesignId = designID.text;
				libraryDesign.styleName = "undefined";
			}
			
			checkSeqAppSetupCompleteness();
		}
			
	]]>
</mx:Script>

  <mx:XMLListCollection id="seqLibTreatments" source="{parentDocument.request.SeqLibTreatmentEntries.SeqLibTreatment}"/>
  <mx:Canvas width="100%" height="100%">
        	
	<mx:HBox id="mainBox" width="100%" height="100%" verticalGap="2">
   		<mx:VBox height="100%"  paddingTop="2"  verticalGap="2" id="sampleSetupContainer" enabled="true" >
			<mx:Text text="Select a sequencing application."  id="labelApplication"/>
		   <mx:HBox horizontalGap="0" id="hbox1" paddingLeft="12">
		       <mx:RadioButtonGroup id = "radioGroupSeqApp">       	
		       </mx:RadioButtonGroup> 
		       <mx:VBox height="100%" verticalGap="0" paddingLeft="2" paddingRight="2" paddingBottom="0" paddingTop="0" styleName="requiredBox" id="seqAppBox">
		       </mx:VBox>
		   </mx:HBox>
		</mx:VBox>	
		<mx:VBox  visible="{libraryDesign.visible}" includeInLayout="{libraryDesign.visible}"  height="100%"  paddingTop="2">
			<mx:Spacer id="designSpacer" includeInLayout="{libraryDesign.visible}"/>
			<mx:VBox verticalGap="0" id="libraryDesign" visible="false" includeInLayout="false" paddingTop="10" paddingLeft="10" styleName="requiredBox">
				<mx:HBox paddingBottom="10" paddingRight="10">
					<mx:Label text="Capture Library Design ID: " id="designIDLabel" />
					<mx:TextInput id="designID" change="propagateDesign()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:VBox>
	</mx:HBox>
	
 </mx:Canvas>
</mx:Canvas>