<?xml version="1.0" encoding="utf-8"?>
<exp:TabConfirmBase xmlns:mx="http://www.adobe.com/2006/mxml" 
					label="Confirm" width="100%"  
					height="100%"    horizontalScrollPolicy="off"
					enabled="false"
					show="init()" xmlns:exp="views.experiment.*" xmlns:util="views.util.*"> 
	<mx:Script>	
		<![CDATA[
			import hci.flex.controls.ComboBox;
			import hci.flex.controls.DropdownLabel;
			
			import mx.collections.Grouping;
			import mx.collections.GroupingCollection;
			import mx.collections.GroupingField;
			
			import views.util.AnnotationDataGridColumn;
			
			[Bindable]
			private var longDescriptionRowCount:int = 0;
			
			override public function setupView():void {
				this.parentDocument.samplesView.initializeBarcoding();
				parentDocument.getEstimatedBilling();
				parentDocument.getMultiplexLanes();

				submitterName.text = parentDocument.getSubmitterName();
				this.clientPrepLib.visible = false;
				this.clientPrepLib.includeInLayout = false;
				for each (var s1:Object in parentDocument.samples) {
					var nsca:Object = parentApplication.dictionaryManager.getEntries('hci.gnomex.model.NumberSequencingCyclesAllowed').(@value == s1.@idNumberSequencingCyclesAllowed);
					this.seqLaneTypeLabel.text = nsca.@display.toString();
					
					if (s1.@seqPrepByCore == 'N') {
						this.clientPrepLib.visible = true;
						this.clientPrepLib.includeInLayout = true;
					}
					break;
				}

				longDescriptionRowCount = 0;
				for each (var s:Object in parentDocument.samples) {
					if (s.@description.toString().length > 30) {
						var count:Number = s.@description.toString().length / 30;
						longDescriptionRowCount += Math.round(count);
					}
				}
					
				this.confirmContainer.validateNow();
				
			} 
			
			override public function showHideColumns():void {
				this.filteredSamples.removeAll();
				for each(var sample:Object in parentDocument.samples) {
					if (sample.@name != null && sample.@name != '') {
						this.filteredSamples.addItem(sample);
					}
				}
				
				// Edit buttons shown
				this.parentDocument.submitButton.label = 'Submit';
				this.parentDocument.agreeBox.visible = true;
				this.parentDocument.agreeBox.includeInLayout = true;
				this.parentDocument.agreeCheckbox.selected = false;
				
				// Edit columns shown
				this.sampleTypeColumn.visible = true;
				this.sampleNameColumn.visible = true;
				
				concentrationCol.visible = parentApplication.isInternalExperimentSubmission;

				sampleOrganismConfirmColumn.visible = true;
				
				this.barcodeColumn.visible = parentDocument.showSampleBarcodes();
				this.barcodeColumnB.visible = parentDocument.showSampleBarcodesB();
				this.customBarcodeColumn.visible = parentDocument.showSampleCustomBarcodes();
				
				this.sampleRowNumberCol.visible = true;

				// externals never show organism column, mulitplex group number or number sequencing lanes in sample
				if (parentDocument.request!=null && parentDocument.request.@isExternal == "Y") {
					this.sampleOrganismConfirmColumn.visible = false;
					this.multiplexGroupNumberColumn.visible = false;
					this.numberSequencingLanes.visible = false;
				}
			}
			
			
			public function getSamplesConfirmGridRowNumber(item:Object,col:int):String
			{
				if (filteredSamples!= null) {
					var x:int = filteredSamples.getItemIndex(item) + 1;
					return "X" + String(x);     		
				} else {
					return "";
				}
			}
			
			override public function setBarcodeColVisibility(visibility:Boolean):void {
				this.barcodeColumn.visible = false;
			}
			
			
			override public function setChannel2ColVisibility(visibility:Boolean):void {
			}
			
			override public function getSamplesGrid():Object {
				return this.samplesGridConfirm;
			}
			
			override public function setBillingGridRowCount(rowCount:int):void{
				this.billingConfirmGrid.rowCount = rowCount;
				this.billingConfirmGrid.validateNow();
			}
			
		]]>
		
	</mx:Script>
	
	<mx:XMLListCollection id="filteredSamples" />
	
	<mx:VBox id="confirmHeaderContainer"  width="100%" backgroundAlpha="0.0" verticalGap="0" paddingRight="25"  >
		<mx:VBox   width="100%"  backgroundAlpha="0.0" verticalGap="0" paddingBottom="5" paddingLeft="5" paddingTop="0" id="confirmContainer" >
			<mx:HBox width="100%" horizontalGap="4">
				<mx:VBox height="100%" verticalGap="0" width="500" horizontalScrollPolicy="off">
					<mx:Label text="Experiment Details" styleName="confirmHeaderLabel" />
					<mx:Text  id="submitterName" />
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.labCombo.selectedItem.@name : parentDocument.setupView.labCombo.selectedItem.@name}" id="text2"/>
					<mx:Text text="{parentDocument.isAmendState() ? parentDocument.request.@billingAccountName : parentDocument.setupView.billingAccountCombo.selectedItem.@accountName + '(' + parentDocument.isAmendState() ? parentDocument.request.@billingAccountNumber : parentDocument.setupView.billingAccountCombo.selectedItem.@accountNumber + ')'}"/>
					<mx:Text text="{parentDocument.requestCategoryName}" id="requestKindLabel"/>
					<mx:Text text="{parentDocument.applicationName}" id="appLabel"/>
					<mx:Text text="" id="seqLaneTypeLabel" />
					<mx:Text text="Library Prepared By Client" id="clientPrepLib" visible="false" includeInLayout="false" />
				</mx:VBox>
				<mx:TextArea styleName="instructionBox" width="284" wordWrap="true" id="textarea1" height="100" editable="false">
					<mx:htmlText><![CDATA[1.  Please confirm the information below. Click the<br>     Back button or a tab to modify the request.<br>2.  Agree to estimated charges by clicking the <br>    "I authorize" checkbox.<br>3.  Approve the work request by clicking the Submit<br>    button.]]></mx:htmlText>
				</mx:TextArea>
			</mx:HBox>
			<mx:VBox width="100%" verticalGap="0" id="billingContainer">
				<mx:HBox width="100%" id="chargesHeaderBox">
					<mx:Label text="{'Estimated Charges ' + parentDocument.createBillingItems.lastResult.Request.@invoicePrice}" id="label2" styleName="confirmHeaderLabel" paddingTop="4"/>								    	
				</mx:HBox>
				<mx:VBox width="100%" id="vbox1">
					<mx:DataGrid id="billingConfirmGrid"   showHeaders="false"  horizontalScrollPolicy="off"
								 editable="false" dataProvider="{parentDocument.createBillingItems.lastResult..BillingItem}"  
								 backgroundAlpha="0"  horizontalGridLines="false" verticalGridLines="false"  variableRowHeight="true" selectable="false" 
								 sortableColumns="false" fontSize="11"  borderStyle="none" >
						<mx:rowCount>{parentDocument.createBillingItems.lastResult..BillingItem.length() + 1}</mx:rowCount>
						<mx:columns>
							<mx:DataGridColumn  headerText="Price Category" dataField="@category" editable="false" width="200">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@category}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Description" dataField="@description" editable="false" width="270">
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@description}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Qty" dataField="@qty" editable="false" textAlign="right" width="50" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@qty}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText=""   textAlign="center" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="center" text="X" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Unit price" dataField="@unitPrice"  textAlign="right" editable="false" width="65" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="right" text="{data.@unitPrice}" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText=""   textAlign="left" editable="false" width="10" > 
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text  textAlign="left" text="=" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Total price" dataField="@invoicePrice" textAlign="right" width="105" editable="false" >
								<mx:itemRenderer>
									<mx:Component>
										<mx:Text text="{data.@invoicePrice}"  textAlign="right" styleName="{data.@other == 'Y' ?'other':'normal'}" />
									</mx:Component>
								</mx:itemRenderer> 
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</mx:VBox>
				
			</mx:VBox> 
			
			<mx:VBox verticalGap="0" width="100%" id="samplesConfirmContainer" paddingTop="4">
				<mx:Label text="Experiment Design" id="label1" styleName="confirmHeaderLabel"/>
				<util:AdvancedDataGridWithCustomRowColors width="100%" 
														  id="samplesGridConfirm"  
														  editable="false" 
														  dataProvider="{filteredSamples}" 
							 							borderStyle="solid"  
														horizontalScrollPolicy="off" 
														verticalScrollPolicy="off"
							 							sortableColumns="false" 
														sortExpertMode="true"
														alpha="0.8" 
														fontSize="11" 
														variableRowHeight="true" 
														selectable="false" >
					<util:columns>
						
						<mx:AdvancedDataGridColumn id="multiplexGroupNumberColumn" headerText="Multiplex #" dataField="@multiplexGroupNumber" editable="false"
										   width="58">
							<mx:headerRenderer>
								<mx:Component>
									<mx:VBox  horizontalScrollPolicy="off" verticalGap="0">
										<mx:Label text="Multiplex"/>
										<mx:Label text="Group #"/>
									</mx:VBox>
								</mx:Component>
							</mx:headerRenderer>
						</mx:AdvancedDataGridColumn>
						<mx:AdvancedDataGridColumn id="sampleRowNumberCol" visible="true" editable="false" headerText="Sample #"  width="40" resizable="false" labelFunction="getSamplesConfirmGridRowNumber">
							<mx:headerRenderer>
								<mx:Component>
									<mx:VBox  horizontalScrollPolicy="off" verticalGap="0">
										<mx:Label text="Sample"/>
										<mx:Label text="#"/>
									</mx:VBox>
								</mx:Component>
							</mx:headerRenderer>
						</mx:AdvancedDataGridColumn>
						<mx:AdvancedDataGridColumn headerText="Sample Name" id="sampleNameColumn" width="100" dataField="@name">				    
						</mx:AdvancedDataGridColumn>
						
						<mx:AdvancedDataGridColumn id="concentrationCol" visible="true" headerText="Conc.(ng/ul)" width="65" dataField="@concentration"/>
						
						<mx:AdvancedDataGridColumn id="barcodeColumn"  headerText="Index Tag A" width="130" dataField="@idOlogiBarcode" 
										   editorDataField="value" sortable="false" editable="false" rendererIsEditor="true" 
										   visible="false"
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.OligoBarcode').DictionaryEntry, '@display', '@value', '@idOligoBarcode')}" />
						
						<mx:AdvancedDataGridColumn id="barcodeColumnB"  headerText="Index Tag B" width="130" dataField="@idOlogiBarcodeB" 
										   editorDataField="value" sortable="false" editable="false" rendererIsEditor="true" 
										   visible="false"
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.OligoBarcode').DictionaryEntry, '@display', '@value', '@idOligoBarcodeB')}" />
						
						<mx:AdvancedDataGridColumn headerText="Description" id="descriptionColumn" width="100" dataField="@description" wordWrap="true"/>
						
						<mx:AdvancedDataGridColumn headerText="# Seq Lanes" width="72" dataField="@numberSequencingLanes" id="numberSequencingLanes">
							<mx:headerRenderer > 
								<mx:Component>
									<mx:VBox verticalGap="0"   horizontalAlign="center" verticalAlign="middle"> 
										<mx:Label text="# Seq"/> 
										<mx:Label text="Lanes"/>
									</mx:VBox> 
								</mx:Component>
							</mx:headerRenderer>
						</mx:AdvancedDataGridColumn>
						<mx:AdvancedDataGridColumn id="customBarcodeColumn" headerText="Index Tag" dataField="@barcodeSequence" editable="false" visible="false"
										   width="58">
						</mx:AdvancedDataGridColumn>
						
						<mx:AdvancedDataGridColumn id="sampleTypeColumn" headerText="Sample Type"  width="130"
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SampleType').DictionaryEntry, '@display', '@value', '@idSampleType')}"/>
						<mx:AdvancedDataGridColumn headerText="Organism" id="sampleOrganismConfirmColumn" width="100" 
										   itemRenderer="{DropdownLabel.getFactory(parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.OrganismLite').DictionaryEntry, '@display', '@value', '@idOrganism')}"/>
					</util:columns>
				</util:AdvancedDataGridWithCustomRowColors>
				
			</mx:VBox>
		</mx:VBox>
	</mx:VBox>
	
	<exp:states>
		<mx:State name="BillingExceedState" >
			<mx:AddChild relativeTo="{chargesHeaderBox}" position="lastChild">
				<mx:HBox borderStyle="none" id="hbox1" paddingBottom="2" >
					<mx:Text text="{'Total charges exceed balance remaining on billing account by ' + parentDocument.createBillingItems.lastResult.Request.@exceededDollarAmount + '. Experiment request cannot be submitted.'}" styleName="warningLabelSevere"/>			    	
				</mx:HBox>
			</mx:AddChild>
			<mx:SetStyle target="{chargesHeaderBox}" name="verticalAlign" value="bottom"/>
		</mx:State>
		<mx:State name="ExternalExperimentState">
			<mx:SetProperty target="{text2}" name="width" value="200"/>
			<mx:SetProperty target="{requestKindLabel}" name="width" value="160"/>
			<mx:SetProperty target="{appLabel}" name="width" value="160"/>
			<mx:SetProperty target="{textarea1}" name="htmlText">
				<mx:value><![CDATA[1.  Please confirm that all information has been<br>     correctly entered. Modifications can be made by<br>     clicking the Back button or by clicking on a tab.<br>2.  Submit the experiment information by<br>      clicking the Submit button.]]></mx:value>
			</mx:SetProperty>
			<mx:RemoveChild target="{billingContainer}"/>
			
		</mx:State>
		<mx:State name="DNASeqCoreState">
			<mx:SetProperty target="{textarea1}" name="htmlText" value="1.  Please confirm the information below. Click the&lt;br&gt;     Back button or a tab to modify the request.&lt;br&gt;2. Click save button."/>
			<mx:SetProperty target="{textarea1}" name="height" value="50"/>
		</mx:State>
	</exp:states>
</exp:TabConfirmBase>
