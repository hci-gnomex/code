<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" width="420" height="272" 
	creationPolicy="all"
	xmlns:views="views.*" 
	showCloseButton="true" initialize="this.setupSampleSheetUpload();vsMain.selectedChild=intro;"
	close="{PopUpManager.removePopUp(this)}" 
	title="Upload Sample Sheet" 	 
	borderThickness="4" defaultButton="{selectFileButton}">
	<mx:states>
		<mx:State name="HideCCNumberState">
			<mx:RemoveChild target="{hbox1}"/>
		</mx:State>
	</mx:states>
	
    <mx:VBox width="100%" height="100%">
		<mx:ViewStack id="vsMain" width="100%" height="100%">
			<mx:Canvas id="intro" width="100%" height="100%">
				<mx:VBox verticalGap="20" fontSize="10" paddingLeft="8" verticalAlign="middle" styleName="form" horizontalAlign="center" paddingRight="8" width="100%" height="100%" paddingTop="8" paddingBottom="8">
					<mx:Text text="This procedure will upload a tab-deliimited text file containing information to be imported into the editable sample fields. Once the file has been uploaded you will be given an option to specify which columns in the file correspond to which on the form." width="100%"/>
					<mx:CheckBox id="hasColNames" label="Check here if the first row contains column names."/>
					<mx:Spacer height="100%"/>
					<mx:ControlBar horizontalAlign="right">
						<mx:Button label="Select File to Upload" click="clickUploadFileButton()" id="selectFileButton"  x="264" y="140"/>
					</mx:ControlBar>
				</mx:VBox>
			</mx:Canvas>
			<mx:Canvas id="chooseColumns" width="100%" height="100%">
				<mx:VBox fontSize="10" verticalGap="10" paddingLeft="8" verticalAlign="top" styleName="form" horizontalAlign="center" paddingRight="8" width="100%" id="vbox1" height="100%" paddingTop="8" paddingBottom="8">
					<mx:Text text="Please indicate which sample sheet column corresponds to each field. It is not necessary to select a field for a column you do not wish to populate.&#xa;" width="100%"/>
					<mx:HBox width="100%">
						<mx:Label width="100" text="Sample Name:"/>
						<mx:ComboBox id="sampleName" dataProvider="{sampleNameList}" labelField="@label" width="280"></mx:ComboBox>
					</mx:HBox>
					<mx:HBox width="100%">
						<mx:Label width="100" text="Concentration:"/>
						<mx:ComboBox id="sampleConcentration" dataProvider="{sampleConcentrationList}" labelField="@label" width="280"></mx:ComboBox>
					</mx:HBox>
					<mx:HBox width="100%">
						<mx:Label width="100" text="Description"/>
						<mx:ComboBox id="sampleDescription" dataProvider="{sampleDescriptionList}" labelField="@label" width="280"></mx:ComboBox>
					</mx:HBox>
					<mx:HBox width="100%" id="hbox1">
						<mx:Label width="100" text="CC Number:"/>
						<mx:ComboBox id="sampleCCNumber" dataProvider="{sampleCCNumberList}" labelField="@label" width="280"></mx:ComboBox>
					</mx:HBox>
					<mx:Spacer height="100%" id="spacer1"/>
					<mx:Button label="Populate Fields" click="clickPopulateFieldsButton()"  id="button1"/>
				</mx:VBox>
			</mx:Canvas>
		</mx:ViewStack>
		
	</mx:VBox>
	<mx:ControlBar width="100%">
	</mx:ControlBar>

	  <mx:HTTPService  
	    id="getSampleSheetUploadURL" 
	    url="UploadSampleSheetURLServlet.gx"
	    resultFormat="e4x"
	    showBusyCursor="true" 
	    result="onGetSampleSheetUploadURL(event)" 
		fault="parentApplication.onFailHttpRequest('Failed to get sample sheet upload URL', event)"
	    method="POST"
	    useProxy="false">
	  </mx:HTTPService>	    
	
	<mx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import views.util.PopulateSampleSheetFieldsEvent;

			
			private var uploadFR:FileReference;
			public var uploadSampleSheetURL:String;
			private var docTypes:FileFilter;
			private var	sampleSheetXML:XML;	
			
			[Bindable]
			private var sampleNameList:XMLListCollection = new XMLListCollection();
			
			[Bindable]
			private var sampleConcentrationList:XMLListCollection = new XMLListCollection();
			
			[Bindable]
			private var sampleDescriptionList:XMLListCollection = new XMLListCollection();
			
			[Bindable]
			private var sampleCCNumberList:XMLListCollection = new XMLListCollection();
			
			public function init(showCCNumberField:Boolean):void {
				if (showCCNumberField) {
					this.currentState = "";
				} else {
					this.currentState = "HideCCNumberState";
				}
			}
			
			public function setupSampleSheetUpload():void {
				uploadSampleSheetURL = null;
				getSampleSheetUploadURL.send();		
			}
			
			private function onGetSampleSheetUploadURL(event:ResultEvent):void {
				if (getSampleSheetUploadURL.lastResult.name() == "UploadSampleSheetURL") {
					uploadSampleSheetURL = getSampleSheetUploadURL.lastResult.@url;
				}
			}				
				
			private function clickUploadFileButton():void {
				//var clickUploadFileButtonEvent:ChooseFileClickEvent = new ChooseFileClickEvent(hasColNames.selected);
				//this.dispatchEvent(clickUploadFileButtonEvent);
				//PopUpManager.removePopUp(this);
				if(uploadSampleSheetURL != null) {
					docTypes = new FileFilter("Documents (*.txt)", "*.txt"); 
					uploadFR = new FileReference;
					uploadFR.addEventListener(Event.SELECT, uploadSampleSheetSelectHandler); 
					uploadFR.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadSampleSheetCompleteHandler); 
					uploadFR.addEventListener(SecurityErrorEvent.SECURITY_ERROR, uploadSecurityErrorHandler);
					uploadFR.addEventListener(HTTPStatusEvent.HTTP_STATUS, uploadHttpStatusHandler);
					uploadFR.addEventListener(IOErrorEvent.IO_ERROR, uploadIoErrorHandler);
					uploadFR.browse([docTypes]);					
				}
				else {
					Alert.show("Error: the upload URL has not been retrieved.");
				}
			}
			
			private function clickPopulateFieldsButton():void {
				var selectedSampleName:int = parseInt(sampleName.selectedItem.@data);
				var selectedSampleConcentration:int = parseInt(sampleConcentration.selectedItem.@data);
				var selectedSampleDescription:int = parseInt(sampleDescription.selectedItem.@data);
				var selectedSampleCCNumber:int = this.currentState == "HideCCNumberState" ? 0 : parseInt(sampleCCNumber.selectedItem.@data);
				
				var sampleNameArray:Array = new Array();
				var sampleConcentrationArray:Array = new Array();
				var sampleDescriptionArray:Array = new Array();
				var sampleCCNumberArray:Array = new Array();
				
				var rowList:XMLList = sampleSheetXML.SampleSheetData.Row;
				var rowCount:int = 1;
				for each (var rowItem:XML in rowList) {
					if(hasColNames.selected && rowCount==1) {
						// Skip row 1 if it consists of column names
						rowCount++;
						continue; 
					}
					var colList:XMLList = rowItem.Column;
					var colCount:int = 1;
					for each(var colItem:XML in colList) {  
						if(colCount == selectedSampleName) {
							sampleNameArray.push(colItem.@Value);
						}
						if(colCount == selectedSampleConcentration) {
							sampleConcentrationArray.push(colItem.@Value);						
						}
						if(colCount == selectedSampleDescription) {
							sampleDescriptionArray.push(colItem.@Value);						
						}
						if(colCount == selectedSampleCCNumber) {
							sampleCCNumberArray.push(colItem.@Value);						
						}
						colCount++;													
					} 
					rowCount++;                
				} 				
				var pSSFieldsEvent:PopulateSampleSheetFieldsEvent 
					= new PopulateSampleSheetFieldsEvent(sampleNameArray, sampleConcentrationArray,
														 sampleDescriptionArray, sampleCCNumberArray);
				this.dispatchEvent(pSSFieldsEvent);
				PopUpManager.removePopUp(this);
			}
			
			private function uploadSampleSheetSelectHandler(event:Event):void { 
				var request:URLRequest = new URLRequest(uploadSampleSheetURL); 
				request.method = URLRequestMethod.POST; 

				var variables:URLVariables = new URLVariables(); 
				if(hasColNames.selected) {
					variables.hasColumnNames = "1"; 
				} else {
					variables.hasColumnNames = "0"; 
				}
				request.data = variables; 
			
				uploadFR.upload(request); 		
			} 
			
			private function uploadSampleSheetCompleteHandler(event:DataEvent):void { 
				
				if (event.data.indexOf("<SampleSheet>") >= 0) {
					var cols:String = "";
					
					sampleSheetXML = new XML(event.data); 
					
					sampleNameList = new XMLListCollection(sampleSheetXML.ColumnSelector.ColumnSelectorItem);
					sampleConcentrationList = new XMLListCollection(sampleSheetXML.ColumnSelector.ColumnSelectorItem);
					sampleDescriptionList = new XMLListCollection(sampleSheetXML.ColumnSelector.ColumnSelectorItem);
					sampleCCNumberList = new XMLListCollection(sampleSheetXML.ColumnSelector.ColumnSelectorItem);			
					
					vsMain.selectedChild=chooseColumns;
					
				} else {
					var errorMessage:String = event.text;
					var removeHTML:RegExp = new RegExp("<[^>]*>", "gi");
					var errorMessageSafe:String = errorMessage.replace(removeHTML, "");
					Alert.show(errorMessageSafe, "Upload Error");
					
				}
			
			} 	
		
			// only called if there is an  error detected by flash player browsing or uploading a file   
			private function uploadIoErrorHandler(event:IOErrorEvent):void{
				mx.controls.Alert.show("File \n" + event.target.name + "\n did not upload.  Please contact GNomEx support.",
					"Upload IO error",0);
			}    
			// only called if a security error detected by flash player such as a sandbox violation
			private function uploadSecurityErrorHandler(event:SecurityErrorEvent):void{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}

			//  after a file upload is complete or attemted the server will return an http status code, code 200 means all is good anything else is bad.
			private function uploadHttpStatusHandler(event:HTTPStatusEvent):void {
				if (event.status == 200){
				} else if (event.status == 900) {
					mx.controls.Alert("File \n" + event.target.name + "\n did not upload. The GNomEx property 'temp_directory' is not specified.  Please contact GNomEx support.");
				} else if (event.status == 901) {
					mx.controls.Alert("File \n" + event.target.name + "\n did not upload. The temp directory is invalid.  Please contact GNomEx support.");
				} else if (event.status == 902) {
					mx.controls.Alert("File \n" + event.target.name + "\n did not upload due to insufficent permissions.  Please contact GNomEx support.");
				} else {
				  	mx.controls.Alert.show("File \n" + event.target.name + "\n did not upload.  Please contact GNomEx support.",
						"HTTP status",0);
				} 
			}
			

		]]>
	</mx:Script>
</mx:TitleWindow>
