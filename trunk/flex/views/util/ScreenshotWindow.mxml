<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"  
				layout="vertical" title="Send Email to GNomEx Team"
				width="800" 
				xmlns:util="views.util.*"
				initialize="init()"				
				defaultButton="{sendEmailButton}"
				showCloseButton="true"  
				close="{mx.managers.PopUpManager.removePopUp(this)}"
				titleIcon="@Embed(source='../../assets/email_go.png')" height="650">
	<mx:HTTPService
		id="ReportIssueGetURLService"
		url="ReportIssueServletGetURL.gx"
		resultFormat="e4x"
		showBusyCursor="true"
		result="onReportIssueGetURLService(event)"
		fault="parentApplication.onFailHttpRequest('Unable to get upload URL', event)"
		method="GET"
		useProxy="false"/>	
	
	<mx:HTTPService
		id="ReportIssueService"
		url="ReportIssueServlet.gx"
		resultFormat="e4x"
		showBusyCursor="true"
		result="onReportIssue(event)"
		fault="this.faultHandlerReportIssue(event)"
		method="POST"
		useProxy="false"/>
	
	<mx:Script>
		<![CDATA[
			import flash.net.FileReference;
			
			import views.util.UploadPostHelper;
			
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.*;
			
			private var fileRef:FileReference = null;

			public var imageByteArray:ByteArray = null;			
			
			private var reportIssueURL:String = null;
			
			private var submitterEmail:String = null;
			 
			private function init():void {
				ReportIssueGetURLService.send();				
				fromAddress.text = parentApplication.getUserEmail();
				
			}
			
			private function onReportIssueGetURLService(event:ResultEvent):void {
				if(ReportIssueGetURLService.lastResult.name() == "ReportIssueServlet") {
					reportIssueURL = ReportIssueGetURLService.lastResult.@url; // this tells it which servlet to call when recieved
				}
			}
			public function onIOError(ioError:IOErrorEvent):void {
				Alert.show(ioError.text + "\r" + ioError.toString(), "IOError");
			}
			
			public function reportIssue():void {
				var result:ValidationResultEvent = fromAddressValidator.validate();
				
				if(result.results != null) {
					var errorMessage:String = result.results[0].errorMessage;
					var errorCode:String = result.results[0].errorCode;									
					Alert.show(errorMessage, errorCode);
				}
				else {					
					var parameters:Object = new Object();
					parameters.fromAddress = fromAddress.text;
					parameters.body = feedbackTextArea.text;
					parameters.IdAppUser = parentApplication.getIdAppUser();
					parameters.AppUserName = parentApplication.getAppUserName();
					parameters.UNID = parentApplication.getUID();			
		
					
					var urlRequest:URLRequest = new URLRequest();
					urlRequest.url = reportIssueURL;
					urlRequest.contentType = 'multipart/form-data; boundary=' + UploadPostHelper.getBoundary();
					urlRequest.method = URLRequestMethod.POST;
					urlRequest.data = UploadPostHelper.getPostData("testfile.png", imageByteArray, parameters);
					urlRequest.requestHeaders.push( new URLRequestHeader( 'Cache-Control', 'no-cache' ));
								
					var urlLoader:URLLoader = new URLLoader();
					urlLoader.dataFormat = URLLoaderDataFormat.BINARY;
					urlLoader.addEventListener(Event.COMPLETE, onReportIssue);
					urlLoader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);
					urlLoader.load(urlRequest);
				}
			}
			
			private function onReportIssue(event:Event):void {			
					Alert.show("Issue has been submitted. Thank you.");
					PopUpManager.removePopUp(this);			
			}			
			
			public function faultHandlerReportIssue(event:FaultEvent):void {
				if (event.message.body is String) {
					var startPos:int = event.message.body.indexOf("H3");
					var endPos:int   = event.message.body.indexOf("</H3>");
					if (startPos != -1 && endPos != -1) {
						Alert.show(event.message.body.toString().substring(startPos + 3, endPos), "Fault Event, Error Status Code: " + event.statusCode);    		
						PopUpManager.removePopUp(this);        		
					} else {
						if(event.message.body == null){
							Alert.show("On web browsers, when a service returns any status code other than 200, Adobe Flash Player cannot read the body of the response. If the status code is 500 and the body contains a fault, there is no way to get to the fault." , "Fault Event, Error Status Code: " + event.statusCode );
						} else {							
							Alert.show(event.message.body.toString(), "Fault Event, Error Status Code: " + event.statusCode);
						}
					}        
					
				} else {
					Alert.show(event.fault.faultCode + "\n\n" + event.fault.faultString + "\n\n" + event.fault.faultDetail, title);
				}
			}
			
			private var thumbIsExpanded:Boolean = true;
			private function swfLoaderClick():void {
				if ( thumbIsExpanded ) {
					hbox.height = 105;
				} else {
					hbox.height = 440;
				}
				this.validateSize(true);
				thumbIsExpanded = !thumbIsExpanded;
			}
		]]>
	</mx:Script>
	<mx:EmailValidator id="fromAddressValidator" source="{fromAddress}" property="text" required="true" trigger="{sendEmailButton}" triggerEvent="click"/>
	
	<mx:VBox id="vbox" styleName="form" width="100%" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4" verticalGap="8" height="100%">								
		<mx:HBox width="100%" verticalAlign="middle">
			<mx:VBox verticalGap="0">
				<mx:Label text="Please enter your feedback in the text box below." styleName="formLabel" />
				<mx:Label text="A member of the GNomEx help team will respond right away." styleName="formLabel" />
			</mx:VBox>
			<mx:Spacer width="100%" />
			<mx:Label id="userEmailAddressTextAreaLabel" text="Your email address:" styleName="formLabel" />
			<mx:TextInput id="fromAddress" width="232" />
		</mx:HBox>		
		<util:TextAreaWorkaround id="feedbackTextArea" width="100%" height="100%"
								 text='Enter feedback here'
								 click="feedbackTextArea.text=='Enter feedback here'?feedbackTextArea.text='':''"
								 focusOut="feedbackTextArea.text==''?feedbackTextArea.text='Enter feedback here':''" />							 
	</mx:VBox >		
	<mx:HBox id="hbox" height="440" width="100%" verticalAlign="bottom" >
		<mx:SWFLoader id="swfLoader" height="100%" width="100%" horizontalAlign="center" verticalAlign="bottom"  smoothBitmapContent="true"
					  click="swfLoaderClick()" toolTip="Screenshot to be sent to GNomEx help team. Click to expand or collapse." >
			<mx:filters>
				<mx:DropShadowFilter />
			</mx:filters>
		</mx:SWFLoader>
	</mx:HBox>		
	<mx:ControlBar   width="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4" verticalAlign="middle" horizontalAlign="left">
		<mx:Label text="All information will be encrypted to protect health information and proprietary research data."/>
		<mx:HBox width="100%" horizontalAlign="right">		
			<mx:Button id="sendEmailButton" label="Submit" click="reportIssue()"/>
			<mx:Button label="Close"  click="{PopUpManager.removePopUp(this)}"/>			
		</mx:HBox>	
	</mx:ControlBar>
</mx:TitleWindow>