<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				width="700" height="424" 
				 creationComplete="{init()}"
				 xmlns:util="views.util.*" 
				 showCloseButton="true" close="{closeWindow()}"
				title="iScan Chips">
	
<mx:HTTPService  
		id="saveIScanChip" 
		url="SaveIScanChip.gx"
		resultFormat="e4x"
		showBusyCursor="false"
		result="onSaveIScanChip(event)"
		fault="parentApplication.onFailHttpRequest('Failed to save iScan Chip', event)"
		method="POST" 
		useProxy="false">
</mx:HTTPService>
	
<mx:HTTPService  
		id="deleteIScanChip" 
		url="DeleteIScanChip.gx"
		resultFormat="e4x"
		showBusyCursor="false"
		result="onDeleteIScanChip(event)"
		fault="parentApplication.onFailHttpRequest('Failed to delete iScan Chip', event)"
		method="POST" 
		useProxy="false">
</mx:HTTPService>
		
<mx:Script>
	<![CDATA[
		import hci.flex.controls.CheckBox;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.controls.DateField;
		import mx.events.CloseEvent;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		
		import views.util.DirtyNote;
		
	private var idIScanChip:Object = null;
	private	var tempArray:Array;
		
	
	private function setDirty():void {
		if (saveButton.enabled) {
			dirty.setDirty();
		}
	}
		
	private function closeWindow():void {
		parentApplication.dictionaryManager.reload();
		
		PopUpManager.removePopUp(this);
	}
	
	private function init():void {
		iScanChips = new XMLListCollection();
		for each(var c:XML in parentApplication.iScanChipList) {
			iScanChips.addItem(c.copy());
		}
		parentApplication.removeEventListener(IScanChipEvent.DATA_REFRESHED,
			onIScanChipRefreshed);		                                  
		parentApplication.addEventListener(IScanChipEvent.DATA_REFRESHED,   
			onIScanChipRefreshed);
	}	
			
	private function onIScanChipRefreshed(event:Event):void{
		iScanChips = new XMLListCollection();
		for each(var c:XML in parentApplication.iScanChipList) {
			iScanChips.addItem(c.copy());
		}
		reselectIScanChip();
		dirty.resetDirty();
	}
		
	public function selectIScanChip(idIScanChip:Object):void {
		this.idIScanChip = idIScanChip;
		reselectIScanChip();
	}
		
	private function reselectIScanChip():void {
		var found:Boolean = false;
		if (idIScanChip != null) {
			for each(var o:Object in iScanChips) {
				if (o.@idIScanChip == idIScanChip) {
					chipList.selectedItem = o;
					chipList.scrollToIndex(chipList.selectedIndex);
					found = true;
					break;
				}
			}
		}
		if (found) {
			theViews.selectedIndex = 1;
			onSelectIScanChip();
		} else {
			theViews.selectedIndex = 0;
		}
	}
		
	private function onSelectIScanChip():void {
		if (chipList.selectedItem != null) {
			theViews.selectedIndex = 1;
			
			if(chipList.selectedItem.@name == "Enter name here.."){
				
			} else{
				theViews.selectedIndex = 1;

				dirty.resetDirty();
			
 				var theDate:String = "";
				tempArray = new Array();
			
							
			}
		}
	}
		

	private function addIScanChip():void {
		var newIScanChip:XML = new XML("<IScanChip " +
			" idIScanChip=''" +
			" name=''" +
			" isActive='Y'" +
			" costPerSampleDisplay=''" + 
			" samplesPerChip=''" + 
			" markersPerSample=''" + 
			" catalogNumber=''" +
			" />");
		iScanChips.addItemAt(newIScanChip, 0);
				
		chipList.selectedItem = newIScanChip;
		chipList.scrollToIndex(chipList.selectedIndex);
		idIScanChip = "";
		
		setDirty();
		
		onSelectIScanChip();

	}
		
	private function removeIScanChip():void {
		if (chipList.selectedItem == null) {
			return;
		}
		idIScanChip = "";
		
		Alert.show( "Are you sure you want to delete this iScan Chip?",
			"Warning",
			(Alert.YES | Alert.CANCEL), this, 
			onPromptDeleteIScanChip,						
			parentApplication.iconWarning);
	}
	
	private function onPromptDeleteIScanChip(event:CloseEvent):void {
		if (event.detail==Alert.YES) {
			var params:Object = new Object();
			params.idIScanChip = chipList.selectedItem.@idIScanChip;
			deleteIScanChip.send(params);
		}
	}		
	
	private function onDeleteIScanChip(event:ResultEvent): void {
		if (deleteIScanChip.lastResult.name() == "SUCCESS") {
			parentApplication.getIScanChipList.send();
			
		} else {
			mx.controls.Alert.show(deleteIScanChip.lastResult..ACTMESSAGE.@TEXT);
		}
	}
		
	
		
	private function save():void {
		if (chipList.selectedItem == null) {
			return;
		}
		
		var params:Object = new Object();
		params.idIScanChip = chipList.selectedItem.@idIScanChip;
		params.name = chipName.text;
		params.isActive = this.isActive.selected ? "Y" : "N";
		params.costPerSampleDisplay = costPerSampleDisplay.text;
		params.samplesPerChip = samplesPerChip.text; 
		params.markersPerSample = markersPerSample.text;
		params.catalogNumber = catalogNumber.text;
		
		saveIScanChip.send(params);
		
	}
		
	private function onSaveIScanChip(event:ResultEvent): void {
		if (saveIScanChip.lastResult.name() == "SUCCESS") {
			idIScanChip = saveIScanChip.lastResult.@idIScanChip;

			parentApplication.getIScanChipList.send();
		} else {
			mx.controls.Alert.show(saveIScanChip.lastResult..ACTMESSAGE.@TEXT);
		}

		
	}
		
		private function checkToSave():void{
			if(chipName.text == "" )
			{
				Alert.show("iScan Chip needs a name.",
					"MISSING FIELDS");
			} else {
				save();
			}
			
		}
		
		
		private function onCheckToSave(event:CloseEvent):void{
			if(event.detail == Alert.YES)
				save();
		}
		
	]]>
</mx:Script>
	
<mx:XMLListCollection id="iScanChips"/>
	
	<mx:StringValidator required="true" source="{chipName}" property="text" maxLength="100" requiredFieldError="iScan Chip must have a name."/>
	<mx:CurrencyFormatter id="dollarFormatter" currencySymbol="$" precision="2" decimalSeparatorTo="." thousandsSeparatorTo="," useThousandsSeparator="true"/> 
	
	
	
<mx:VBox width="100%" height="100%" verticalGap="0">
	
	<mx:HBox width="100%" backgroundSize="100%" verticalAlign="middle">
		<mx:LinkButton label="Add iScanChip" styleName="linkMenuButton" click="addIScanChip()"  disabledIcon="@Embed(source='../../assets/page_add_disable.png')" icon="@Embed(source='../../assets/page_add.png')" fontSize="11"/>
		<mx:LinkButton label="Remove iScanChip" styleName="linkMenuButton" click="removeIScanChip()" enabled="{chipList.selectedItem != null &amp;&amp; chipList.selectedItem.@canDelete == 'Y'}"   disabledIcon="@Embed(source='../../assets/page_delete_disable.png')" icon="@Embed(source='../../assets/page_delete.png')" fontSize="11"/>
	</mx:HBox>
	
<mx:HDividedBox height="100%" width="100%" horizontalGap="6" >
  <mx:VBox height="100%" width="200" styleName="panelBox">
		<mx:List id="chipList" width="100%" height="100%" labelField="@name" dataProvider="{iScanChips}" 
				 itemClick="{onSelectIScanChip()}">
		</mx:List>
  </mx:VBox>	
  <mx:ViewStack id="theViews"  width="100%" height="100%" creationPolicy="all">
	<mx:VBox width="100%" height="100%" verticalGap="0" styleName="panelBox" paddingLeft="4" paddingTop="4" paddingRight="4" paddingBottom="0"/>		
	<mx:VBox width="100%" height="100%" verticalGap="1" styleName="panelBox" paddingLeft="4" paddingTop="4" paddingRight="4" paddingBottom="0">		
		 <mx:VBox width="100%" height="100%" styleName="form" paddingTop="4" paddingBottom="4" paddingRight="4" paddingLeft="4" verticalGap="6">			 
			 <mx:HBox width="100%" verticalGap="0" verticalAlign="middle">
			  <mx:Label text="Name"  width="125"  styleName="formLabel"/>
			  <mx:TextInput  text="{chipList.selectedItem.@name}" change="{setDirty()}" width="100%" id="chipName"  maxChars="100" />
			  
			   <mx:CheckBox label="Active" id="isActive"  click="setDirty()"  width="75">
			    <mx:selected>{chipList.selectedItem.@isActive == 'Y' ? true : false}</mx:selected>
			   </mx:CheckBox>
			 
			 </mx:HBox>		 
			 <mx:HBox width="100%" verticalGap="0" verticalAlign="middle">
				 <mx:Text text="Markers per sample"  width="125" styleName="formLabel"/>
				 <mx:TextInput text="{chipList.selectedItem.@markersPerSample}" change="{setDirty()}" width="100%" id="markersPerSample"  maxChars="100"/>
				 
			 </mx:HBox>
			 <mx:HBox width="100%" verticalGap="0" verticalAlign="middle">
				 <mx:Text id="binomialInput" text="Samples per Chip"  width="125" styleName="formLabel"/>
				 <mx:TextInput text="{chipList.selectedItem.@samplesPerChip}" change="{setDirty()}" width="100%" id="samplesPerChip"  maxChars="100"/>
			 </mx:HBox>	
			 <mx:HBox width="100%" verticalGap="0" verticalAlign="middle">
				 <mx:Text text="Cost Per Sample" width="125" styleName="formLabel"/>
				 <mx:TextInput text="{chipList.selectedItem.@costPerSampleDisplay!='0'&amp;&amp;chipList.selectedItem.@costPerSampleDisplay!=''?dollarFormatter.format(chipList.selectedItem.@costPerSampleDisplay):''}" 
							  focusOut="{chipList.selectedItem.@costPerSampleDisplay = costPerSampleDisplay.text; costPerSampleDisplay.text=dollarFormatter.format(costPerSampleDisplay.text);}"
							  change="{setDirty()}" width="100%" id="costPerSampleDisplay" />
			 </mx:HBox>	
			 <mx:HBox width="100%" verticalGap="0" verticalAlign="middle">
				 <mx:Text text="Catalog Number" width="125" styleName="formLabel"/>
				 <mx:TextInput text="{chipList.selectedItem.@catalogNumber}" 
							  change="{setDirty()}" width="100%" id="catalogNumber"/>
			 </mx:HBox>	
		</mx:VBox>
		<mx:ControlBar width="100%" horizontalAlign="right"  paddingTop="0" paddingRight="0" paddingLeft="0" paddingBottom="0">
			<util:DirtyNote id="dirty" />
			<mx:Button id="saveButton" label="Save"  enabled="true"
					   icon="@Embed('../../assets/action_save.gif')" click="checkToSave()" disabledIcon="@Embed(source='../../assets/save_disable.png')">
			</mx:Button>
			<mx:Button label="Close"  click="{closeWindow()}"/>
			
		</mx:ControlBar>
	</mx:VBox>
  </mx:ViewStack>

	
</mx:HDividedBox>
</mx:VBox>
	
</mx:TitleWindow>
