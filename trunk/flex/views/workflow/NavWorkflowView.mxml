<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"     
	xmlns:views="views.*" 
	xmlns:workflow="views.workflow.*"   
	xmlns:util="views.util.*"   backgroundAlpha="0"
	xmlns:WorkflowView="WorkflowView.*" 
	showEffect="{parentApplication.fadeIn}" hideEffect="{parentApplication.fadeOut}" 	
    creationPolicy="all"
	show="init()"  
	label="Workflow" width="100%" height="100%"  >
	
    <mx:Script>
        <![CDATA[ 
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridListData;
			
			import views.util.DataGridAlternatingGroup;
			import views.util.FillButtonClickEvent; 
			
			public var hiSeqFlowCellChannels:int = 0;
			public var miSeqFlowCellChannels:int = 0;
			public var solexaFlowCellChannels:int = 0;
			public var selectedFlowCellNumber:String = null;
			
			private var qcWorklistInit:Boolean = false;
			
			public var codeStepNext:String = null;
			public var codeSequencingPlatform:String = null;

			public function switchTo(codeStep:String):void {
				if (codeStep == 'HSEQPREP') {
					this.navBar.selectedChild = this.hiSeqTab;
					this.detailViews.selectedChild = this.hiSeqViews;
					this.hiSeqViews.selectedChild = this.workflowHiSeqPrepView;
					callLater(onHiSeqWorklistChange);
				} else if (codeStep == 'HSEQASSEM') {
					this.navBar.selectedChild = this.hiSeqTab;
					this.detailViews.selectedChild = this.hiSeqViews;
					this.hiSeqViews.selectedChild = this.workflowHiSeqAssembleView;
					callLater(onHiSeqWorklistChange);
				} else if (codeStep == 'HSEQPIPE') {
					this.navBar.selectedChild = this.hiSeqTab;
					this.detailViews.selectedChild = this.hiSeqViews;
					this.hiSeqViews.selectedChild = this.workflowHiSeqPipelineView;
					callLater(onHiSeqWorklistChange);
				} else if (codeStep == 'MISEQPREP') {
					this.navBar.selectedChild = this.miSeqTab;
					this.detailViews.selectedChild = this.miSeqViews;
					this.miSeqViews.selectedChild = this.workflowMiSeqPrepView;
					callLater(onMiSeqWorklistChange);
				} else if (codeStep == 'MISEQASSEM') {
					this.navBar.selectedChild = this.miSeqTab;
					this.detailViews.selectedChild = this.miSeqViews;
					this.miSeqViews.selectedChild = this.workflowMiSeqAssembleView;
					callLater(onMiSeqWorklistChange);
				} else if (codeStep == 'MISEQPIPE') {
					this.navBar.selectedChild = this.miSeqTab;
					this.detailViews.selectedChild = this.miSeqViews;
					this.miSeqViews.selectedChild = this.workflowMiSeqPipelineView;
					callLater(onMiSeqWorklistChange);
				} 
			}
					
			private function init():void {
				qcWorklistInit = false;
				qcLinkBar.dataProvider = combinedQCTabItems;

				var requestCategory:Object = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.RequestCategory', 'SOLEXA');
				solexaFlowCellChannels = requestCategory.@numberOfChannels;
				
				if (!parentApplication.usesExperimentType("HISEQ")) {
					if (navBar.contains(this.hiSeqTab)) {
						navBar.removeChild(hiSeqTab);
						removeFromQCTabItems("hiseq");
					}
				}
				
				if (!parentApplication.usesKindOfRequestCategory("MISEQ") || !parentApplication.usesExperimentType("HISEQ")) {
					if (navBar.contains(miSeqTab)) {
						navBar.removeChild(miSeqTab);
						removeFromQCTabItems("miseq");
					}
				}
				
				if (!parentApplication.usesKindOfRequestCategory("SOLEXA") || !parentApplication.usesExperimentType("HISEQ")) {
					if (navBar.contains(solexaTab)) {
						navBar.removeChild(solexaTab);
						removeFromQCTabItems("solexa");
					}
				}
				
				if (!parentApplication.usesExperimentType("Microarray")) {
					if (navBar.contains(microarrayTab)) {
						navBar.removeChild(microarrayTab);
						removeFromQCTabItems("microarray");
					}
				}
				
				if (!parentApplication.usesExperimentType("QC")) {
					removeFromQCTabItems("qc");
				}
				
				requestCategory = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.RequestCategory', 'MISEQ');
				miSeqFlowCellChannels = requestCategory.@numberOfChannels;
				
				requestCategory = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.RequestCategory', 'HISEQ');
				hiSeqFlowCellChannels = requestCategory.@numberOfChannels;
				
				if (combinedQCTabItems.length == 2) {
					// removed all but one (plus all) of the tabs. Get rid of All
					navBar.removeChild(combinedQCTab);
					removeFromQCTabItems("all");
				}
				
				if (combinedQCTabItems.length == 1 && combinedQCTabItems[0].code == "qc") {
					// if only have qc no reason for the nav bar.
					showNavHBOX.visible = false;
					hideNav();
				}
				callLater(showView);
			}
			
			private function removeFromQCTabItems(code:String):void {
				for(var n:int = combinedQCTabItems.length-1; n >= 0; n--) {
					var o:Object = combinedQCTabItems[n];
					if (o.code == code) {
						combinedQCTabItems.splice(n, 1);
						break;
					}
				}
			}
			
			public function showView():void {
				if (codeStepNext == null) {
					return;
				}
				
				if (codeStepNext == "ALL") {
					navBar.selectedIndex = 0;
					onCombinedQCTabChange();
					showNav();
					return;
				}
				
				
				hideNav();
				if (codeStepNext == "QC") {
					navBar.selectedIndex = 0;
					onCombinedQCTabChange();
				} else if (codeStepNext == "LABEL") {
					navBar.selectedChild = microarrayTab;
					this.detailViews.selectedChild = this.microarrayViews;
					this.microarrayViews.selectedChild = workflowLabelingView;
					workflowLabelingView.getWorkList.send();
				} else if (codeStepNext == "HYB") {
					navBar.selectedChild = microarrayTab;
					this.detailViews.selectedChild = this.microarrayViews;
					this.microarrayViews.selectedChild = workflowHybView;
					workflowHybView.getWorkList.send();
					
				} else if (codeStepNext == "EXT") {
					navBar.selectedChild = microarrayTab;
					this.detailViews.selectedChild = this.microarrayViews;
					this.microarrayViews.selectedChild = workflowExtractionView;
					workflowExtractionView.getWorkList.send();
					
				} else if (codeStepNext == "FLOWCELL") {
					showFlowCellView();
				}else {
					this.switchTo(codeStepNext);
				}
			}
			
			private function hideNav():void {
				this.navBarBox.width = 12;
				this.showNavLink.visible = true;
				this.hideNavLink.visible = false;
			}
			
			private function showNav():void {
				this.navBarBox.width = 170;				
				this.showNavLink.visible = false;
				this.hideNavLink.visible = true;
			}
			

			
			private function showFlowCellView():void {
				var experimentPlatform:String = null;
				if (this.selectedFlowCellNumber != null) {
					this.flowCellView.selectedFlowCellNumber = this.selectedFlowCellNumber;
					flowCellView.codeSequencingPlatform = codeSequencingPlatform;
					this.flowCellView.lookupField2.text = selectedFlowCellNumber;
					experimentPlatform =  parentApplication.dictionaryManager.getEntryDisplay('hci.gnomex.model.SequencingPlatform', codeSequencingPlatform);
					this.flowCellView.titleLabel.text = experimentPlatform + ' Flow Cells';
					solexaViews.selectedChild=this.blankSolexa;
					detailViews.selectedChild = flowCellView;
					this.flowCellView.clearAndRefreshList2();
					selectedFlowCellNumber = null;
				} else {
					this.flowCellView.codeSequencingPlatform = "MISEQ";
					flowCellView.codeSequencingPlatform = codeSequencingPlatform;
					experimentPlatform =  parentApplication.dictionaryManager.getEntryDisplay('hci.gnomex.model.SequencingPlatform', codeSequencingPlatform);
					this.flowCellView.titleLabel.text = experimentPlatform + ' Flow Cells';
					solexaViews.selectedChild=this.blankSolexa;
					detailViews.selectedChild = flowCellView;
					flowCellView.clearAndRefreshList();	
				}
				
			}
			
			public function checkDirty():void {
			}
			        
	        private function onMicroarrayWorklistChange():void {
	        	if (microarrayViews.selectedChild == workflowLabelingView) {
	        		workflowLabelingView.getWorkList.send();
	        	} else if (microarrayViews.selectedChild  == workflowHybView) {
	        		workflowHybView.getWorkList.send();
	        	} else if (microarrayViews.selectedChild == workflowExtractionView) {
	        		workflowExtractionView.getWorkList.send();
	        	}
				detailViews.selectedIndex = 0;
				detailViews.visible = true;
	
	        }
				
	        private function onSolexaWorklistChange():void {
	        	if (solexaViews.selectedChild == workflowSolexaPrepView) {
	        		workflowSolexaPrepView.codeStepNext = "SEQPREP";
					workflowSolexaPrepView.titleInit();
	        		workflowSolexaPrepView.getWorkList.send();
	        	} else if (solexaViews.selectedChild == workflowSolexaAssembleView) {
	        		workflowSolexaAssembleView.codeStepNext = "SEQASSEM";
	        		workflowSolexaAssembleView.initializeData(solexaFlowCellChannels);
	        		workflowSolexaAssembleView.getWorkList.send();
	        		workflowSolexaAssembleView.getNextWorkList.send();
	        	} else if (solexaViews.selectedChild == workflowSolexaPipelineView) {
	        		workflowSolexaPipelineView.codeStepNext = "SEQPIPE";
					workflowSolexaPipelineView.initTitle();
	        		workflowSolexaPipelineView.getWorkList.send();
	        	} 
				detailViews.selectedIndex = 1;  
				detailViews.visible = true;
	        }
				
			public function onCombinedQCTabChange():void {
				if  (combinedWorkflowQCView == null) {
					return;
				}
				if(!qcWorklistInit) {
					combinedWorkflowQCView.getWorkListQC.send();
					qcWorklistInit = true;
				}
				combinedQCViews.selectedChild = combinedWorkflowQCView;
				var filterType:String = "";
				var windowTitle:String = "Combined ";
				var idx:int = qcLinkBar.selectedIndex;
				if (idx < 0) {
					idx = 0;	
				}
				var linkBarCode:String = combinedQCTabItems[idx].code;
				switch(linkBarCode) {
					case "all":
						filterType = "";
						windowTitle = "Combined ";
						break;
					case "hiseq":
						filterType = "HSEQQC";
						windowTitle = "Illumina HiSeq ";
						break;
					case "miseq":
						filterType = "MISEQQC";
						windowTitle = "Illumina MiSeq ";
						break;
					case "microarray":
						filterType = "MICROARRAY";
						windowTitle = "Microarray ";
						break;
					case "qc":
						filterType = "QC";
						windowTitle = "";
						break;
					case "solexa":
						filterType = "SEQQC";
						windowTitle = "GAIIX ";
						break;
				}
				combinedWorkflowQCView.setWorklistFilter(filterType, windowTitle + "Sample Quality");
				detailViews.selectedChild = combinedQCViews;  
				detailViews.visible = true;			
			}
				
	        private function onHiSeqWorklistChange():void {
	        	if (hiSeqViews.selectedChild == workflowHiSeqPrepView) {
	        		workflowHiSeqPrepView.codeStepNext = "HSEQPREP";
					workflowHiSeqPrepView.titleInit();
	        		workflowHiSeqPrepView.getWorkList.send();
	        	} else if (hiSeqViews.selectedChild == workflowHiSeqAssembleView) {
	        		workflowHiSeqAssembleView.codeStepNext = "HSEQASSEM";
	        		workflowHiSeqAssembleView.initializeData(hiSeqFlowCellChannels);
	        		workflowHiSeqAssembleView.getWorkList.send();
	        		workflowHiSeqAssembleView.getNextWorkList.send();
	        	} else if (hiSeqViews.selectedChild == workflowHiSeqPipelineView) {
	        		workflowHiSeqPipelineView.codeStepNext = "HSEQPIPE";
					workflowHiSeqPipelineView.initTitle();
	        		workflowHiSeqPipelineView.getWorkList.send();
	        	} 
				detailViews.selectedIndex = 2;  
				detailViews.visible = true;
				
	
	        }
	
			private function onMiSeqWorklistChange():void {
				if (miSeqViews.selectedChild == workflowMiSeqPrepView) {
					workflowMiSeqPrepView.codeStepNext = "MISEQPREP";
					workflowMiSeqPrepView.titleInit();
					workflowMiSeqPrepView.getWorkList.send();
				} else if (miSeqViews.selectedChild == workflowMiSeqAssembleView) {
					workflowMiSeqAssembleView.codeStepNext = "MISEQASSEM";		
					workflowMiSeqAssembleView.initializeData(miSeqFlowCellChannels);
					workflowMiSeqAssembleView.getWorkList.send();
					workflowMiSeqAssembleView.getNextWorkList.send();
				} else if (miSeqViews.selectedChild == workflowMiSeqPipelineView) {
					workflowMiSeqPipelineView.codeStepNext = "MISEQPIPE";
					workflowMiSeqPipelineView.initTitle();
					workflowMiSeqPipelineView.getWorkList.send();
				} 
				detailViews.selectedIndex = 3;  
				detailViews.visible = true;
			}   
				
	        private function onTabChange():void {
				if (this.navBar.selectedChild == this.combinedQCTab) {
					this.detailViews.selectedChild=combinedQCViews;
				} else	if (this.navBar.selectedChild == this.solexaTab) {
	        		this.flowCellView.codeSequencingPlatform = "GAIIX";
					this.flowCellView.titleLabel.text = 'Illumina GAIIx Flow Cells';
	        		this.flowCellView.lookupField.text = '';
	        		this.flowCellView.lastThreeMonthsCheckbox.selected = true;
	        		this.flowCellView.toggleDateCheckboxes(3);
	        		microarrayViews.selectedChild=blankMicroarray;
					hiSeqViews.selectedChild=this.blankHiSeq;
					miSeqViews.selectedChild=this.blankMiSeq;
	        		this.detailViews.selectedChild = this.solexaViews;
				} else if (this.navBar.selectedChild == this.hiSeqTab) {
					this.flowCellView.codeSequencingPlatform = "HISEQ";
					this.flowCellView.titleLabel.text = 'Illumina HiSeq 2000 Flow Cells';
					this.flowCellView.lookupField.text = '';
					this.flowCellView.lastThreeMonthsCheckbox.selected = true;
					this.flowCellView.toggleDateCheckboxes(3);
					solexaViews.selectedChild=blankSolexa;
					microarrayViews.selectedChild=blankMicroarray;
					miSeqViews.selectedChild=this.blankMiSeq;
					this.detailViews.selectedChild = this.hiSeqViews;
				} else if (this.navBar.selectedChild == this.miSeqTab) {
					this.flowCellView.codeSequencingPlatform = "MISEQ";
					this.flowCellView.titleLabel.text = 'Illumina MiSeq Flow Cells';
					this.flowCellView.lookupField.text = '';
					this.flowCellView.lastThreeMonthsCheckbox.selected = true;
					this.flowCellView.toggleDateCheckboxes(3);
					solexaViews.selectedChild=blankSolexa;
					microarrayViews.selectedChild=blankMicroarray;
					hiSeqViews.selectedChild=this.blankHiSeq;
					this.detailViews.selectedChild = this.miSeqViews;
	        	} else {
		        	solexaViews.selectedChild=blankSolexa;
					hiSeqViews.selectedChild=this.blankHiSeq;
					miSeqViews.selectedChild=this.blankMiSeq;
	    	    	this.detailViews.selectedChild = this.microarrayViews;
	        	}
	        }
        ]]>
    </mx:Script>
	
	<mx:Array id="combinedQCTabItems">
		<mx:Object label="All" code="all"/>
		
		<mx:Object label="Illumina HiSeq" code="hiseq"
				   />
		<mx:Object label="Illumina MiSeq" code="miseq"
				    />
		<mx:Object label="GAIIX" code="solexa"
				   />
		<mx:Object label="Microarray" code="microarray"
				   />
		<mx:Object label="Sample Quality" code="qc"
				    />
	</mx:Array>
	
<mx:VBox width="100%" height="100%" verticalGap="0">

	
	<mx:HBox width="100%" paddingTop="0" paddingBottom="0" paddingLeft="0" 
			 paddingRight="0" height="100%" horizontalGap="2">
		<mx:VBox id="navBarBox" verticalGap="0" width="170" height="100%" >
			<mx:HBox width="100%" fontWeight="bold" paddingTop="0" paddingRight="0" paddingLeft="0" paddingBottom="0" height="15" id="showNavHBOX">
				<mx:LinkButton id="showNavLink" visible="false" click="{showNav()}" 
							   textDecoration="none" 
							   horizontalGap="0" 
	 						   paddingLeft="0" paddingRight="0" 
							   paddingTop="0" paddingBottom="0" 
							   toolTip="Expand navigation panel"
							   icon="@Embed(source='../../assets/arrow_right.gif')" width="15" height="15"/>
				
				<mx:Spacer width="100%"/>
				<mx:LinkButton id="hideNavLink" click="{hideNav()}" visible="true" 
							   textDecoration="none" 
							   horizontalGap="0" 
							   paddingLeft="0" 
							   paddingTop="0" paddingBottom="0" paddingRight="0" 
							   toolTip="Minimize navigation panel" 
							   icon="@Embed(source='../../assets/arrow_left.gif')" width="15" height="15"/>
			</mx:HBox>

			<mx:TabNavigator id="navBar" styleName="navTabNavigator" visible="{hideNavLink.visible ? true : false}" width="100%"  height="100%" change="onTabChange()" creationPolicy="all">
				<mx:Canvas id="combinedQCTab" width="100%" height="100%" icon="{parentApplication.iconQC}" toolTip="QC Worklist" fontSize="12">
					<mx:VBox  styleName="panelTabBody" horizontalAlign="center" width="100%" height="100%" paddingTop="4">
						<mx:Text text="QC Worklist" width="100%" fontWeight="normal" color="#000000" paddingTop="4" paddingLeft="2"/>
						<mx:LinkBar id="qcLinkBar" dataProvider="" iconField="ico"  styleName="navLinkBar" textDecoration="underline"  direction="vertical"   itemClick="onCombinedQCTabChange()"  height="202"  width="116" paddingTop="4" separatorWidth="0" separatorColor="#FFFFFF">
						</mx:LinkBar> 
					</mx:VBox>
				</mx:Canvas>			
				<mx:Canvas id="hiSeqTab" width="100%" height="100%" icon="{parentApplication.iconHiSeq}" toolTip="HiSeq workflow">
					<mx:VBox  styleName="panelTabBody" horizontalAlign="center" width="100%" height="100%" paddingTop="4">
						<mx:Text text="HiSeq" width="100%" fontWeight="normal" color="#000000" paddingTop="4" paddingLeft="2"/>

						<mx:LinkBar dataProvider="hiSeqViews"  styleName="navLinkBar" textDecoration="underline"  direction="vertical"   itemClick="onHiSeqWorklistChange()"  height="202"  width="116" paddingTop="4" fontSize="11" separatorWidth="0" separatorColor="#FFFFFF">
						</mx:LinkBar> 
						
						<mx:Spacer height="20"/>			  		
						<mx:Spacer height="10"/>			  		
						<mx:LinkButton label="Flow Cells"  styleName="navLinkBar"  click="{hiSeqViews.selectedChild=this.blankHiSeq;detailViews.selectedChild = flowCellView;flowCellView.clearAndRefreshList();}" fontSize="12"/>
					</mx:VBox>
				</mx:Canvas>
				<mx:Canvas id="miSeqTab" width="100%" height="100%" icon="{parentApplication.iconMiSeq}" toolTip="MiSeq workflow" fontSize="11">
					<mx:VBox  styleName="panelTabBody" horizontalAlign="center" width="100%" height="100%" paddingTop="4">
						<mx:Text text="MiSeq" width="100%" fontWeight="normal" color="#000000" paddingTop="4" paddingLeft="2"/>

						<mx:LinkBar dataProvider="miSeqViews"  styleName="navLinkBar" textDecoration="underline"  direction="vertical"   itemClick="onMiSeqWorklistChange()"  height="202"  width="116" paddingTop="4" fontSize="12" separatorColor="#FFFFFF" separatorWidth="0">
						</mx:LinkBar> 
						
						<mx:Spacer height="20"/>			  		
						<mx:Spacer height="10"/>			  		
						<mx:LinkButton label="Flow Cells"  styleName="navLinkBar"  click="{miSeqViews.selectedChild=this.blankMiSeq;detailViews.selectedChild = flowCellView;flowCellView.clearAndRefreshList();}" fontSize="12"/>
					</mx:VBox>
				</mx:Canvas>			
				<mx:Canvas id="microarrayTab" width="100%" height="100%"  icon="{parentApplication.iconMicroarray}" toolTip="Microarray workflow" fontSize="11"> 
					<mx:VBox styleName="panelTabBody" horizontalAlign="center" width="100%" height="100%" paddingTop="2" paddingRight="2" paddingLeft="2" paddingBottom="4">
				  		<mx:Text text="Microarray" width="100%" fontWeight="normal" color="#000000" paddingTop="4"/>
				  		
				  		<mx:LinkBar dataProvider="microarrayViews"   styleName="navLinkBar" direction="vertical"   selectedIndex="3"  itemClick="onMicroarrayWorklistChange()"  height="131"  fontSize="12" separatorWidth="0" separatorColor="#FFFFFF">
				  		</mx:LinkBar>
					
					</mx:VBox>
				</mx:Canvas >
				<mx:Canvas id="solexaTab" width="100%" height="100%" icon="{parentApplication.iconSolexa}" toolTip="GAIIx workflow" visible="true">
					<mx:VBox  styleName="panelTabBody" horizontalAlign="center" width="100%" height="100%" paddingTop="4">
						<mx:Text text="GAIIx" width="100%" fontWeight="normal" color="#000000" paddingTop="4" paddingLeft="2"/>
						
						<mx:LinkBar dataProvider="solexaViews"  styleName="navLinkBar" textDecoration="underline"  direction="vertical"   itemClick="onSolexaWorklistChange()"  height="202"  width="116" paddingTop="4"  separatorColor="#FFFFFF" separatorWidth="0">
						</mx:LinkBar>  
						
						<mx:Spacer height="20"/>			  		
						<mx:Spacer height="10"/>			  		
						<mx:LinkButton label="Flow Cells"  styleName="navLinkBar"  click="{showFlowCellView()}" fontSize="12"/>
	
					</mx:VBox>
				</mx:Canvas>			
			</mx:TabNavigator>
			</mx:VBox>
  
			
	
		<mx:ViewStack id="detailViews" width="100%" height="100%" creationPolicy="all">
			<mx:ViewStack id="microarrayViews"  visible="true" height="100%" width="100%" creationPolicy="all" >

	           <workflow:WorkflowLabelingView label="Labeling" id="workflowLabelingView" icon="{parentApplication.iconLabeling}"/>
	    
	           <workflow:WorkflowHybView label="Hybridization" id="workflowHybView" icon="{parentApplication.iconHyb}"/>
	
	           <workflow:WorkflowExtractionView label="Scan / FE" id="workflowExtractionView" icon="{parentApplication.iconExtraction}"/>
               
               <mx:Canvas id="blankMicroarray" label=""> 
               </mx:Canvas>
                
            </mx:ViewStack>
			<mx:ViewStack id="solexaViews"  visible="true" height="100%" width="100%" selectedIndex="3" creationPolicy="all"  >
			
			   <workflow:WorkflowSolexaPrepView label="Lib Prep" id="workflowSolexaPrepView" icon="{parentApplication.iconLibPrep}"/>

			   <workflow:WorkflowSolexaAssembleView label="Seq Run Setup" id="workflowSolexaAssembleView" icon="{parentApplication.iconSolexa}"/> 	           

			   <workflow:WorkflowSolexaPipelineView label="Data Pipeline" id="workflowSolexaPipelineView" icon="{parentApplication.iconPipeline}"/> 	           
			    
			   <mx:Canvas id="blankSolexa" label=""/>
			   
			</mx:ViewStack>
		   <mx:ViewStack id="hiSeqViews"  visible="true" height="100%" width="100%" selectedIndex="3" creationPolicy="all" >
			
			   <workflow:WorkflowSolexaPrepView label="Lib Prep" id="workflowHiSeqPrepView"  icon="{parentApplication.iconLibPrep}"/>

			   <workflow:WorkflowSolexaAssembleView label="Seq Run Setup" id="workflowHiSeqAssembleView" icon="{parentApplication.iconSolexa}"/> 	           

			   <workflow:WorkflowSolexaPipelineView label="Data Pipeline" id="workflowHiSeqPipelineView" icon="{parentApplication.iconPipeline}"/> 	           
			    
			   <mx:Canvas id="blankHiSeq" label=""/>
			   
			</mx:ViewStack>
			<mx:ViewStack id="miSeqViews"  visible="true" height="100%" width="100%" selectedIndex="3" creationPolicy="all" >
				
				<workflow:WorkflowSolexaPrepView label="Lib Prep" id="workflowMiSeqPrepView" icon="{parentApplication.iconLibPrep}"/>
				
				<workflow:WorkflowSolexaAssembleView label="Seq Run Setup" id="workflowMiSeqAssembleView" icon="{parentApplication.iconSolexa}"/> 	           
				
				<workflow:WorkflowSolexaPipelineView label="Data Pipeline" id="workflowMiSeqPipelineView" icon="{parentApplication.iconPipeline}"/> 	           
				
				<mx:Canvas id="blankMiSeq" label=""/>
				
			</mx:ViewStack>	
			<mx:ViewStack id="combinedQCViews"  visible="true" height="100%" width="100%" selectedIndex="1" creationPolicy="all" >
				
				<workflow:WorkflowQCView id="combinedWorkflowQCView" icon="{parentApplication.iconQC}"/>
				
				<mx:Canvas id="blankCombinedQCView" label=""/>
				
			</mx:ViewStack>	
			<workflow:FlowCellView id="flowCellView"/>
			
			
		</mx:ViewStack>
		
	
	</mx:HBox>
	
  		
</mx:VBox>	
    
</mx:Canvas>
