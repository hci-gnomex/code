<?xml version="1.0" encoding="utf-8"?>  
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:views="views.*" >



   <mx:HTTPService  
    id="saveVisibility" 
    url="SaveVisibilityAnalysis.gx" 
    destination="saveVisibility"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onSaveVisibility(event)"
	fault="parentApplication.onFailHttpRequest('Failed to save visibility', event)"
    method="POST"
    useProxy="false">
  </mx:HTTPService>
 

 <mx:Script>
 <![CDATA[
 	import mx.controls.Alert;
 	import mx.collections.XMLListCollection; 
 	import mx.rpc.events.ResultEvent;
 	import views.renderers.ComboBoxVisibility;
 	import mx.events.CloseEvent;
 	import hci.flex.renderers.ComboBoxDictionary;
 	import hci.flex.renderers.LabelDictionary;

 	
 	private var broadestCodeVisibility:String = "MEM";
 	
 	public function checkSecurity():void {
		parentDocument.saveVisibilityButton.enabled = false;  
 		for each (var a:Object in parentDocument.browseList) {
 			if (a.@canUpdateVisibility == "Y") {
 				parentDocument.saveVisibilityButton.enabled = true;
 				break; 
 			}
 		} 	
 	}
			

 	private function getRequestKind(item:Object, col:int):String {
		var de:XMLList = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.RequestCategory', item.@codeRequestCategory);
    	if (de.length() == 1) {
	    	return de[0].@display;
    	} else {
    		return "";
    	}
	}
	
	private function getVisibility(item:Object, col:DataGridColumn):String {
		var de:XMLList = parentApplication.dictionaryManager.getEntry('hci.gnomex.model.Visibility', item.@codeVisibility);
    	if (de.length() == 1) {
	    	return de[0].@display;
    	} else {
    		return "";
    	}
	}
	public function save():void {
		var dirtyAnalysisItems:XMLList = parentDocument.parentDocument.browseTree.selectedItem..Analysis.(@isDirty == 'Y');        	
    	var dirtyAnalysisList:XMLListCollection = new XMLListCollection(dirtyAnalysisItems);
    	

    	var params:Object = new Object();
    	params.visibilityXMLString = dirtyAnalysisList.toXMLString();
    	saveVisibility.send(params);
    	
	}


	
	public function saveImpl():void {

	}
	
	private function onSaveVisibility(event:ResultEvent):void {
		if (saveVisibility.lastResult.name() == "SUCCESS" ||
		    saveVisibility.lastResult.name() == "AnalysisVisibilityList") {
    		parentDocument.parentDocument.refreshAnalysis();
    		parentDocument.dirtyVisibility.resetDirty();
    	} else {
    		mx.controls.Alert.show(saveVisibility.lastResult..ACTMESSAGE.@TEXT);
    	}
	}
	
	
	
	                
    public function onEdit():void {
    	visibilityGrid.selectedItem.@isDirty = "Y";
    	parentDocument.dirtyVisibility.setDirty();
    }
    
    
    
    
    
    
    
 ]]>
 </mx:Script>
	
	<mx:VBox  width="100%" height="100%"   paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
	       <mx:HBox width="100%" horizontalAlign="left">
					<mx:Label text="{'Visibility for ' + parentDocument.parentDocument.browseTree.selectedItem.@label}"/>
	                 
	       </mx:HBox>
	       <mx:DataGrid  id="visibilityGrid" 
	       	dataProvider="{parentDocument.browseList}" 
	       	 width="100%" height="100%" 
			 editable="true"
	       	 itemEditEnd="onEdit()">
	         <mx:columns>
	            <mx:DataGridColumn width="14" headerText="#"  editable="false" sortCompareFunction="AnalysisBrowseView.sortAnalysisNumber">
	                <mx:itemRenderer>
	                    <mx:Component >
	                        <mx:HBox   horizontalScrollPolicy="off" horizontalGap="0"  paddingLeft="4"  >
			                    <mx:Image id="experimentImage"  
			                     	source="{parentApplication.iconAnalysis}" >
								</mx:Image>
	                           <mx:Label id="number" text="{data.@number}">
	                           </mx:Label>
	                        </mx:HBox>
	                    </mx:Component>
	                </mx:itemRenderer> 
	            </mx:DataGridColumn> 
		       	<mx:DataGridColumn headerText="Name" width="40" dataField="@name" editable="false"/>
		       	<mx:DataGridColumn headerText="Date" width="20" dataField="@createDateDisplay" editable="false"/>
		       	<mx:DataGridColumn headerText="Analysis Type" width="25"  editable="false" sortCompareFunction="parentApplication.navAnalysisView.browseView.sortAnalysisType"
					itemRenderer="{LabelDictionary.create(parentApplication.dictionaryManager, 'hci.gnomex.model.AnalysisType', '@idAnalysisType')}"/>
		       	<mx:DataGridColumn headerText="Organism" width="25"   editable="false" sortCompareFunction="parentApplication.navAnalysisView.browseView.sortOrganism"
					itemRenderer="{LabelDictionary.create(parentApplication.dictionaryManager, 'hci.gnomex.model.Organism',  '@idOrganism')}"/>
		       	<mx:DataGridColumn headerText="Description" width="40" dataField="@description"  editable="false"/>
		       	<mx:DataGridColumn headerText="Visibility"  width="40" dataField="@codeVisibility" 
					editorDataField="value" sortable="false" editable="true" 
					rendererIsEditor="false" 
					labelFunction="getVisibility"        
					itemEditor="{ComboBoxVisibility.create(parentApplication.dictionaryManager)}"/>

	         </mx:columns>
	       </mx:DataGrid>
	
	     
	</mx:VBox>
	  
	



</mx:Canvas>


