<?xml version="1.0" encoding="utf-8"?>
<mx:VBox styleName="panelBox"  xmlns:mx="http://www.adobe.com/2006/mxml" 
         width="100%" height="100%" 
         xmlns:util="views.util.*" show="init()" >
	<mx:HBox verticalAlign="middle" id="hbox1">
		<mx:HBox horizontalGap="0">
			<mx:Image source="{iconName}"/>
			<mx:Label id="titleLabel" styleName="titleLabel" text="{getRequest.lastResult.Request.@number}"/>
		</mx:HBox>
		<mx:LinkButton label="Back" click="{parentDocument.theViews.selectedIndex = 0}" textDecoration="underline" icon="@Embed(source='../../assets/arrow_left.png')"/>
	</mx:HBox>
  
  
  <mx:HTTPService  
    id="getRequest" 
    url="GetRequest.gx"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetRequest(event)"
    fault="parentApplication.onFailHttpRequest('Failed to get request', event)"
    method="POST"
    useProxy="false">
    <mx:request xmlns="">
      <idRequest>{selectedIdRequest}</idRequest>
    </mx:request>
  </mx:HTTPService> 
  
  <mx:Script> 
    <![CDATA[
      import flash.events.MouseEvent;
      
      import hci.flex.controls.DropdownLabel;
      
      import mx.charts.ChartItem;
      import mx.charts.HitData;
      import mx.charts.chartClasses.IAxis;
      import mx.charts.chartClasses.Series;
      import mx.charts.series.items.ColumnSeriesItem;
      import mx.collections.ArrayCollection;
      import mx.controls.Alert;
      import mx.controls.Button;
      import mx.controls.dataGridClasses.DataGridColumn;
      import mx.controls.sliderClasses.Slider;
      import mx.core.Container;
      import mx.core.IDataRenderer;
      import mx.events.CloseEvent;
      import mx.events.CollectionEvent;
      import mx.events.CollectionEventKind;
      import mx.events.FlexEvent;
      import mx.events.ItemClickEvent;
      import mx.events.PropertyChangeEvent;
      import mx.events.SliderEvent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.ResultEvent;
      import mx.utils.StringUtil;
      
      
      
      [Bindable]
      public var selectedIdRequest:int;
      [Bindable]
      public var selectedRequest:Object;
		
	  [Bindable]
	  private var iconName:String;
            
      private function init():void {
        if (selectedRequest != null){
          selectedIdRequest = selectedRequest.@idRequest;
          this.getRequest.send();
        }
        
        // Add event listeners for each accordion's header
        var head1:Button = Button(accordion1.getHeaderAt(0));
        head1.addEventListener(MouseEvent.CLICK, headerClickHandler);
        
        var head2:Button = Button(accordion2.getHeaderAt(0));
        head2.addEventListener(MouseEvent.CLICK, headerClickHandler);
        
        var head3:Button = Button(accordion3.getHeaderAt(0));
        head3.addEventListener(MouseEvent.CLICK, headerClickHandler);
                
        
      }
            
      // This allows a click on a header to close that section
      private function headerClickHandler(event:MouseEvent):void
      {
        var header:Button = Button(event.target);
        var headerChild:Container = Container(IDataRenderer(header).data);
        if (headerChild == accordion1.selectedChild)
        {
          accordion1.selectedIndex = 1;
        }
        if (headerChild == accordion2.selectedChild)
        {
          accordion2.selectedIndex = 1;
        }
        if (headerChild == accordion3.selectedChild)
        {
          accordion3.selectedIndex = 1;
        }
      }
      
      private function onGetRequest(event:ResultEvent):void {
        if (event.result.name() == "OpenRequestList") {
			var reqCat:String = getRequest.lastResult.Request.@codeRequestCategory;
			iconName = getRequest.lastResult.Request.@icon;
			if ( reqCat == 'CAPSEQ' ) {
				currentState = stateCapSeq.name;
			} else if ( reqCat == 'FRAGANAL' ) {
				currentState = stateFrag.name;
			} else if ( reqCat == 'MITSEQ' ) {
				currentState = stateMito.name;
			} else if ( reqCat == 'CHERRYPICK' ) {
				currentState = stateCherry.name;
			}
          
          
        } else {
          Alert.show(event.result..ERROR.@message.toString(), "Error getting request");
        } 
      }
      
	  public function getSamplesGridRowNumber(item:Object,col:int):String
	  {
		  if (samplesList!= null) {
			  var x:int = samplesList.getItemIndex(item) + 1;
			  return String(x);     		
		  } else {
			  return "";
		  }
	  }

	  public function createCherryPickingFile():void {	
		  var runWindow:CherryPickingFileWindow = CherryPickingFileWindow(mx.managers.PopUpManager.createPopUp(this, CherryPickingFileWindow, true));
		  mx.managers.PopUpManager.centerPopUp(runWindow);
		  runWindow.transferVol.setFocus();
		  runWindow.idRequest = getRequest.lastResult.Request.@idRequest;
	  }
		      
    ]]>
  </mx:Script>    	
  
  <mx:XMLListCollection id="samplesList" source="{getRequest.lastResult..Sample}" />
	
  <mx:VBox width="100%" height="100%" styleName="form" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"  minHeight="0" verticalScrollPolicy="auto">
    <mx:Accordion width="100%"   resizeToContent="true" id="accordion1">
      <mx:Canvas label="Client" width="100%" id="dataGridAccordion" minHeight="0" >
        <mx:Grid  horizontalGap="1" verticalGap="1" minHeight="0"  paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" id="grid1">
          
          <mx:GridRow >
            <mx:GridItem horizontalAlign="right" paddingRight="5">
              <mx:Label text="Customer Name" fontWeight="bold"/>
            </mx:GridItem>
            <mx:GridItem width="250">
              <mx:Label text="{getRequest.lastResult.Request.@ownerName}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="right" paddingRight="5">
              <mx:Label text="Institution" fontWeight="bold"/>
            </mx:GridItem>
            <mx:GridItem width="250" >
              <mx:Label text="{getRequest.lastResult.Request.@submitterInstitution}"/>
            </mx:GridItem>
          </mx:GridRow>
          
          <mx:GridRow >
            <mx:GridItem horizontalAlign="right" paddingRight="5">
              <mx:Label text="Contact Phone" fontWeight="bold"/>
            </mx:GridItem>
            <mx:GridItem >
              <mx:Label text="{getRequest.lastResult.Request.@submitterPhone}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="right" paddingRight="5">
              <mx:Label text="Contact Email" fontWeight="bold"/>
            </mx:GridItem>
            <mx:GridItem >
              <mx:Label text="{getRequest.lastResult.Request.@submitterEmail}"/>
            </mx:GridItem>
          </mx:GridRow>
          
          
        </mx:Grid>
      </mx:Canvas>
      
      <mx:Canvas  width="100%" height="0" minHeight="0" />
      
    </mx:Accordion>
    
    <mx:Accordion width="100%" resizeToContent="true"  id="accordion2">
      <mx:Canvas label="Order" width="100%" minHeight="0">
        
			<mx:Grid  minHeight="0"  horizontalGap="1" verticalGap="1" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" id="grid2">
				
				<mx:GridRow >
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Number" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem >
						<mx:Label text="{getRequest.lastResult.Request.@number}"/>
					</mx:GridItem>
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Date Submitted" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem width="250" >
						<mx:Label text="{getRequest.lastResult.Request.@createDate}"/>
					</mx:GridItem>
				</mx:GridRow>
				
				<mx:GridRow >
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Label" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem width="250">
						<mx:Label text="{getRequest.lastResult.Request.@name}"/>
					</mx:GridItem>
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Order Type" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem >
						<mx:Label text="{getRequest.lastResult.Request.@requestCategory}"/>
					</mx:GridItem>
				</mx:GridRow>
				
				<mx:GridRow  > 
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Status" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem >
						<mx:Label text="{getRequest.lastResult.Request.@requestStatus}"/>
					</mx:GridItem>
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Lab Group" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem >
						<mx:Label text="{getRequest.lastResult.Request.@labName}"/>
					</mx:GridItem>
				</mx:GridRow>
				
				<mx:GridRow >
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Description" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem >
						<mx:Label text="{getRequest.lastResult.Request.@description}"/>
					</mx:GridItem>
					<mx:GridItem horizontalAlign="right" paddingRight="5">
						<mx:Label text="Core Instructions" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem  >
						<mx:Label text="{getRequest.lastResult.Request.@corePrepInstructions}"/>
					</mx:GridItem>
				</mx:GridRow>
				
				
			</mx:Grid>
      </mx:Canvas>
      
      <mx:Canvas  width="100%" height="0" minHeight="0"/>
      
    </mx:Accordion>
    
    
    <mx:Accordion width="100%"   resizeToContent="true" id="accordion3">
      <mx:Canvas label="Samples" width="100%" id="sequenceAccordion" minHeight="0"  >
      
			  <mx:DataGrid dataProvider="{samplesList}" rowCount="{samplesList.length}" selectable="false" width="100%">
			  	<mx:columns>
					<mx:DataGridColumn width="40" labelFunction="getSamplesGridRowNumber"/>
			  		<mx:DataGridColumn headerText="Sample" width="100" dataField="@name" />
					<mx:DataGridColumn headerText="Source Position" />
			  		<mx:DataGridColumn headerText="Source Plate" />
					<mx:DataGridColumn headerText="Source Well" />
					<mx:DataGridColumn headerText="Assay ID" />
					<mx:DataGridColumn headerText="Comments" />
			  	</mx:columns>
			  </mx:DataGrid>
      </mx:Canvas>
      
      <mx:Canvas  width="100%" height="0" minHeight="0" />
      
    </mx:Accordion>
    
  </mx:VBox>
  
	
	<mx:states>
		<mx:State name="stateFrag" id="stateFrag">
		</mx:State>
		<mx:State name="stateCapSeq" id="stateCapSeq">
		</mx:State>
		<mx:State name="stateCherry" id="stateCherry">
			<mx:AddChild relativeTo="{hbox1}" position="lastChild">
				<mx:LinkButton label="Create Cherry Picking File" 
					id="cherryPickLink" 
					click="{createCherryPickingFile()}" textDecoration="underline" icon="@Embed(source='../../assets/cog.png')"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="stateMito" id="stateMito">
			<mx:SetStyle target="{hbox1}" name="horizontalGap" value="20"/>
			<mx:SetStyle name="verticalGap" value="0"/>
			<mx:SetStyle target="{grid1}" name="paddingBottom" value="0"/>
			<mx:SetStyle target="{grid1}" name="paddingLeft" value="4"/>
			<mx:SetStyle target="{grid1}" name="paddingRight" value="4"/>
			<mx:SetStyle target="{grid1}" name="paddingTop" value="0"/>
			<mx:SetStyle target="{grid2}" name="paddingBottom" value="0"/>
			<mx:SetStyle target="{grid2}" name="paddingLeft" value="4"/>
			<mx:SetStyle target="{grid2}" name="paddingRight" value="4"/>
			<mx:SetStyle target="{grid2}" name="paddingTop" value="0"/>
			<mx:SetStyle target="{grid1}" name="verticalGap" value="1"/>
			<mx:SetStyle target="{grid1}" name="horizontalGap" value="1"/>
			<mx:SetStyle target="{grid2}" name="horizontalGap" value="1"/>
			<mx:SetStyle target="{grid2}" name="verticalGap" value="1"/>
			<mx:SetStyle name="paddingTop" value="1"/>
		</mx:State>
	</mx:states>
	
	
</mx:VBox>
