<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="views.util.*"
				layout="vertical" 
				title="Edit Sequencing Option" width="650" height="600" paddingTop="4" verticalScrollPolicy="off" paddingRight="4" paddingLeft="4" paddingBottom="4"
				horizontalScrollPolicy="off">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;

			[Bindable]
			private var state:ExperimentPlatformState = null;
			
			[Bindable]
			private var selectedItem:Object;
			
			public function init(state:ExperimentPlatformState, selectedItem:Object):void {
				this.state = state;
				this.selectedItem = selectedItem;
				this.seqOptionName.setFocus();
				
				initValues();
			}
			
			private function initValues():void {
				seqOptionName.text = selectedItem.@name;
				for each (var rm:Object in state.runModeOptions) {
					if (rm.@value == selectedItem.@isCustom) {
						runModeCombo.selectedItem = rm;
						break;
					}
				}
				sortOrderText.text = selectedItem.@sortOrder;
				for each (var c:Object in state.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.NumberSequencingCycles').DictionaryEntry) {
					if (c.@value == selectedItem.@idNumberSequencingCycles) {
						numberCyclesCombo.selectedItem = c;
					}
				}
				for each (var rt:Object in state.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SeqRunType').DictionaryEntry) {
					if (rt.@value == selectedItem.@idSeqRunType) {
						seqRunTypeCombo.selectedItem = rt;
					}
				}
			}
			
			private function save():void {
				if (seqOptionName.text == null || seqOptionName.text == "" 
					|| runModeCombo.selectedItem == null || runModeCombo.selectedItem.@value == "" 
				    || numberCyclesCombo.selectedItem == null || numberCyclesCombo.selectedItem.@value == ""
				    || seqRunTypeCombo.selectedItem == null || seqRunTypeCombo.selectedItem.@value == "") {
					Alert.show("Please enter name, run mode, number of cycles and Seq Run Type before saving.");
					return;
				}
				if (state.requestCategory.@hasPriceSheet == 'Y') {
					var evt:ValidationResultEvent = priceInternalValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceInternalLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
					evt = priceExternalAcademicValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceExternalAcademicLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
					evt = priceExternalCommercialValidator.validate(null, true);
					if (evt.type == ValidationResultEvent.INVALID) {
						Alert.show(evt.message, "Error On " + priceExternalCommercialLabel.text, Alert.OK, null, null, parentApplication.iconError);
						return;
					}
				}
				
				selectedItem.@name = seqOptionName.text;
				selectedItem.@isActive = activeCheckbox.selected ? 'Y' : 'N';
				selectedItem.@isCustom = runModeCombo.selectedItem.@value;
				selectedItem.@sortOrder = sortOrderText.text;
				selectedItem.@idSeqRunType = seqRunTypeCombo.selectedItem.@value;
				selectedItem.@idNumberSequencingCycles = numberCyclesCombo.selectedItem.@value;
				
				if (state.requestCategory.@hasPriceSheet == 'Y') {
					selectedItem.@unitPriceInternal = this.priceInternalText.text;
					selectedItem.@unitPriceExternalAcademic = this.priceExternalAcademicText.text;
					selectedItem.@unitPriceExternalCommercial = this.priceExternalCommercialText.text;
				}
				
				if (dirty.isDirty()) {
					state.dirty.setDirty();
				}
				dirty.resetDirty();
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	<mx:CurrencyValidator id="priceInternalValidator" source="{this.priceInternalText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="true"/>
	<mx:CurrencyValidator id="priceExternalAcademicValidator" source="{this.priceExternalAcademicText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="true"/>
	<mx:CurrencyValidator id="priceExternalCommercialValidator" source="{this.priceExternalCommercialText}" property="text"	precision="2" minValue="0" maxValue="99999.99" required="true"/>

	<mx:VBox width="100%" height="100%" styleName="form" paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4">
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Name" styleName="formLabel" width="100"/>
			<mx:TextInput id="seqOptionName" width="400" backgroundColor="#FFFFFF" borderColor="#898F93" change="dirty.setDirty()" />
			<mx:Spacer width="20" />
			<mx:CheckBox id="activeCheckbox" selected="{selectedItem.@isActive=='Y'}" label="Active" change="dirty.setDirty()" />
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Run Mode" styleName="formLabel" width="100"/>
			<mx:ComboBox dataProvider="{state.runModeOptions}" id="runModeCombo" width="200" change="dirty.setDirty()" labelField="@display" />					    		
		</mx:HBox>
		
		<mx:VBox width="100%" verticalGap="0" enabled="{state.requestCategory.@hasPriceSheet == 'Y'}">
			<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="0">
				<mx:Text text="Billing" styleName="formLabel" paddingBottom="0"/>
				<mx:Text text="Please associate the experiment platform with a price sheet." paddingBottom="0" 
						 styleName="warningLabelSevere"
						 visible="{state.requestCategory.@hasPriceSheet != 'Y'}" includeInLayout="{state.requestCategory.@hasPriceSheet != 'Y'}" />
			</mx:HBox>
			<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="0">
				<mx:VBox width="100%" paddingTop="0" verticalGap="0">
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0">
						<mx:Label text="$" paddingRight="0" textAlign="right" width="100" />
						<mx:TextInput id="priceInternalText" text="{selectedItem.@unitPriceInternal == '' ? '0.00' : selectedItem.@unitPriceInternal}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceInternalLabel" text="Internal Pricing" />
					</mx:HBox>
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0">
						<mx:Label text="$" paddingRight="0" textAlign="right" width="100" />
						<mx:TextInput id="priceExternalAcademicText" text="{selectedItem.@unitPriceExternalAcademic == '' ? '0.00' : selectedItem.@unitPriceExternalAcademic}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceExternalAcademicLabel" text="External Academic Pricing" />
					</mx:HBox>
					<mx:HBox width="100%" horizontalGap="0" verticalAlign="middle" paddingTop="0">
						<mx:Label text="$" paddingRight="0" textAlign="right" width="100" />
						<mx:TextInput id="priceExternalCommercialText" text="{selectedItem.@unitPriceExternalCommercial == '' ? '0.00' : selectedItem.@unitPriceExternalCommercial}" restrict="0-9." paddingLeft="0" change="dirty.setDirty()" />
						<mx:Spacer width="5" />
						<mx:Label id="priceExternalCommercialLabel" text="External Commercial Pricing" />
					</mx:HBox>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>

		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Sort Order" styleName="formLabel" width="100" />
			<mx:TextInput id='sortOrderText' restrict="0-9" maxChars="2" editable="true" change="dirty.setDirty()"/>
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="# Cycles" styleName="formLabel" width="100"/>
			<mx:ComboBox dataProvider="{state.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.NumberSequencingCycles').DictionaryEntry}" id="numberCyclesCombo"
						 width="90" labelField="@display" change="dirty.setDirty()" />					    		
		</mx:HBox>
		<mx:HBox width="100%" horizontalGap="2" verticalAlign="middle" paddingTop="4">
			<mx:Text text="Seq Run Type" styleName="formLabel" width="100"/>
			<mx:ComboBox dataProvider="{state.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.SeqRunType').DictionaryEntry}" id="seqRunTypeCombo"
						 width="200" labelField="@display" change="dirty.setDirty()" />					    		
		</mx:HBox>
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Spacer width="100%" />
		<util:DirtyNote id="dirty" />
		<mx:Button label="Apply" id="saveButton" click="save()" icon="@Embed(source='../../assets/save.png')" 
				   disabledIcon="@Embed(source='../../assets/save_disable.png')"/>
		<mx:Button label="Cancel" click="{mx.managers.PopUpManager.removePopUp(this)}"/>
	</mx:ControlBar>
	
</mx:TitleWindow>
