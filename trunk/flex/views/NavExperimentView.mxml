<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"     
	xmlns:RequestsView="RequestsView.*" 
	label="Experiments" width="100%" height="100%" 
	xmlns:views="views.*" cornerRadius="10" >


  <mx:HTTPService  
    id="getProjectRequestList" 
    url="http://localhost/gnomex/GetProjectRequestList.gx"
    destination="getProjectRequestList"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetProjectRequestList(event)"
    method="POST"
    useProxy="false">
    <mx:request>
            <idLab>{browseLabCombo.selectedItem.@idLab}</idLab>
            <showSamples>N</showSamples>
            <showCategory>N</showCategory>
    </mx:request>
   </mx:HTTPService>
   
   <mx:HTTPService  
    id="getRequest" 
    url="http://localhost/gnomex/GetRequest.gx"
    destination="getRequest"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetRequest(event)"
    method="POST"
    useProxy="false">
  </mx:HTTPService>

  <mx:HTTPService  
    id="getRequestDownloadList" 
    url="http://localhost/gnomex/GetRequestDownloadList.gx"
    destination="getRequestDownloadList"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetRequestDownloadList(event)"
    method="POST"
    useProxy="false">
    <mx:request>
            <idLab>{labCombo.selectedItem.@idLab}</idLab>
            <idAppUser>{userCombo.selectedItem.@idLab}</idAppUser>
            <idProject>{projectCombo.selectedItem.@idProject}</idProject>
            <requestNumber>{requestNumber.text}</requestNumber>
            <createDateFrom>{parentApplication.formatDate(requestDateFrom.selectedDate)}</createDateFrom>
            <createDateTo>{parentApplication.formatDate(requestDateTo.selectedDate)}</createDateTo>
            <requestDateLastWeek>{requestDateLastWeekCheckBox.selected == true ? "Y" : "N"}</requestDateLastWeek>
            <requestDateLastMonth>{requestDateLastMonthCheckBox.selected == true ? "Y" : "N"}</requestDateLastMonth>
            <requestDateLastYear>{requestDateLastYearCheckBox.selected == true ? "Y" : "N"}</requestDateLastYear>
            <isComplete>{isCompleteCheckBox.selected == true ? "Y" : "N"}</isComplete>
            <isNotComplete>{isNotCompleteCheckBox.selected == true ? "Y" : "N"}</isNotComplete>
            <searchPublicProjects>{includePublicProjectsCheckBox.selected == true ? "Y" : "N"}</searchPublicProjects>
    </mx:request>
    </mx:HTTPService >	
	   <mx:Script> 
        <![CDATA[
        
        import mx.rpc.events.ResultEvent;   
        import mx.collections.XMLListCollection;
        
        public var selectedIdRequest:Object;
        
        [Bindable]
        public var selectedExperiment:Object;
        

       private function initFilter():void {
       	parentApplication.filteredProjectList.filterFunction = filterProject;
       }
       
       
        private function setResultsCount():void {
        	downloadView.setResultsCount();
        }
        
        private function getBrowseTreeLabel(item:Object):String {
        	var label:String = item.@label;
        	
        	if (item.name() == "Request") {
        		label = item.@requestNumber;
        	}
        	return label;
        }
        
        

        private function filterProject(item:Object):Boolean {
        	if (item.@idProject == null || item.@idProject == "") {
        		return true;
        	}
        	
        	var doesMatchGroup:Boolean = true;
        	if (labCombo.selectedItem != null && labCombo.selectedItem.@idLab != null && labCombo.selectedItem.@idLab != "") {
        		if (item.@idLab == labCombo.selectedItem.@idLab) {
        			doesMatchGroup = true;
        		} else {
        			doesMatchGroup = false;
        		}
        	} else {
        		doesMatchGroup = false;
        	}
        	
        	return doesMatchGroup;
        }  
        
        private function onGetRequestDownloadList(event:ResultEvent): void {        	
        	setResultsCount();
        }
        private function onGetProjectRequestList(event:ResultEvent): void {  
        	expandAllBrowseNodes();      	
        }
        
        
	    private function expandAllBrowseNodes():void
  		{
  			browseTree.openItems = getProjectRequestList.lastResult..Lab;
  			//browseTree.openItems = getProjectRequestList.lastResult..Project;
  			browseTree.validateNow();
  			treeContainer.validateNow();
  		}
  		
  		private function collapsAllBrowseNodes():void {
  			browseTree.openItems = [];
  		}

		private function onBrowseTree():void {
			if (browseTree.selectedItem.name() == 'Request') {
				selectedIdRequest = browseTree.selectedItem.@idRequest;
				var parms:Object = new Object();
				parms.idRequest = selectedIdRequest;
				getRequest.send(parms);
				
			} else {
				theViews.selectedIndex=1;
				browseView.expandAllNodes();
				browseView.setResultsCount();
			}
		}
		
		private function onGetRequest(event:ResultEvent):void {
			selectedExperiment = getRequest.lastResult.Request.(@idRequest == selectedIdRequest);
		    theViews.selectedIndex = 2;
		}
		public function getTreeIcon(item:Object):Class {
				if (item.name() == "Lab") {
					return parentApplication.iconGroup;
				} else if (item.name() == "Project") {
					return parentApplication.iconProject;
				} else if (item.name() == "RequestCategory") {
					return parentApplication.iconCategory;
				} else if (item.name() == "Request" &&
				           item.@codeRequestCategory == "QC") {
					return parentApplication.iconQC;
				}else {
					return parentApplication.iconExperiment;
				}
		}
		
       ]]>
    </mx:Script>
    
    
    
	<mx:HDividedBox height="100%" width="100%">
	
		<mx:Accordion width="220" height="100%" 
			 fillColors="[#fee789, #ffffff]"
			headerHeight="25" backgroundAlpha=".3" fillAlphas="[1, .7]" focusEnabled="true" borderStyle="outset">
			<mx:Canvas label="Experiments" width="100%" height="100%">
						<mx:VBox width="100%" height="100%" paddingTop="8" paddingLeft="6">
									<mx:VBox width="100%" verticalGap="0">
										<mx:Label text="Group">
										</mx:Label>
										<mx:ComboBox id="browseLabCombo" 
											labelField="@name"
											dataProvider="{parentApplication.promptedLabList}"
											 change="getProjectRequestList.send()"  width="205">
										</mx:ComboBox>
									</mx:VBox>
									<mx:VBox id="treeContainer" width="100%" height="100%">
									<mx:Tree width="100%" height="100%" 
										dataProvider="{getProjectRequestList.lastResult}" 
										showRoot="false" 
										 labelFunction="getBrowseTreeLabel"
										id="browseTree" click="onBrowseTree()" 
										backgroundAlpha=".1" borderStyle="none"
										iconFunction="getTreeIcon"></mx:Tree>
										
									</mx:VBox>
						</mx:VBox>
					</mx:Canvas>
			<mx:Canvas label="Download Experiments" width="100%" height="100%" fontSize="9">
						<mx:Form  paddingLeft="4" paddingTop="6" paddingRight="2" paddingBottom="2"  height="100%" verticalGap="3">
							<mx:HBox width="100%" horizontalAlign="left" paddingRight="7" paddingTop="6" paddingBottom="14">
								<mx:Button click="{getRequestDownloadList.send()};theViews.selectedIndex=3" fontSize="10" icon="@Embed('../assets/find.png')" toolTip="Get download list"/>
							</mx:HBox>
							<mx:VBox width="100%" verticalGap="0">
								<mx:Label text="Group">
								</mx:Label>
								<mx:ComboBox id="labCombo" 
									labelField="@name"
									dataProvider="{parentApplication.promptedLabList}"
									 change="parentApplication.filteredProjectList.refresh();projectCombo.selectedIndex=0;labCombo.selectedIndex &gt; 0 ? projectCombo.enabled = true : projectCombo.enabled = false;"  width="205" selectedIndex="1">
								</mx:ComboBox>
							</mx:VBox>
							<mx:VBox width="100%" verticalGap="0">
								<mx:Label text="Requester">
								</mx:Label>
								<mx:ComboBox id="userCombo"
									labelField="@displayName"
									dataProvider="{parentApplication.promptedAppUserList}"  width="205">
								</mx:ComboBox>
							</mx:VBox>
							<mx:VBox width="100%" verticalGap="0">
								<mx:Label text="Project">
								</mx:Label>
								<mx:ComboBox id="projectCombo" 
									labelField="@name"
									creationComplete="callLater(initFilter)" 
									dataProvider="{parentApplication.filteredProjectList}" maxWidth="250" width="205" enabled="false"/>
							</mx:VBox>
							<mx:HBox width="100%">
							<mx:VBox verticalGap="0">
								<mx:Label text="Request #">
								</mx:Label>
								<mx:TextInput width="60" id="requestNumber"></mx:TextInput>
							</mx:VBox>
							<mx:VBox verticalGap="0" paddingTop="4" paddingLeft="0" paddingRight="0" paddingBottom="0">
								<mx:CheckBox label="Completed" id="isCompleteCheckBox"/>
								<mx:CheckBox label="Not Completed" id="isNotCompleteCheckBox"/>
							</mx:VBox>
								
							</mx:HBox>
							<mx:VBox verticalGap="0">
								<mx:Label text="Request Date"/>
							<mx:VBox width="100%" height="100%" verticalGap="0" paddingLeft="5">
							<mx:HBox width="100%" horizontalGap="1">
								<mx:DateField id="requestDateFrom" editable="true" yearNavigationEnabled="true" fontSize="9"/>
								<mx:Label text="-" textAlign="center"/>
								<mx:DateField id="requestDateTo" yearNavigationEnabled="true" editable="true" fontSize="9"/>
							</mx:HBox>
							<mx:VBox width="100%" horizontalGap="1" verticalGap="0">
								<mx:CheckBox label="Last Week" id="requestDateLastWeekCheckBox">
									<mx:click>
									{if (requestDateLastWeekCheckBox.selected == true) {
										requestDateLastMonthCheckBox.selected = false;
										requestDateLastYearCheckBox.selected = false;
									}
								    }
								    </mx:click>
								</mx:CheckBox>
								<mx:CheckBox label="Last Month"  id="requestDateLastMonthCheckBox">
									<mx:click>
									{if (requestDateLastMonthCheckBox.selected == true) {
										requestDateLastWeekCheckBox.selected = false;
										requestDateLastYearCheckBox.selected = false;
									}
								    }
								    </mx:click>
								</mx:CheckBox>
								<mx:CheckBox label="Last Year"  id="requestDateLastYearCheckBox">
									<mx:click>
									{if (requestDateLastYearCheckBox.selected == true) {
										requestDateLastMonthCheckBox.selected = false;
										requestDateLastWeekCheckBox.selected = false;
									}
								    }
								    </mx:click>
								</mx:CheckBox>
							</mx:VBox>
							</mx:VBox>
								
							</mx:VBox>
							<mx:HBox width="100%">
								<mx:CheckBox label="Include public projects in search" id="includePublicProjectsCheckBox" selected="true"/>
							</mx:HBox>
						</mx:Form>
			</mx:Canvas>
			
			<mx:Canvas label="Submit Request" width="100%" height="100%">
			</mx:Canvas>
			<mx:Canvas label="Track Requests" width="100%" height="100%">
			</mx:Canvas>
			<mx:Canvas label="Set Visibility" width="100%" height="100%">
			</mx:Canvas>
		</mx:Accordion>
			

		
       <mx:Canvas height="100%" dropShadowEnabled="true" dropShadowColor="#C0C0C0" width="100%">
	     <mx:ViewStack id="theViews" creationPolicy="all" width="100%" height="100%">
	        <mx:Canvas label="" width="100%" height="100%" borderStyle="inset">	        	
	        </mx:Canvas>

	        <views:ExperimentBrowseView id="browseView" width="100%" height="100%">
	        </views:ExperimentBrowseView>

	        <views:ExperimentDetailView id="detailView" width="100%" height="100%">
	        </views:ExperimentDetailView>

	        <views:DownloadView id="downloadView" width="100%" height="100%">
	        </views:DownloadView>
	        
	        <views:SubmitRequestView id="SubmitRequestView" width="100%" height="100%">	
	        </views:SubmitRequestView>
	        
	        <views:TrackRequestsView id="TrackRequestsView" width="100%" height="100%">
	        </views:TrackRequestsView>
	        
	        
	        


         </mx:ViewStack>
		</mx:Canvas>
		
	</mx:HDividedBox>
	
	
	

    
</mx:Canvas>
