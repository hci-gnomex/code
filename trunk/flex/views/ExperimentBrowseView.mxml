<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:views="views.*">


   <mx:HTTPService  
    id="getRequest" 
    url="http://localhost/gnomex/GetRequest.gx"
    destination="getRequest"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetRequest(event)"
    method="POST"
    useProxy="false">
  </mx:HTTPService>

  
 <mx:Script>
 	<![CDATA[
 		import mx.controls.Alert;
 	
 	import mx.rpc.events.ResultEvent;

	
 	[Bindable]
    private var rowCountMessage:String = new String();
    
    [Bindable]
    public var selectedExperiment:Object;
    
    private var selectedIdRequest:int;

    public function setResultsCount():void {
    	rowCountMessage = parentDocument.browseTree.selectedItem..Request.length() + " experiments.";
    }
    
    private function getFullName(item:Object, col:int):String {
    	return item.@ownerLastName + ", " + item.@ownerFirstName;
    }

    private function getRequestKind(item:Object, col:int):String {
    	var de:XMLList = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry.(@value == item.@codeRequestCategory);
    	if (de.length() == 1) {
	    	return de[0].@display;
    	} else {
    		return "";
    	}
    }
    private function getExperimentKind(item:Object, col:int):String {
    	if (item.@codeMicroarrayCategory == "") {
    		return getRequestKind(item, col);
    	} else {
	    	var de:XMLList = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.MicroarrayCategory').DictionaryEntry.(@value == item.@codeMicroarrayCategory);
	    	if (de.length() == 1) {
		    	return de[0].@display;    		
	    	} else {
	    		return getRequestKind(item, col);
	    	}
    		
    	}
    }
    
  	public function refreshDownloadList():void {
		if (theViews.selectedIndex == 1) {
			var params:Object = new Object();
			if (parentDocument.selectedIdLab != null) {
				params.idLab = parentDocument.selectedIdLab;				
			} 
			if (parentDocument.selectedIdProject != null) {
				params.idProject = parentDocument.selectedIdProject;
			}
			downloadView.getRequestDownloadList.send(params);
			
		}
	}
	
	public function refreshTrackList():void {
		if (theViews.selectedIndex == 2) {
			var params:Object = new Object();
			if (parentDocument.selectedIdLab != null) {
				params.idLab = parentDocument.selectedIdLab;				
			} 
			if (parentDocument.selectedIdProject != null) {
				params.idProject = parentDocument.selectedIdProject;
			}
			if (trackView.progressList != null) {
				trackView.progressList.removeAll();
				trackView.progressList.refresh();
			}
			trackView.getRequestProgressList.send(params);
			
		}		
	}
    
    private function getGridRowNumber(item:Object,col:int):String
    {
       var x:int = browseList.getItemIndex(item) + 1;
       return String(x);
    } 
    
  	
  	private function onExperimentRowSelected():void {
		selectedIdRequest = experimentList.selectedItem.@idRequest;
		
		var parms:Object = new Object();
		parms.idRequest = selectedIdRequest;
		getRequest.send(parms);
  	}

  	private function onExperimentNodeSelected():void {

  	}
  	
  	private function onGetRequest(event:ResultEvent):void {
		selectedExperiment = getRequest.lastResult.Request.(@idRequest == selectedIdRequest);
	    theDetailViews.visible = true;
	    theDetailViews.selectedIndex = 1;
	    theDetailViews.percentHeight = 100;
	    detailView.validateNow();
	    
	    
	}
   public function getTreeIcon(item:Object):Class {
				if (item.name() == "Lab") {
					return parentApplication.iconGroup;
				} else if (item.name() == "Project") {
					return parentApplication.iconProject;
				} else if (item.name() == "RequestCategory") {
					return parentApplication.iconCategory;
				} else if (item.name() == "Request" &&
				           item.@codeRequestCategory == "QC") {
					return parentApplication.iconQC;
				}else {
					return parentApplication.iconExperiment;
				}	
	}   
	
	private function onViewSwitch():void {
		this.refreshDownloadList();
		this.refreshTrackList();
	}

 	]]>
 </mx:Script>
 
    <mx:XMLListCollection id="browseList" source="{parentDocument.getProjectRequestList.lastResult..Request}"/>
 
     <mx:VDividedBox width="100%" height="100%" verticalGap="30" dividerColor="#004080" borderStyle="none">
		<mx:VBox width="100%" height="100%" paddingLeft="8" paddingRight="4" paddingTop="8" paddingBottom="4">
		
		    <mx:HBox width="100%" verticalAlign="middle" horizontalGap="2">
				<mx:HBox  verticalAlign="middle">
			        <mx:ToggleButtonBar dataProvider="{theViews}" fontFamily="Arial" itemClick="onViewSwitch()">
			        </mx:ToggleButtonBar>
			        <mx:Spacer width="100"/>
			    </mx:HBox>
		
				<mx:HBox horizontalAlign="right" width="100%">
				  <mx:Label id="rowCountLabel" width="100%" text="{rowCountMessage}" textAlign="right"/>
				</mx:HBox>
			    	
		    </mx:HBox>
				
				   
		             
		     <mx:ViewStack id="theViews" width="100%" height="100%">
		       <mx:VBox  width="100%" height="100%" 
		       	icon="@Embed('../assets/application_view_detail.png')" 
		       	label="Browse" visible="false">
			       <mx:DataGrid  id="experimentList" dataProvider="{parentDocument.browseTree.selectedItem..Request}"  
			       	width="100%" height="100%" fontSize="9" borderColor="#c0c0c0" borderStyle="outset" cornerRadius="4" 
			       	itemDoubleClick="onExperimentRowSelected()" doubleClickEnabled="true">
			         <mx:columns>
			            <mx:DataGridColumn headerText=" " 
			            	width="10" 
			            	editable="true"                        	
			            	dataField="@isSelected" 
			            	editorDataField="selected" 
			            	itemRenderer="views.CheckBoxIsSelected">
			            </mx:DataGridColumn>
				       	<mx:DataGridColumn headerText="Group" width="40" dataField="@labName"/>
				        <mx:DataGridColumn headerText="Requester" width="40" labelFunction="getFullName"/>
				       	<mx:DataGridColumn headerText="Project" width="40" dataField="@projectName"/>
				       	<mx:DataGridColumn headerText="Experiment Kind" width="40" labelFunction="getExperimentKind"/>
				       	<mx:DataGridColumn headerText="#" width="30" dataField="@requestNumber"/>
				       	<mx:DataGridColumn headerText="Date" width="42" dataField="@requestCreateDateDisplay"/>
				       	<mx:DataGridColumn headerText="Microarray" width="100" dataField="@slideProductName"/>
			         </mx:columns>
			       </mx:DataGrid> 	       	
		       </mx:VBox>
		       
	
				<views:ExperimentDownloadView id="downloadView" label="Downloads" icon="@Embed('../assets/folder_go.png')" >
				</views:ExperimentDownloadView>
				
	 			<views:ExperimentTrackView id="trackView" label="Track" icon="@Embed('../assets/application_go.png')" >
				</views:ExperimentTrackView>
				
		     	

		     	
		     </mx:ViewStack>
		
		     
		</mx:VBox>
		
		<mx:ViewStack id="theDetailViews" width="100%" height="0" visible="true" borderStyle="inset" paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10">
		
			<mx:Canvas width="100%">
			</mx:Canvas>
			
			<views:ExperimentDetailView id="detailView">
			</views:ExperimentDetailView>

			
		</mx:ViewStack>
    	
    </mx:VDividedBox>
	



</mx:Canvas>


