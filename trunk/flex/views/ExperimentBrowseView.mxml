<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:views="views.*">


   <mx:HTTPService  
    id="getRequest" 
    url="http://localhost/gnomex/GetRequest.gx"
    destination="getRequest"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onGetRequest(event)"
    method="POST"
    useProxy="false">
  </mx:HTTPService>

  
 <mx:Script>
 	<![CDATA[
 	import mx.rpc.events.ResultEvent;

 	[Bindable]
    private var rowCountMessage:String = new String();
    
    [Bindable]
    public var selectedExperiment:Object;
    
    private var selectedIdRequest:int;

    public function setResultsCount():void {
    	rowCountMessage = parentDocument.browseTree.selectedItem..Request.length() + " experiments.";
    }
        
    public function getFullName(item:Object, col:int):String {
    	return item.@ownerLastName + ", " + item.@ownerFirstName;
    }

    public function getRequestKind(item:Object, col:int):String {
    	var de:XMLList = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry.(@value == item.@codeRequestCategory);
    	if (de.length() == 1) {
	    	return de[0].@display;
    	} else {
    		return "";
    	}
    }
    public function getExperimentKind(item:Object, col:int):String {
    	if (item.@codeMicroarrayCategory == "") {
    		return getRequestKind(item, col);
    	} else {
	    	var de:XMLList = parentApplication.manageDictionaries.lastResult.Dictionary.(@className == 'hci.gnomex.model.MicroarrayCategory').DictionaryEntry.(@value == item.@codeMicroarrayCategory);
	    	if (de.length() == 1) {
		    	return de[0].@display;    		
	    	} else {
	    		return getRequestKind(item, col);
	    	}
    	}
    }
    
    public function refreshBrowseList():void {
    	if (theViews.selectedChild == browseView) {
    		if (browseView.selectedChild == projectDetailView) {
    			projectDetailView.checkSecurity();
    		}
    	}
    }
    
  	public function refreshDownloadList():void {
		if (theViews.selectedIndex == 1) {
			var params:Object = new Object();
			if (parentDocument.selectedIdLab != null) {
				params.idLab = parentDocument.selectedIdLab;				
			} 
			if (parentDocument.selectedIdProject != null) {
				params.idProject = parentDocument.selectedIdProject;
			}
			downloadView.getRequestDownloadList.send(params);
		}
	}
	
	public function refreshTrackList():void {
		if (theViews.selectedIndex == 2) {
			var params:Object = new Object();
			if (parentDocument.selectedIdLab != null) {
				params.idLab = parentDocument.selectedIdLab;				
			} 
			if (parentDocument.selectedIdProject != null) {
				params.idProject = parentDocument.selectedIdProject;
			}
			if (trackView.progressList != null) {
				trackView.progressList.removeAll();
				trackView.progressList.refresh();
			}
			trackView.getRequestProgressList.send(params);
			
		}		
	}
	
	public function refreshVisibilityList():void {
		if (theViews.selectedIndex == 3) {
			visibilityView.checkSecurity();
			visibilityView.setVisibilityCombo();
		}
	}
    
    private function getGridRowNumber(item:Object,col:int):String
    {
       var x:int = browseList.getItemIndex(item) + 1;
       return String(x);
    } 
  	
  	private function onExperimentRowSelected():void {
		selectedIdRequest = experimentList.selectedItem.@idRequest;
		
		var parms:Object = new Object();
		parms.idRequest = selectedIdRequest;
		getRequest.send(parms);
  	}

  	private function onGetRequest(event:ResultEvent):void {
		selectedExperiment = getRequest.lastResult.Request.(@idRequest == selectedIdRequest);
		parentDocument.selectedExperiment = selectedExperiment;
		parentDocument.theViews.selectedChild = parentDocument.detailView;
	}

	private function onViewSwitch():void {
		this.refreshBrowseList();
		this.refreshDownloadList();
		this.refreshTrackList();
		this.refreshVisibilityList();
		
		if (theViews.selectedChild == browseView ) {
			if (browseView.selectedChild == projectDetailView) {
				buttonStack.selectedChild = saveProjectButtonView;
			} else {
				buttonStack.selectedChild = browseButtonView;
			}
		} else if (theViews.selectedChild == trackView) {
			buttonStack.selectedChild = trackButtonView;
		} else if (theViews.selectedChild == visibilityView) {
			buttonStack.selectedChild = saveVisibilityButtonView;
		} else if (theViews.selectedChild == downloadView) {
			if (downloadView.theTab.selectedIndex == 0) {
				buttonStack.selectedChild = downloadFoldersButtonView;			
			} else {
				buttonStack.selectedChild = downloadFilesButtonView;
			}
		}
	}
	
	private function onBrowseTabSwitch():void {
		if (browseView.selectedChild == projectDetailView) {
			projectDetailView.checkSecurity();
			buttonStack.selectedChild = saveProjectButtonView;
		} else {
			buttonStack.selectedChild = browseButtonView;
		}
	}
	


 	]]>
 </mx:Script>
 
    <mx:XMLListCollection id="browseList" source="{parentDocument.getProjectRequestList.lastResult..Request}"/>
 
		<mx:VBox width="100%" height="100%" paddingLeft="2" paddingRight="2" paddingTop="0" paddingBottom="2">
		
		    
		        <mx:ApplicationControlBar 
		        	width="100%" 
		        	id="linkBar" dock="true" fillAlphas="[.8, .5]" 
		        	paddingBottom="1" paddingLeft="1" paddingRight="1" paddingTop="1">
		        
					<mx:HBox  verticalAlign="middle" width="100%" horizontalAlign="left">
				        <mx:LinkBar dataProvider="{theViews}" 
				        	itemClick="onViewSwitch()" 
				        	useHandCursor="true" styleName="linkBar"  >
				        </mx:LinkBar>
				        
				        <mx:VRule height="20"/>
		
		                <mx:ViewStack  id="buttonStack"  width="100%" >
		                    <mx:HBox  horizontalAlign="left" width="100%" id="browseButtonView" horizontalGap="2">
								<mx:Label text="{rowCountMessage}" width="100%" textAlign="right"/>
							    <mx:Button visible="false"/>
		                    </mx:HBox>
		                    <mx:HBox  horizontalAlign="left" width="100%" id="saveProjectButtonView" horizontalGap="2">
							    <mx:Button id="saveProjectButton" label="Save" 
							    	icon="@Embed('../assets/action_save.gif')" 
							    	click="projectDetailView.save()"  toolTip="Save project">
					            </mx:Button>
					            
								<mx:Button id="newProjectButton" icon="@Embed('../assets/folder_add.png')" label="New project" paddingLeft="1" paddingRight="0" horizontalGap="0" letterSpacing=".3"/>
								<mx:Button id="deleteProjectButton" icon="@Embed('../assets/folder_delete.png')" label="Delete project" paddingLeft="1" paddingRight="0" letterSpacing=".3" horizontalGap="0"/>
								
		                    </mx:HBox>
		                    <mx:HBox  horizontalAlign="left" width="100%" id="trackButtonView" horizontalGap="2">
								<mx:Label text="{rowCountMessage}" width="100%" textAlign="right"/>
		                    </mx:HBox>
		                	<mx:HBox  horizontalAlign="left" width="100%" id="saveVisibilityButtonView">
							    <mx:Button label="Save" id="saveVisibilityButton"
							    	icon="@Embed('../assets/action_save.gif')" 
							    	click="visibilityView.save()"  visible="true">
					            </mx:Button>
								<mx:Label text="{rowCountMessage}" width="100%" textAlign="right"/>
		                    </mx:HBox>
		                    <mx:HBox horizontalAlign="left"  width="100%" id="downloadFoldersButtonView">
							    <mx:Button id="downloadFoldersButton" 
							    	click="downloadView.downloadFolders()" 
							    	icon="@Embed('../assets/icon_download.gif')" 
							    	toolTip="Download selected folders"
							    	label="Download" 
							    	visible="true"/>
								<mx:Label text="{rowCountMessage}" width="100%" textAlign="right"/>
		                    </mx:HBox>		                    
		                    <mx:HBox horizontalAlign="left"  width="100%" id="downloadFilesButtonView">
							     <mx:Button id="downloadFilesButton" 
							      	click="downloadView.downloadFiles()" 
							      	icon="@Embed('../assets/icon_download.gif')" 
							      	toolTip="Download selected files"
							      	label="Download"/>
								<mx:Label text="{rowCountMessage}" width="100%" textAlign="right"/>
		                    </mx:HBox>		                    
		                    
		                	
		                </mx:ViewStack>
				    </mx:HBox>
		        </mx:ApplicationControlBar>
			    	
		    	
				   
		             
		<mx:ViewStack id="theViews" width="100%" height="100%">
		       <mx:TabNavigator id="browseView" width="100%" height="100%" 	
		       	    icon="@Embed('../assets/application_view_detail.png')" 
			       	label="Browse" visible="false" 
			        change="onBrowseTabSwitch()">
			       <mx:VBox  width="100%" height="100%" label="Experiments">
				       <mx:DataGrid  id="experimentList" dataProvider="{parentDocument.browseTree.selectedItem..Request}"  
				       	width="100%" height="100%" 
				       	itemDoubleClick="onExperimentRowSelected()" doubleClickEnabled="true">
				         <mx:columns>
				            <mx:DataGridColumn headerText=" " 
				            	width="10" 
				            	editable="true"                        	
				            	dataField="@isSelected" 
				            	editorDataField="selected" 
				            	itemRenderer="views.CheckBoxIsSelected"/>
				            <mx:DataGridColumn width="28" headerText="#">
				                <mx:itemRenderer>
				                    <mx:Component >
				                        <mx:HBox  horizontalGap="0" >
				                          <mx:Image id="experimentImage"  source="../assets/color_swatch.png">
				                    	 </mx:Image> 
				                           <mx:Label id="requestNumber" text="{data.@requestNumber}">
				                           </mx:Label>
				                        </mx:HBox>
				                    </mx:Component>
				                </mx:itemRenderer>
				            </mx:DataGridColumn> 
					       	<mx:DataGridColumn headerText="Date" width="20" dataField="@requestCreateDateDisplay"/>
					        <mx:DataGridColumn headerText="Requester" width="40" labelFunction="getFullName"/>
					       	<mx:DataGridColumn headerText="Project" width="40" dataField="@projectName"/>
					       	<mx:DataGridColumn headerText="Experiment Kind" width="40" labelFunction="getExperimentKind"/>
					       	<mx:DataGridColumn headerText="Microarray" width="100" dataField="@slideProductName"/>
				         </mx:columns>
				       </mx:DataGrid> 	    
				       
	
		       	   	
			       </mx:VBox>
			       
			       <views:ProjectDetailView id="projectDetailView" label="Project">
			       </views:ProjectDetailView>   
	     	   </mx:TabNavigator>
		       

	
				<views:ExperimentDownloadView id="downloadView" 
					label="Download List" 
					icon="@Embed('../assets/folder_go.png')">
				</views:ExperimentDownloadView>
				
	 			<views:ExperimentTrackView id="trackView" label="Track" icon="@Embed('../assets/application_go.png')" >
				</views:ExperimentTrackView>
				
	 			<views:ExperimentVisibilityView id="visibilityView" label="Visibility" icon="@Embed('../assets/lock.png')">
				</views:ExperimentVisibilityView>
				


		     	
		
		
		</mx:ViewStack>
		<mx:HBox width="100%">
		</mx:HBox>
	

</mx:VBox>

</mx:Canvas>


