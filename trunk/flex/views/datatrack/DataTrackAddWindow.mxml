<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	title="{'Add new data track to ' + parentName}"	
	showCloseButton="true" 
	width="458" 
	height="230" 
	close="closeWindow()"
	titleIcon="{parentApplication.iconDataTrackNew}"
	layout="vertical" backgroundAlpha="100" defaultButton="{saveButton}" >

    <mx:HTTPService             
      id="saveDataTrack" 
      url="SaveDataTrack.gx"
      resultFormat="e4x"
      result="onSaveDataTrack(event)"
      fault="parentApplication.onFailHttpRequest('Failed to add data track', event)"
      method="POST"
      useProxy="false">
      <mx:request>
         <name>{dataTrackName.text}</name>
         <idGenomeBuild>{genomeBuild.@idGenomeBuild}</idGenomeBuild>
         <idDataTrackFolder>{idParentDataTrackFolder}</idDataTrackFolder>
         <codeVisibility>{visibilityCombo.selectedItem != null ? visibilityCombo.selectedItem.@value : ''}</codeVisibility>
         <idLab>{this.labCombo.selectedItem != null ? labCombo.selectedItem.@idLab : ''}</idLab>
      </mx:request>
    </mx:HTTPService> 
    


<mx:Script>
	<![CDATA[
	
	import mx.collections.XMLListCollection;
	import mx.controls.Alert;
	import mx.managers.PopUpManager;
	import mx.rpc.events.ResultEvent;
	
	
	[Bindable]
	public var idParentDataTrackFolder:Object = null;
	[Bindable]
	public var parentName:Object = null;
	[Bindable]
	private var genomeBuild:Object = null;
	
	
	[Bindable]
	public var idDataTrack:Object = null;

	private var parentView:DisplayObject = null;

	private var itemToSelect:XML;

	public function init(genomeBuild:Object, parent:Object, parentView:DisplayObject, idLab:Object):void {
		this.parentView = parentView;
		this.genomeBuild = genomeBuild;
		if (parent != null) {
			this.idParentDataTrackFolder = parent.@idDataTrackFolder;
			parentName = parent.@label;			
		} else {
			parentName = genomeBuild.@name;
		}
		
		var idLab:Object = idLab;
		if (idLab == null) {
			if (!parentApplication.hasPermission('canWriteAnyObject') || 
				(parent != null && parent.@idLab != null && parent.@idLab != "")) {
				idLab = parent.@idLab;		
			}
		}
		// If the parent folder belongs to a user group or this is a non-admin
		// user, set the dataTrack
		// visibility to 'Members' and the user group combo
		// to the same user group.
		// Otherwise; set the visibility to 'PUBLIC'.
		if (idLab != null) {
			for each(var item:Object in parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.Visibility').DictionaryEntry) {
				if (item.@value == 'MEM') {
					this.visibilityCombo.selectedItem = item;
					break;
				}
			}
			for each (var g:Object in labCombo.dataProvider) {
				if (g.@idLab == idLab) {
					labCombo.selectedItem = g;
					break;
				}					
			}			
		} else {
			for each(var v:Object in parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.Visibility').DictionaryEntry) {
				if (v.@value == 'PUBLIC') {
					this.visibilityCombo.selectedItem = v;
					break;
				}
			}
			
		}

	}
		
	private function setDefaultVisibility():void {
		if (this.labCombo.selectedItem != null && this.labCombo.selectedItem.@idLab != "") {
			for each(var item:Object in parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.Visibility').DictionaryEntry) {
				if (item.@value == 'MEM') {
					this.visibilityCombo.selectedItem = item;
					break;
				}
			}
		}
	}
				
	

   	private function onSaveDataTrack(event:ResultEvent):void {
		if (saveDataTrack.lastResult.name() == "SUCCESS") {			
			closeWindow();
			itemToSelect = new XML(
			   "<DataTrack " +
			     " idDataTrack='" + saveDataTrack.lastResult.@idDataTrack + "'" +
			     " idDataTrackFolder='" + saveDataTrack.lastResult.@idDataTrackFolder  + "'" +
			     " idGenomeBuild='" + genomeBuild.@idGenomeBuild  + "'" +
				 " idLab='" + (labCombo.selectedItem != null ? labCombo.selectedItem.@idLab : '') + "'" +
			    "/>");
			if (parentView is NavDataTrackView) {
				NavDataTrackView(parentView).refreshDataTracksAndSelect(itemToSelect);
			} else if (parentView is DistributeDataTrackWindow) {
				DistributeDataTrackWindow(parentView).refreshDataTracksAndSelect(itemToSelect);
			}
			
			
		}else {
			Alert.show(saveDataTrack.lastResult..ACTMESSAGE.@TEXT);
		}		
	}

    private function closeWindow():void {
		PopUpManager.removePopUp(this);		
	}
	
	private function save():void {
		if (this.saveButton.label == 'Save') {
			saveDataTrack.send()
		}
	}
	]]>
</mx:Script>
    
    <mx:VBox id="mainBody" styleName="form" width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
        <mx:VBox width="100%" height="100%" id="vbox1" verticalGap="4">

			<mx:VBox  width="100%" verticalGap="0">
                <mx:Label text="Name:" width="100%" fontWeight="bold" id="label2"/>
			    <mx:HBox width="100%">
			    	<mx:TextArea id="dataTrackName"  width="100%" maxChars="2000"/>
			    </mx:HBox>
				
			</mx:VBox>
			
				<mx:VBox width="100%" verticalGap="0">
					<mx:Label text="Lab:" fontWeight="bold">
					</mx:Label>
					<mx:ComboBox id="labCombo" dataProvider="{parentApplication.promptedLabList}" width="100%" labelField="@name" change="{setDefaultVisibility()}">
					</mx:ComboBox>
				</mx:VBox>
					<mx:VBox width="100%" verticalGap="0">
					<mx:Label text="Visibility:" width="100%" fontWeight="bold" id="label3"/>
					<mx:HBox width="100%" id="visibilityBox">
						<mx:ComboBox id="visibilityCombo" dataProvider="{parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.Visibility').DictionaryEntry}" labelField="@display" width="100%"></mx:ComboBox>							        					
					</mx:HBox>
					</mx:VBox>
			            	
        </mx:VBox>
	

    	
    </mx:VBox>
	
	<mx:ControlBar horizontalAlign="right">
	    <mx:Button id="saveButton"  
			enabled="{dataTrackName.text != null &amp;&amp; dataTrackName.text != '' &amp;&amp; visibilityCombo.selectedItem != null &amp;&amp; visibilityCombo.selectedItem.@value != '' &amp;&amp; (visibilityCombo.selectedItem.@value == 'PUBLIC' || (labCombo.selectedItem != null &amp;&amp; labCombo.selectedItem.@idLab != '')) ? true : false}" 
			icon="{parentApplication.iconSave}" 
			disabledIcon="{parentApplication.iconSaveDisabled}" 
			label="Save"
			click="{save()}"/>
		<mx:Button id="cancelButton" label="Cancel" click="closeWindow()"/>
	</mx:ControlBar>
	


</mx:TitleWindow>
