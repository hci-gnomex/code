<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="Labeling"  xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	
	<mx:HTTPService 
    id="getWorkList" 
    url="http://localhost/gnomex/GetWorkItemList.gx"
    resultFormat="e4x"
    destination="getWorkList"
    showBusyCursor="true"
    result="onGetWorkList(event)"
	fault="onFailGetWorkList(event)"
    useProxy="false">
    <mx:request>
        <codeStepNext>LABEL</codeStepNext>
    </mx:request>
    </mx:HTTPService >
    
    <mx:HTTPService 
    id="saveWorkItemLabeling" 
    url="http://localhost/gnomex/SaveWorkItemLabeling.gx"
    resultFormat="e4x"
    destination="saveWorkItemLabeling"
    showBusyCursor="true"
    result="onSaveWorkItemLabeling(event)"
    fault="onFailSaveWorkItemLabeling(event)"
    method="POST"
    useProxy="false">
    <mx:request>
        <workItemXMLString>{dirtyWorkItems.toXMLString()}</workItemXMLString>
    </mx:request>
    </mx:HTTPService >
    
    <mx:XMLListCollection id="workList" source="{getWorkList.lastResult.WorkItem}"/>
    

    <mx:Script>
        <![CDATA[
        	import mx.collections.ArrayCollection;
        import mx.collections.XMLListCollection;
        import mx.rpc.events.FaultEvent; 
        import mx.rpc.events.ResultEvent;   
        import mx.controls.Alert;
        
        [Bindable]
        private var dirtyWorkItems:XMLListCollection;
        
        [Bindable]
        private var requestNumbers:ArrayCollection;
        
        private function refreshWorkList():void {
        	getWorkList.send();
        }
 
        private function getGridRowNumber(item:Object,col:int):String
        {
        	if (workList!= null) {
	           var x:int = workList.getItemIndex(item) + 1;
	           return String(x);     		
        	} else {
        		return "";
        	}
        }
                
        private function onEdit(event:Event):void {
        	workList.filterFunction = null;
        	workListGrid.selectedItem.@isDirty = "Y";
        }
        
        private function save():void {
        	var dirtyItems:XMLList = getWorkList.lastResult.WorkItem.(@isDirty == 'Y');        	
        	dirtyWorkItems = new XMLListCollection(dirtyItems);
        	saveWorkItemLabeling.send();
        }
        
        private function onGetWorkList(event:ResultEvent):void {
        	refreshRequestNumbers();
        }
        
        private function onFailGetWorkList(event:FaultEvent):void {
        	Alert.show("failed to get work list " + event.message);
        }
        
        private function onSaveWorkItemLabeling(event:ResultEvent):void {
        	if (saveWorkItemLabeling.lastResult.name() == "WorkItemList") {
        		
        	} else {
        		Alert.show(saveWorkItemLabeling.lastResult..ACTMESSAGE.@TEXT);
        	}        	
        }
        
        private function onFailSaveWorkItemLabeling(event:FaultEvent):void {
        	Alert.show("failed to save work list " + event.message);
        }
        
        private function refreshRequestNumbers():void {
        	requestNumbers = new ArrayCollection();

			var blankItem:Object = new Object();
			blankItem.data = "";
			blankItem.label = "";
        	requestNumbers.addItem(blankItem);
        	
        	for(var x:Number = 0; x < workList.length; x++) {
        		var item:Object = workList.getItemAt(x, 0);
        		
        		var found:Boolean = false;
        		for(var i:Number = 0; i < requestNumbers.length; i++) {
        			if (requestNumbers.getItemAt(i).label == item.@requestNumber) {
        				found = true;
        				break;
        			}
        		}
        		if (found == false) {
	    			var newItem:Object = new Object();
	    			newItem.data = item.@requestNumber;
	    			newItem.label = item.@requestNumber;
        			requestNumbers.addItem(newItem);
        		}
        	}
        }
        
        private function filterWorkList(item:Object):Boolean {
        	var keep:Boolean = true;
        	if (requestNumberCombo.selectedItem != null && requestNumberCombo.selectedItem.label != "") {
        		keep = false;
        		if (item.@requestNumber == requestNumberCombo.selectedItem.label) {
        			keep = true;
        		}
        	}        	
        	return keep;
        }
  
           

        ]]>
    </mx:Script> 
    
   
    <mx:VBox width="100%" height="100%">
    
    
        <mx:ApplicationControlBar width="100%" fillAlphas="[.8, .5]"  paddingBottom="1" paddingLeft="1" paddingRight="1" paddingTop="1">
            <mx:HBox horizontalAlign="left" width="170" verticalAlign="middle">
            <mx:Image source="@Embed('../assets/asterisk_yellow.png')" autoLoad="true"/>
            <mx:Label text="Labeling" textAlign="center"/>
            	
            </mx:HBox>
            <mx:VRule height="20"/>
            <mx:HBox width="100%" horizontalAlign="left">
            	<mx:Button label="Save" click="save()" icon="@Embed('../assets/action_save.gif')">
            	</mx:Button>
            	<mx:Button label="Refresh" icon="@Embed('../assets/action_refresh.gif')" 
            		click="refreshWorkList();"/>
            	<mx:VRule height="20"/>
            	<mx:HBox width="100%" horizontalAlign="right">
	            	<mx:Label text="Request #"/>
	            	<mx:ComboBox id="requestNumberCombo" 
	            		dataProvider="{requestNumbers}" 
	            		change="workList.filterFunction = filterWorkList;workList.refresh()"  
	            		width="70">
	            	</mx:ComboBox>
            		
            	</mx:HBox>
            	
            	
            </mx:HBox>
        	
        </mx:ApplicationControlBar>

		<mx:VBox width="100%" height="100%">
		<mx:DataGrid height="100%" id="workListGrid"  width="100%" dataProvider="{workList}" editable="true" itemEditEnd="onEdit(event)">
			<mx:columns>
				<mx:DataGridColumn editable="false" headerText=""  width="3" labelFunction="getGridRowNumber"/>
				<mx:DataGridColumn editable="false" headerText="Request #"  width="12" dataField="@requestNumber"/>
				<mx:DataGridColumn editable="false" headerText="Ready Date" width="15" dataField="@workItemCreateDate"/>
				<mx:DataGridColumn editable="false" headerText="Requester name"  width="20" dataField="@idAppUser" labelFunction="parentApplication.getUserName"/>
                <!-- <mx:DataGridColumn dataField="@idAppUser" 
                   width="20" textAlign="left"
                   headerText="Requester" 
                   sortable="false" 
                   editable="false"
                   rendererIsEditor="false"  itemRenderer="views.ComboBoxUser" /> -->
                <mx:DataGridColumn editable="false" headerText="Sample #" width="12" dataField="@sampleNumber"/>
				<mx:DataGridColumn editable="false"  headerText="Mod Nucleotide" width="15" dataField="@idLabel"/>
				<mx:DataGridColumn headerText="Labeling Protocol"  width="29" dataField="@idLabelingProtocol" 
                	editorDataField="value"
                   sortable="false" 
                   editable="true"
                   rendererIsEditor="true"  
                   itemRenderer="views.renderers.ComboBoxLabelingProtocol" />
	            <mx:DataGridColumn headerText="Labeling Yield" width="15" dataField="@labelingYield"/>
				<mx:DataGridColumn headerText="Reaction Size" width="15" 
					dataField="@codeLabelingReactionSize"
					editorDataField="value"
                   sortable="false" 
                   editable="true"
                   rendererIsEditor="true"  
                   itemRenderer="views.renderers.ComboBoxLabelingReactionSize" />
				<mx:DataGridColumn headerText="# Reactions" width="15" dataField="@numberOfReactions"/>
                <mx:DataGridColumn headerText="Status"  width="12" dataField="@labelingStatus" 
                	editorDataField="value"
                   sortable="false" 
                   editable="true"
                   rendererIsEditor="true"  
                   itemRenderer="views.renderers.ComboBoxWorkflowStatusLabeling" />
			</mx:columns>
		</mx:DataGrid>
			
	    </mx:VBox>
	  	
	  </mx:VBox>
					
						

</mx:Canvas>
