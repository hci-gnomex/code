<?xml version="1.0" encoding="utf-8"?>
<mx:CheckBox xmlns:mx="http://www.adobe.com/2006/mxml" change="updateDP()"
		 implements="mx.controls.listClasses.IDropInListItemRenderer"
		 selected="{txt == 'Y' ? true : false}">
	
	<mx:Script>
		<![CDATA[
			import hci.flex.renderers.RendererFactory;
			
			import mx.controls.AdvancedDataGrid;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridListData;
			import mx.controls.listClasses.BaseListData;
			import mx.controls.listClasses.ListData;
			import mx.core.IFactory;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import views.util.DirtyNote;
			
			private var _listData:DataGridListData;
			
			[Bindable]
			public var txt:String;
			
			[Bindable]
			public var allowMultipleChoice:Boolean;
			
			public var dirty:DirtyNote
			
			public static function create(dirty:DirtyNote=null, allowMultipleChoice:Boolean=true):IFactory {
				return RendererFactory.create(CheckBoxRenderer, {dirty:dirty, allowMultipleChoice:allowMultipleChoice});
			}		
			
			override public function set data(value:Object):void {
				super.data = value;
				
				if (_listData != null) {
					txt=data[_listData.dataField];					
				}
			}
			
			override public function get data():Object {
				return super.data;
			}
			
			override public function get listData():BaseListData
			{
				return _listData;
			}
			
			override public function set listData(value:BaseListData):void
			{
				_listData = DataGridListData(value);
			}
			
			
			public function updateDP():void{
				if (_listData != null) {
					if (this._listData.owner is DataGrid) {
						var dg:DataGrid=this._listData.owner as DataGrid;
						dg.dataProvider.itemUpdated(data);
						if (!this.allowMultipleChoice) {
							for(var i:int = 0; i < dg.dataProvider.length; i++) {
								var x:XML = dg.dataProvider[i];
								x[_listData.dataField] = "N";
							}
						}
					} else if (this._listData.owner is AdvancedDataGrid) {
						var adg:AdvancedDataGrid=this._listData.owner as AdvancedDataGrid;
						adg.dataProvider.itemUpdated(data);						
						if (!this.allowMultipleChoice) {
							for(var j:int = 0; j < adg.dataProvider.length; j++) {
								var ax:XML = adg.dataProvider[j];
								ax[_listData.dataField] = "N";
							}
						}
					}
					this.data[_listData.dataField] = this.selected ? "Y" : "N";
					if (dirty != null) {
						this.dirty.setDirty();
					}
				}
			}
			
			override protected function updateDisplayList(w:Number, h:Number):void
			{
				super.updateDisplayList(w, h);
				
				if (data == null || !(data is XML) || _listData == null) {
					this.visible = false;
					return;
				}
				

				var n:int = numChildren;
				for (var i:int = 0; i < n; i++)
				{
					var c:DisplayObject = getChildAt(i);
					if (!(c is TextField))
					{
						c.x = (w - c.width) / 2;
						c.y =(h - c.height) / 2;
					}
				}

			}        
		]]>
	</mx:Script>
	
</mx:CheckBox>


