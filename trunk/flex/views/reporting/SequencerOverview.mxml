<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="Experiment Overview"   
		   width="100%" height="100%"
		   xmlns:views="views.*"
		   xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:db="views.dashboard.*"
		   creationComplete="init()">

	<mx:HTTPService 
		id="metrixInterface" 
		url="MetrixServerInterface.gx"
		resultFormat="e4x"
		destination="MetrixServerInterface"
		showBusyCursor="true"
		result="onGetMetrixInterface(event)"
		fault="parentApplication.onFailHttpRequest('Unable to get metrix interface result', event)"
		useProxy="false">
		
	</mx:HTTPService>
	
	<mx:XMLListCollection id="MIList" source="{metrixInterface.lastResult.Summary}"/> 	
	
	<mx:Script>

		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.collections.XMLListCollection;
			import mx.controls.AdvancedDataGrid;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.CollectionEvent;
			import mx.events.CollectionEventKind;
			import mx.events.DragEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.controls.DateField;
			
			import views.util.PromptXMLListCollection;
			private var _dateformatter:DateFormatter = new DateFormatter();
			
			public function init():void {
				for each (var facility:XML in parentApplication.coreFacilitiesICanManage) {
					if(parentApplication.getCoreFacilityProperty(facility.@idCoreFacility, parentApplication.PROPERTY_SHOW_METRIX_DASHBOARD) == 'Y'){
						metrixInterface.send();
						break;
					}
				}
			}
			
			private function sortXLC():void {
				var dateSort:Sort = new Sort();
				dateSort.compareFunction = sortByDate;
				dateSort.fields = [new SortField("runDate")];
				MIList.sort = dateSort;
				MIList.refresh();
			}
			
			private function sortByDate(a:Object, b:Object, fields:Array):int{
				var dateOne:Date = DateField.stringToDate(a.runDate, "MM/DD/YYYY");
				var dateTwo:Date = DateField.stringToDate(b.runDate, "MM/DD/YYYY");
				
				return ObjectUtil.dateCompare(dateTwo, dateOne);
			}	
			
			private function formatLastUpdate(item:Object,column:AdvancedDataGridColumn):String{
				var dateArray:Array = item[column.dataField].substr(0, item[column.dataField].lastIndexOf(" ")).split("/");
				var year:String = dateArray[2];
				var month:String = dateArray[1];
				var day:String = dateArray[0];
				
				return month + "/" + day + "/" + year;
			}
			
			private function formatDate(item:Object,column:AdvancedDataGridColumn):String{
				var rawDate:String = item[column.dataField];
				var yr:String = rawDate.substr(0,2);
				var mn:String = rawDate.substr(2,2);
				var dy:String = rawDate.substr(4,2);
				
				var year:String = "20"+yr;
				
				var date:String = mn+"/"+dy+"/"+year;
				
				return date;
			}

			private function formatState(item:Object,column:AdvancedDataGridColumn):String{
				var rawState:int = item[column.dataField];
				
				if(rawState == 1){
					return "Running";
				}else if(rawState == 2){
					return "Finished";
				}else if(rawState == 3){
					return "Error";
				}else if(rawState == 4){
					return "Needs turning";
				}else if(rawState == 5){
					return "Initializing";
				}else{
					return "Unknown";
				}
			}			
			
			private function onGetMetrixInterface(event:ResultEvent):void {
				if(event.result.name() == "SummaryCollection"){
					sortXLC();
				} else {
					Alert.show(event.result..ERROR.@message.toString(), "Error setting up Metrix Interface.");
				}
			}			
			
		]]>
	</mx:Script>

	<mx:VBox id="mainContainer" width="100%" height="100%">
		<mx:VBox id="headerBox" width="100%" height="3%">
			<mx:Label id="headerLabel" fontSize="16" fontWeight="bold" text="Sequencing Run Overview" paddingTop="6"/>

		</mx:VBox>	

		<mx:AdvancedDataGrid id="sequencerOverview" width="100%" height="100%"
							 dragEnabled="false" sortExpertMode="false" sortableColumns="false"  
							 editable="false"
							 allowMultipleSelection="false"
							 dataProvider="{MIList}"
							>
			 
<!--			<mx:dataProvider>
				<mx:HierarchicalData source="{MIList}" />
			</mx:dataProvider>
-->			
			<mx:columns>
				<mx:AdvancedDataGridColumn  dataField="runId" editable="false" headerText="Run Id" width="100">
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn  dataField="runType" editable="false" headerText="Run Type" width="60">
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn  dataField="runState" editable="false" labelFunction="formatState" headerText="Run State" width="60">
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn headerText="Date" dataField="runDate" editable="false" width="60"/>
				<mx:AdvancedDataGridColumn  dataField="lastUpdated" editable="false" headerText="Last Updated"   width="32" />
				<mx:AdvancedDataGridColumn  dataField="currentCycle" editable="false" headerText="Current Cycle" width="60">
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn  dataField="totalCycle" editable="false" headerText="Total Cycle" width="60">
				</mx:AdvancedDataGridColumn>
				<mx:AdvancedDataGridColumn  dataField="instrument" editable="false" headerText="Instrument" width="60">
				</mx:AdvancedDataGridColumn>
			</mx:columns>
			
		</mx:AdvancedDataGrid>
	</mx:VBox>
</mx:Canvas>
