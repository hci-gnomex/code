<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:product="views.product.*" xmlns:renderers="views.renderers.*">
	
	
	<mx:HTTPService 
		id="getProductLedgerList" 
		url="GetProductLedgerList.gx"
		resultFormat="e4x"
		result="onGetProductLedgerList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get ledger entries', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="getProductList" 
		url="GetProductList.gx"
		resultFormat="e4x"
		result="onGetProductList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get product list entries', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	
	
	<mx:Script> 
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			
			
			
			private var selectedIdLab:String;
			private var selectedIdProduct:String;
			
			
			public function init():void{
				getProductLedgerList.send();
				getProductList.send();
				
			}
			
			private function onGetProductLedgerList(event:ResultEvent):void{
				if(getProductLedgerList.lastResult.name() != 'LedgerList'){
					Alert.show( event.result..ERROR.@message.toString(), "Error getting product ledger list" );	
				} else{
					
					for each(var lab:XML in browseTree.dataProvider){
						browseTree.expandItem(lab, true, false);
					}
					
					if(selectedIdLab != null && selectedIdProduct != null){
						reselectTreeItem();
					}
					
				}
				
			}
			
			private function onGetProductList(event:ResultEvent):void{
				if(getProductList.lastResult.name() != 'ProductList'){
					Alert.show( event.result..ERROR.@message.toString(), "Error getting product list" );	
				} else{
					var emptyNode:XML = <Product name="" idProduct="" />
					products.addItemAt(emptyNode, 0);
					productCombo.selectedIndex = -1;
					
					
				}
			}
			
			private function onBrowseTree():void{
				if(browseTree.selectedItem == null){
					return;
				}
				
				if(browseTree.selectedItem.name() == "product"){
					selectedIdLab = browseTree.selectedItem.@idLab;
					selectedIdProduct = browseTree.selectedItem.@idProduct;
					productEntryLedgerView.idLab = browseTree.selectedItem.@idLab;
					productEntryLedgerView.idProduct = browseTree.selectedItem.@idProduct;
					productEntryLedgerView.productCount = browseTree.selectedItem.@qty;
					productEntryLedgerView.productName = browseTree.selectedItem.@display;
					productEntryLedgerView.init();
				} else{
					productEntryLedgerView.idLab = null;
					productEntryLedgerView.idProduct = null;
					productEntryLedgerView.productCount = "";
					productEntryLedgerView.productName = "";
					productEntryLedgerView.init();
					
				}
			}
			
			private function reselectTreeItem():void{
				var index:int = 2;
				var found:Boolean = false;
				for each(var lab:XML in browseTree.dataProvider){
					index++;
					if(lab.@idLab == selectedIdLab){
						for each(var product:XML in lab.children()){
							index++;
							if(product.@idProduct == selectedIdProduct){
								browseTree.selectedIndex = index;
								found = true;
								break;
							}
						}	
					}
					
					if(found){
						break;
					}
				}
				
				onBrowseTree();
			}
			
			private function filterLedgerList():void{
				var params:Object = new Object();
				
				if(browseLabCombo.selectedIndex >= 0){
					params.idLab = browseLabCombo.selectedItem.@idLab;
				}
				
				if(productCombo.selectedIndex > 0){
					params.idProduct = productCombo.selectedItem.@idProduct;
				}
				
				getProductLedgerList.send(params);
			}
			
			
		]]>
	</mx:Script> 
	
	
	
	<mx:XMLListCollection id="labs" source="{getProductLedgerList.lastResult..Lab}"/>
	<mx:XMLListCollection id="products" source="{getProductList.lastResult..Product}"/>
	
	
	<mx:VBox id="vbox1" width="100%" height="100%" horizontalAlign="left" verticalGap="2">
		<mx:HBox width="100%" styleName="titleBox">
			<renderers:TitleLabel iconSource="{parentApplication.iconBasket}" titleText="Product Ledgers" />
			<mx:HBox horizontalGap="10" paddingTop="0" paddingLeft="0" horizontalAlign="left" verticalAlign="middle" width="100%">
				
				<mx:HBox verticalAlign="middle"  
						 visible="{parentApplication.submitRequestLabList.source.length() &gt; 1}"
						 includeInLayout="{parentApplication.submitRequestLabList.source.length() &gt; 1}">
					<mx:Label text="Lab:"/>
					<renderers:FilterComboBox dataProvider="{parentApplication.submitRequestLabList.source}"
											  editable="{parentApplication.submitRequestLabList.source.length() &gt; 1}"
											  enabled="{parentApplication.submitRequestLabList.source.length() &gt; 1}"
											  labelField="@name" 
											  prompt="Select a lab..."
											  width="160"  
											  selectedIndex="{parentApplication.submitRequestLabList.source.length() == 1 ? 0 : -1}"
											  id="browseLabCombo" fontSize="10"
											  close="{this.filterLedgerList()}">
					</renderers:FilterComboBox>
				</mx:HBox>
								
				<mx:Spacer width="5"/>
				<mx:Label text="Product:"/>
				<mx:ComboBox id="productCombo" dataProvider="{this.products}" labelField="@name" close="{this.filterLedgerList()}" selectedIndex="-1" fontSize="10"/>
			</mx:HBox>
		</mx:HBox>
		
		<mx:HDividedBox height="100%" width="100%" dividerAlpha="0" dividerThickness="3" dividerAffordance="0">	
			
			<mx:VBox styleName="panelBox" id="navPanel" height="100%" width="270">
				<mx:Tree width="100%" height="100%"  
						 dataProvider="{labs}" 
						 showRoot="false"
						 id="browseTree" click="onBrowseTree();" 
						 doubleClickEnabled="false" 
						 labelField="@display" allowMultipleSelection="false" 
						 iconFunction="parentApplication.getTreeIcon" backgroundAlpha="1" dropShadowEnabled="true" borderStyle="none">
				</mx:Tree>
				
			</mx:VBox>
			
			
			<!-- Box 2 -->
			<mx:VBox height="100%" width="100%">
				<product:ProductLedgerView id="productEntryLedgerView" width="100%" height="100%" />
			</mx:VBox>
			
		</mx:HDividedBox>
	</mx:VBox>
	
</mx:Canvas>
