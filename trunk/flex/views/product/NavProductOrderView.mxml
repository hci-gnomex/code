<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"     
		   label="Order" width="100%" height="100%" 
		   xmlns:views="views.*"
		   xmlns:product="views.product.*"
		   xmlns:util="views.util.*"
		   xmlns:experiment="views.experiment.*"
		   xmlns:renderers="views.renderers.*"
		   creationPolicy="all" creationComplete="init()" 
		   cornerRadius="10" >
	
	<mx:HTTPService 
		id="getProductOrderList" 
		url="GetProductOrderList.gx"
		resultFormat="e4x"
		result="onGetProductOrderList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get order list', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="changeProductOrderStatus" 
		url="ChangeProductOrderStatus.gx"
		resultFormat="e4x"
		result="onChangeProductOrderStatus(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to change product order status', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	
	<mx:Script> 
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var selectedProductOrder:Object;
			
			[Bindable]
			private var selectedOrders:Object = new Object();
			[Bindable]
			private var atLeastOneSelection:Boolean = false;
			private var isLabSelected:Boolean = false;
			
			private function init():void{
				getProductOrderList.send();
			}
			
			private function onGetProductOrderList(event:ResultEvent):void{
				if (getProductOrderList.lastResult.name() != "ProductOrderList"){
					Alert.show( event.result..ERROR.@message.toString(), "Error getting orders" );	
				} else {
					callLater(expandLabNodes);
				}
			}
			
			private function expandLabNodes():void {
				
				browseTree.expandItem( getProductOrderList.lastResult, true );
				
				for each ( var group:Object in getProductOrderList.lastResult..Lab ) {
					browseTree.expandItem( group, true );
				}
				
				browseTree.validateNow();
				treeContainer.validateNow();
			}
			
			private function onBrowseTree():void{
				
				if(browseTree.selectedItem.name() == "Lab"){
					this.productOrderOverView.titleLabel.text = "Product Orders for " + browseTree.selectedItem.@display;
					this.productOrderOverView.idLab = browseTree.selectedItem.@idLab;
					this.productOrderOverView.init();
					theViews.selectedChild = this.productOrderOverView;
					
				}
				
				if(browseTree.selectedItem.name() == "ProductOrder"){
					theViews.selectedChild = this.theTab;
					detailTab.idProductOrder = browseTree.selectedItem.@idProductOrder;
					lineItemTab.idProductOrder = browseTree.selectedItem.@idProductOrder;
					lineItemTab.init();
					detailTab.init();
				}
				
			}
			
			private function getProductOrders():void {
				getProductOrderList.send(getParams());
				browseView.getList();
			}
			
			public function getParams():Object{
				var params:Object = new Object;
				
				if ( this.pickDateRangeButton.fromDate != null && this.pickDateRangeButton.toDate != null ) {
					params.submitDateFrom = dateFormatter.format( this.pickDateRangeButton.fromDate );
					params.submitDateTo = dateFormatter.format( this.pickDateRangeButton.toDate );
				}
				if(browseLabCombo.selectedItem != null){
					params.idLab = browseLabCombo.selectedItem.@idLab;
				}
				if(toggleBar.selectedIndex==1 && orderStatusCombo.selectedItem != null){
					params.codeProductOrderStatus = orderStatusCombo.selectedItem.@codeProductOrderStatus;
				}
				
				return params;
			}
			
			private function selectOrders():void{
				selectedOrders = new Object();
				isLabSelected = false;
				atLeastOneSelection = false;
				//Get all of the product orders selected in tree.  If user has selected an entire lab
				//We will add all of the product orders from that lab to the selected list.
				for each(var po:XML in browseTree.selectedItems){
					if(po.name() == "Lab"){
						isLabSelected = true;
						for each(var child:XML in po.children()){
							selectedOrders[child.@idProductOrder] = child;
							atLeastOneSelection = true;
						}
					} else{
						selectedOrders[po.@idProductOrder] = po;
						atLeastOneSelection = true;
					}
				}	
			}
			
			private function changeStatus_handler():void{
				if(isLabSelected == true){
					Alert.show("You have selected an entire Lab, do you want to change the status of all orders in that Lab?", "Warning",(Alert.YES | Alert.NO), this, changeStatus_impl, parentApplication.iconWarning);
				} else{
					changeStatus();
				}	
			}
			
			private function changeStatus_impl(event:CloseEvent):void{
				if(event.detail == Alert.YES){
					changeStatus();
				} else{
					return;
				}
			}
			
			private function changeStatus():void{
				var params:Object = new Object();
				if ( toggleBar.selectedIndex==0 ){
					var orderCollection:XMLListCollection = new XMLListCollection();
					for(var key:String in selectedOrders){
						orderCollection.addItem(selectedOrders[key]);
					}
					params.selectedOrders = "<selectedOrders>" + orderCollection.toXMLString() + "</selectedOrders>";
				} else {
					params.selectedLineItems = "<selectedLineItems>" + browseView.selectedOrders.toXMLString() + "</selectedLineItems>";
				}
				params.codeProductOrderStatus = statusComboBox.selectedItem.@codeProductOrderStatus; 
				changeProductOrderStatus.send(params);
			}
						
			private function onChangeProductOrderStatus(event:ResultEvent):void{
				if(changeProductOrderStatus.lastResult.name() != 'SUCCESS'){
					Alert.show(changeProductOrderStatus.lastResult..ACTMESSAGE.@TEXT);
				} else{
					Alert.show("Product status updated");
					getProductOrders();
					onBrowseTree();
				}
			}
			
		]]>
	</mx:Script> 
	
	<mx:DateFormatter id="dateFormatter" formatString="MM/DD/YYYY"/>
	<mx:VBox id="vbox1" width="100%" height="100%" horizontalAlign="left" verticalGap="2">
		
		<mx:HBox width="100%" paddingRight="6" paddingTop="8" styleName="panelBox" paddingBottom="4" paddingLeft="6" borderThickness="1" horizontalGap="15">
			
			<mx:VBox  verticalGap="6" height="100%" width="100%">
				<mx:HBox horizontalGap="10" paddingTop="0" paddingLeft="0" horizontalAlign="left" verticalAlign="middle" width="100%">
					
					<mx:HBox horizontalGap="0" width="140" verticalAlign="middle" >
						<mx:Image source="assets/basket.png"/>
						<mx:Label text="Product Orders" styleName="titleLabel" width="124"/>	
					</mx:HBox>
					
					<mx:Spacer width="17"/>
					
					<mx:HBox>
						<mx:Label text="Lab:"/>
						<renderers:FilterComboBox dataProvider="{parentApplication.labList.source}" 
												  labelField="@name" 
												  prompt="Select a lab..."
												  width="160"  
												  id="browseLabCombo" fontSize="10">
						</renderers:FilterComboBox>
					</mx:HBox>
					
					<mx:HBox visible="{toggleBar.selectedIndex==1}" includeInLayout="{toggleBar.selectedIndex==1}">
						<mx:Label text="Status:"/>
						<mx:ComboBox id="orderStatusCombo"
									 dataProvider="{parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.ProductOrderStatus').DictionaryEntry}"
									 labelField="@productOrderStatus" />
					</mx:HBox>
					
					<mx:HBox height = "100%" verticalAlign = "middle">
						<renderers:LinkButtonDateRangeMenu id="pickDateRangeButton" />
					</mx:HBox>
					
					<mx:Button label="Search" icon="@Embed('../../assets/magnifier.png')" click="getProductOrders()"/>
					
					<mx:Spacer width="100%"/>
					
					<mx:ToggleButtonBar id="toggleBar" dataProvider="{viewStack}"/>
					
				</mx:HBox>
			</mx:VBox>
		</mx:HBox>
		
		<mx:VBox width = "100%" height = "100%" verticalGap = "1" styleName="panelBox">
			<mx:ViewStack id="viewStack" creationPolicy="all" visible="true" width="100%" height="100%" >
				
				
				<mx:HDividedBox id="detailView" label="Detail" height="100%" width="100%" dividerAlpha="0" dividerThickness="3" dividerAffordance="0">
					
					<mx:VBox styleName="panelBox"   width="270" height="100%" id="navPanel" >
						<mx:HBox width="100%" verticalAlign="middle" horizontalGap="0">
							<mx:Text id="messageLabel"  width="100%" fontStyle="normal" fontSize="10"/>
						</mx:HBox>
						<mx:VBox id="navContainer" width="100%" height="100%" verticalGap="0" paddingTop="0" >
							<mx:VBox id="treeContainer"  width="100%" height="100%" paddingLeft="2" verticalGap="0" >
								<mx:Tree width="100%" height="100%" 
										 dataProvider="{getProductOrderList.lastResult}" 
										 showRoot="false" 
										 id="browseTree" click="onBrowseTree(); selectOrders();" 
										 doubleClickEnabled="false" 
										 labelField="@display" allowMultipleSelection="true" 
										 iconFunction="parentApplication.getTreeIcon" 
										 backgroundAlpha="1" dropShadowEnabled="true" borderStyle="none">
								</mx:Tree>
								
							</mx:VBox>
						</mx:VBox>
					</mx:VBox>  
					
					<mx:ViewStack id="theViews" creationPolicy="all" visible="true" width="100%" height="100%">
						
						<mx:TabNavigator id="theTab"  styleName="form" width="100%"  
										 height="100%" paddingLeft="8"
										 paddingRight="4" paddingBottom="4"  paddingTop="6">
							<product:ProductOrderDetailTab id="detailTab"/>
							
							<product:LineItemDetailTab id="lineItemTab"/>
							
						</mx:TabNavigator>
						
						<product:ProductOrderOverview id="productOrderOverView"/>
						
					</mx:ViewStack>
					
				</mx:HDividedBox>
				
				<product:ProductOrderBrowseView id="browseView" label="Overview" parentView="{this}"/>
				
				
			</mx:ViewStack>
			<mx:ControlBar horizontalAlign="left" width="100%" paddingTop="0" paddingBottom="2">
				
				<mx:Label id="nSelectedOrders" text="{browseView.selectedOrders.length + ' selected'}" visible="{toggleBar.selectedIndex==1}" includeInLayout="{toggleBar.selectedIndex==1}"/>
				
				<mx:ComboBox id = "statusComboBox" 
							 prompt="- Change Status -" 
							 dataProvider="{parentApplication.dictionaryManager.xml.Dictionary.(@className=='hci.gnomex.model.ProductOrderStatus').DictionaryEntry}"
							 labelField="@productOrderStatus" />
				<mx:LinkButton textDecoration = "underline"
							   label = "Go"
							   icon = "@Embed('../../assets/bullet_go.png')"
							   disabledIcon="@Embed('../../assets/bullet_go_disable.png')"
							   toolTip = "Change status of selected orders" 
							   click="{changeStatus_handler()}" enabled="{atLeastOneSelection &amp;&amp; statusComboBox.selectedIndex > 0}"/>
				
				<!--<mx:LinkButton textDecoration="underline"
							   label="Delete"
							   icon="@Embed('../../assets/delete.png')"
							   toolTip="Delete selected orders"
							   click="{promptToDelete()}" 
							   disabledIcon="@Embed('../../assets/delete_disable.png')"
							   enabled="{selectedOrders.length>0}"/>
				
				<mx:LinkButton textDecoration="underline"
							   label="Email"
							   icon="@Embed('../../assets/email_go.png')"
							   toolTip="Email GNomEx users"
							   click="{showEmailWindow()}" 
							   disabledIcon="@Embed('../../assets/email_go_disable.png')"
							   enabled="{selectedOrders.length>0}"/>-->
				<mx:Spacer width="100%"/>
				<mx:Label text="{'(' + browseView.orderList.length + ' line items)'}" visible="{toggleBar.selectedIndex==1}" includeInLayout="{toggleBar.selectedIndex==1}" fontWeight = "normal" textAlign = "right"  fontStyle="italic"/>
			</mx:ControlBar>
			
		</mx:VBox>
		
	</mx:VBox>
	
</mx:Canvas>
